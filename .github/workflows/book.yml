name: book

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  merge_group:

jobs:
  test:
    runs-on: ubuntu-latest
    name: test
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy, rustfmt
          override: true

      - name: Install mdbook
        run: |
          curl -sSL https://github.com/rust-lang/mdBook/releases/download/v0.4.14/mdbook-v0.4.14-x86_64-unknown-linux-gnu.tar.gz | tar -xz
          echo $PWD >> $GITHUB_PATH

      - name: Install mdbook-template
        run: |
          curl -sSL https://github.com/sgoudham/mdbook-template/releases/latest/download/mdbook-template-x86_64-unknown-linux-gnu.tar.gz | tar -xz
          echo $PWD >> $GITHUB_PATH

      - name: Run tests
        run: ./mdbook test
        working-directory: ./book

  lint:
    runs-on: ubuntu-latest
    name: lint
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy, rustfmt
          override: true

      - name: Install mdbook-linkcheck
        run: |
          curl -sSL -o mdbook-linkcheck.zip https://github.com/Michael-F-Bryan/mdbook-linkcheck/releases/latest/download/mdbook-linkcheck.x86_64-unknown-linux-gnu.zip
          unzip mdbook-linkcheck.zip
          chmod +x mdbook-linkcheck
          echo $PWD >> $GITHUB_PATH

      - name: Run linkcheck
        run: ./mdbook-linkcheck --standalone
        working-directory: ./book

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - name: Install Nightly Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: clippy, rustfmt
          override: true

      - name: Install mdbook
        run: |
          curl -sSL https://github.com/rust-lang/mdBook/releases/download/v0.4.14/mdbook-v0.4.14-x86_64-unknown-linux-gnu.tar.gz | tar -xz
          echo $PWD >> $GITHUB_PATH

      - name: Install mdbook-template
        run: |
          curl -sSL https://github.com/sgoudham/mdbook-template/releases/latest/download/mdbook-template-x86_64-unknown-linux-gnu.tar.gz | tar -xz
          echo $PWD >> $GITHUB_PATH

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Build book
        run: ./mdbook build
        working-directory: ./book

      - name: Build docs
        run: cargo +nightly doc

        env:
            # Keep in sync with ./ci.yml:jobs.docs
            RUSTDOCFLAGS:
              --cfg docsrs --show-type-layout --generate-link-to-definition --enable-index-page
              -Zunstable-options

      - name: Move docs to book folder
        run: |
          mv target/doc target/book/docs

      - name: Archive artifact
        shell: sh
        run: |
          chmod -c -R +rX "target/book" |
          while read line; do
             echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
          tar \
            --dereference --hard-dereference \
            --directory "target/book" \
            -cvf "$RUNNER_TEMP/artifact.tar" \
            --exclude=.git \
            --exclude=.github \
            .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: $RUNNER_TEMP/artifact.tar
          retention-days: 1
          if-no-files-found: error

  deploy:
    # Only deploy if a push to main
    if: github.ref_name == 'main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [test, lint, build]

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    timeout-minutes: 60

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
