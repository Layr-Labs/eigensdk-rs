name: Integration Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    environment: testing

    env:
      HOLESKY_WS_URL: ${{ secrets.HOLESKY_WS_URL }}
      HOLESKY_HTTP_URL: ${{ secrets.HOLESKY_HTTP_URL }}
      FIREBLOCKS_API_KEY: ${{ secrets.FIREBLOCKS_API_KEY }}
      FIREBLOCKS_API_URL: ${{ secrets.FIREBLOCKS_API_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
        
      - name: Create private key file
        run: echo "${{ secrets.FIREBLOCKS_PRIVATE_KEY }}" > fireblocks_secret.key
    
      - name: Set environment variable for private key path
        run: echo "FIREBLOCKS_PRIVATE_KEY_PATH=$(pwd)/fireblocks_secret.key" >> $GITHUB_ENV
        
      - name: Install nightly Rust
        run: rustup toolchain install nightly
  
      - name: Install rustfmt for nightly
        run: rustup component add rustfmt --toolchain nightly

      - name: Install testing tools
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: clippy
        uses: dtolnay/rust-toolchain@clippy
        
      - name: docker
        uses: docker-practice/actions-setup-docker@master

      - name: Run tests and generate code coverage
        run: make coverage

      - name: Find coverage comment
        continue-on-error: true
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Coverage
        
      - name: Create markdown file
        run: echo "### Coverage:" > coverage-comment.md

      - name: Create or update coverage comment
        continue-on-error: true
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: coverage-comment.md
          edit-mode: replace