/**

Generated by the following Solidity interface...
```solidity
interface DeployTokensStrategiesCreateQuorums {
    function IS_SCRIPT() external view returns (bool);
    function run() external;
}
```

...which was generated by the following JSON ABI:
```json
[
  {
    "type": "function",
    "name": "IS_SCRIPT",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "run",
    "inputs": [],
    "outputs": [],
    "stateMutability": "nonpayable"
  }
]
```*/
#[allow(non_camel_case_types, non_snake_case, clippy::style)]
pub mod DeployTokensStrategiesCreateQuorums {
    use super::*;
    use alloy::sol_types as alloy_sol_types;
    /// The creation / init bytecode of the contract.
    ///
    /// ```text
    ///0x6080604052600c805462ff00ff19166201000117905569010f0cf064dd59200000600d5534801561002f57600080fd5b506131868061003f6000396000f3fe60806040523480156200001157600080fd5b50600436106200003a5760003560e01c8063c0406226146200003f578063f8ccbf47146200004b575b600080fd5b6200004962000073565b005b600c546200005f9062010000900460ff1681565b604051901515815260200160405180910390f35b735fbdb2315678afecb367f032d93f642f64180aa36000620000946200036c565b90506000620000a2620005fa565b90506000806000805160206200310d83398151915260001c6001600160a01b0316637fb5297f6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620000f557600080fd5b505af11580156200010a573d6000803e3d6000fd5b5050505060006000805160206200310d83398151915260001c6001600160a01b03166342cbb15c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000161573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000187919062001297565b905046617a6914806200019b575046610539145b156200025257620001bf856000015186602001518760e001518860400151620008b6565b60408051630fe7858560e31b81526004810191909152601160448201527065726332304d6f636b537472617465677960781b60648201526001600160a01b038083166024830152919550919350871690637f3c2c2890608401600060405180830381600087803b1580156200023357600080fd5b505af115801562000248573d6000803e3d6000fd5b50505050620002ed565b4661426814156200029157735c8b55722f421556a2aafb7a3ea63d4c3e5143129250733f1c547b21f65e10480de3ad8e19faac46c950349150620002ed565b60405162461bcd60e51b815260206004820152602660248201527f436f6e66696775726520546f6b656e20616e6420537472617465677920666f726044820152651021b430b4b760d11b60648201526084015b60405180910390fd5b620002fd84602001518462000d16565b6000805160206200310d83398151915260001c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200034b57600080fd5b505af115801562000360573d6000803e3d6000fd5b50505050505050505050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526000620003ef6040518060400160405280601c81526020017f656967656e6c617965725f6465706c6f796d656e745f6f75747075740000000081525062000e38565b9050600062000434826040518060400160405280601f81526020017f2e6164647265737365732e656967656e4c6179657250726f787941646d696e008152506200104f565b9050600062000479836040518060400160405280601e81526020017f2e6164647265737365732e656967656e4c6179657250617573657252656700008152506200104f565b90506000620004be846040518060400160405280601a81526020017f2e6164647265737365732e73747261746567794d616e616765720000000000008152506200104f565b90506000620004fb85604051806040016040528060158152602001741730b2323932b9b9b2b9973232b632b3b0ba34b7b760591b8152506200104f565b9050600062000540866040518060400160405280601781526020017f2e6164647265737365732e6176734469726563746f72790000000000000000008152506200104f565b905060006200057a87604051806040016040528060128152602001711730b2323932b9b9b2b99739b630b9b432b960711b8152506200104f565b90506000620005a388604051806060016040528060258152602001620030c7602591396200104f565b60408051610100810182526001600160a01b03998a1681529789166020890152958816958701959095525091851660608501529084166080840152831660a0830152600060c083015290911660e082015292915050565b60408051606081018252600080825260208201819052918101919091526000620006596040518060400160405280601981526020017f6d6f636b6176735f6465706c6f796d656e745f6f75747075740000000000000081525062000e38565b905060006200069e826040518060400160405280602081526020017f2e6164647265737365732e6d6f636b417673536572766963654d616e616765728152506200104f565b90506001600160a01b0381166200071e5760405162461bcd60e51b815260206004820152603a60248201527f4d6f636b417673436f6e7472616374735061727365723a206d6f636b4176735360448201527f6572766963654d616e61676572206164647265737320697320300000000000006064820152608401620002e4565b600062000761836040518060400160405280601e81526020017f2e6164647265737365732e7265676973747279436f6f7264696e61746f7200008152506200104f565b90506001600160a01b038116620007e15760405162461bcd60e51b815260206004820152603860248201527f4d6f636b417673436f6e7472616374735061727365723a20726567697374727960448201527f436f6f7264696e61746f722061646472657373206973203000000000000000006064820152608401620002e4565b60006200080884604051806060016040528060218152602001620030ec602191396200104f565b90506001600160a01b038116620008885760405162461bcd60e51b815260206004820152603b60248201527f4d6f636b417673436f6e7472616374735061727365723a206f70657261746f7260448201527f53746174655265747269657665722061646472657373206973203000000000006064820152608401620002e4565b604080516060810182526001600160a01b039485168152928416602084015292169181019190915292915050565b6000806000604051620008c9906200127b565b604051809103906000f080158015620008e6573d6000803e3d6000fd5b50600d546040516340c10f1960e01b815232600482015260248101919091529091506001600160a01b038216906340c10f1990604401600060405180830381600087803b1580156200093757600080fd5b505af11580156200094c573d6000803e3d6000fd5b505060408051683635c9adc5dea000006024820181905260448201526001600160a01b0385811660648301528a166084808301919091528251808303909101815260a490910182526020810180516001600160e01b031663019e272960e01b1790529051600093508892508a9190620009c59062001289565b620009d39392919062001312565b604051809103906000f080158015620009f0573d6000803e3d6000fd5b506040805160018082528183019092529192506000919060208083019080368337019050509050818160008151811062000a2e5762000a2e62001356565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905060008160008151811062000a835762000a8362001356565b9115156020928302919091019091015260405163df5b354760e01b81526001600160a01b0388169063df5b35479062000ac390859085906004016200136c565b600060405180830381600087803b15801562000ade57600080fd5b505af115801562000af3573d6000803e3d6000fd5b5050604080518082018252600d81526c1c185c995b9d081bd89a9958dd609a1b60208083019190915282518084018452600981526861646472657373657360b81b918101919091529151634b96303160e11b8152909350909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063972c60629062000b7b9084908a90600401620013f6565b6000604051808303816000875af115801562000b9b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000bc5919081019062001445565b50604051634b96303160e11b8152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063972c60629062000c049085908a90600401620014fe565b6000604051808303816000875af115801562000c24573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c4e919081019062001445565b6040516388da6d3560e01b8152909150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d906388da6d359062000c919087908790879060040162001555565b6000604051808303816000875af115801562000cb1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000cdb919081019062001445565b905062000d02816040518060600160405280602481526020016200312d60249139620010d8565b50959c949b50939950505050505050505050565b604080516060810182526127108152613a9860208201526064818301528151600180825281840190935290916000918291816020015b604080518082019091526000808252602082015281526020019060019003908162000d4c5790505090506040518060400160405280856001600160a01b03168152602001670de0b6b3a76400006bffffffffffffffffffffffff168152508160008151811062000dc05762000dc062001356565b6020908102919091010152604051631aeb699160e31b81526001600160a01b0386169063d75b4c889062000dfd908690869086906004016200159e565b600060405180830381600087803b15801562000e1857600080fd5b505af115801562000e2d573d6000803e3d6000fd5b505050505050505050565b606060006000805160206200310d83398151915260001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000e8d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000eb7919081019062001445565b60405160200162000ec991906200163f565b60408051808303601f190181529082905263348051d760e11b82524660048301529150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa15801562000f2c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000f56919081019062001445565b60405160200162000f68919062001674565b604051602081830303815290604052905060008460405160200162000f8e91906200169b565b60408051601f19818403018152908290529150737109709ecfa91a80626ff3989d68f67f5b1dd12d906360f9bb119062000fd190869086908690602001620016c6565b6040516020818303038152906040526040518263ffffffff1660e01b815260040162000ffe91906200170f565b600060405180830381865afa1580156200101c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001046919081019062001445565b95945050505050565b604051631e19e65760e01b8152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90631e19e657906200108d908690869060040162001724565b602060405180830381865afa158015620010ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010d191906200174d565b9392505050565b60006000805160206200310d83398151915260001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200112b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001155919081019062001445565b6040516020016200116791906200163f565b60408051808303601f190181529082905263348051d760e11b82524660048301529150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015620011ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620011f4919081019062001445565b60405160200162001206919062001674565b60405160208183030381529060405290506000828285604051602001620012309392919062001778565b60408051601f198184030181529082905263e23cd19f60e01b82529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e23cd19f9062000dfd908890859060040162001724565b610a7480620017d283390190565b610e81806200224683390190565b600060208284031215620012aa57600080fd5b5051919050565b60005b83811015620012ce578181015183820152602001620012b4565b83811115620012de576000848401525b50505050565b60008151808452620012fe816020860160208601620012b1565b601f01601f19169290920160200192915050565b6001600160a01b038481168252831660208201526060604082018190526000906200104690830184620012e4565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b604080825283519082018190526000906020906060840190828701845b82811015620013b05781516001600160a01b03168452928401929084019060010162001389565b5050508381038285015284518082528583019183019060005b81811015620013e9578351151583529284019291840191600101620013c9565b5090979650505050505050565b6060815260006200140b6060830185620012e4565b828103602080850191909152600982526865726332306d6f636b60b81b908201526001600160a01b03939093166040928301525001919050565b6000602082840312156200145857600080fd5b815167ffffffffffffffff808211156200147157600080fd5b818401915084601f8301126200148657600080fd5b8151818111156200149b576200149b62001340565b604051601f8201601f19908116603f01168101908382118183101715620014c657620014c662001340565b81604052828152876020848701011115620014e057600080fd5b620014f3836020830160208801620012b1565b979650505050505050565b606081526000620015136060830185620012e4565b828103602080850191909152601182527065726332306d6f636b737472617465677960781b908201526001600160a01b03939093166040928301525001919050565b6060815260006200156a6060830186620012e4565b82810360208401526200157e8186620012e4565b90508281036040840152620015948185620012e4565b9695505050505050565b600060a0820163ffffffff865116835260208087015161ffff808216838701526040915080828a01511682870152506bffffffffffffffffffffffff808816606087015260a0608087015283875180865260c088019150848901955060005b818110156200162f57865180516001600160a01b031684528601518416868401529585019591840191600101620015fd565b50909a9950505050505050505050565b6000825162001653818460208701620012b1565b6e2f7363726970742f6f75747075742f60881b920191825250600f01919050565b6000825162001688818460208701620012b1565b602f60f81b920191825250600101919050565b60008251620016af818460208701620012b1565b64173539b7b760d91b920191825250600501919050565b60008451620016da818460208901620012b1565b845190830190620016f0818360208901620012b1565b845191019062001705818360208801620012b1565b0195945050505050565b602081526000620010d16020830184620012e4565b604081526000620017396040830185620012e4565b8281036020840152620010468185620012e4565b6000602082840312156200176057600080fd5b81516001600160a01b0381168114620010d157600080fd5b600084516200178c818460208901620012b1565b845190830190620017a2818360208901620012b1565b8451910190620017b7818360208801620012b1565b64173539b7b760d91b91019081526005019594505050505056fe608060405234801561001057600080fd5b506040518060400160405280600a81526020016926b7b1b5902a37b5b2b760b11b815250604051806040016040528060038152602001624d434b60e81b8152508160039080519060200190610066929190610082565b50805161007a906004906020840190610082565b505050610156565b82805461008e9061011b565b90600052602060002090601f0160209004810192826100b057600085556100f6565b82601f106100c957805160ff19168380011785556100f6565b828001600101855582156100f6579182015b828111156100f65782518255916020019190600101906100db565b50610102929150610106565b5090565b5b808211156101025760008155600101610107565b600181811c9082168061012f57607f821691505b6020821081141561015057634e487b7160e01b600052602260045260246000fd5b50919050565b61090f806101656000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce919061074c565b60405180910390f35b6100ea6100e53660046107bd565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a3660046107e7565b61026a565b604051601281526020016100ce565b6100ea61013c3660046107bd565b610277565b61015461014f3660046107bd565b610299565b005b6100fe610164366004610823565b6001600160a01b031660009081526020819052604090205490565b6100c16102a7565b6100ea6101953660046107bd565b6102b6565b6100ea6101a83660046107bd565b610341565b6100fe6101bb366004610845565b61034f565b6060600380546101cf90610878565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610878565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b60003361026081858561037a565b5060019392505050565b600061026084848461049e565b60003361026081858561028a838361034f565b61029491906108b3565b61037a565b6102a3828261066d565b5050565b6060600480546101cf90610878565b600033816102c4828661034f565b9050838110156103295760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610336828686840361037a565b506001949350505050565b60003361026081858561049e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103dc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610320565b6001600160a01b03821661043d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610320565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105025760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610320565b6001600160a01b0382166105645760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610320565b6001600160a01b038316600090815260208190526040902054818110156105dc5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610320565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106139084906108b3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161065f91815260200190565b60405180910390a350505050565b6001600160a01b0382166106c35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610320565b80600260008282546106d591906108b3565b90915550506001600160a01b038216600090815260208190526040812080548392906107029084906108b3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156107795785810183015185820160400152820161075d565b8181111561078b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107b857600080fd5b919050565b600080604083850312156107d057600080fd5b6107d9836107a1565b946020939093013593505050565b6000806000606084860312156107fc57600080fd5b610805846107a1565b9250610813602085016107a1565b9150604084013590509250925092565b60006020828403121561083557600080fd5b61083e826107a1565b9392505050565b6000806040838503121561085857600080fd5b610861836107a1565b915061086f602084016107a1565b90509250929050565b600181811c9082168061088c57607f821691505b602082108114156108ad57634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156108d457634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220cdd5dacf8932073a3caffc72e84d1bc1b5bd6191303c553cc00319f525760ef364736f6c634300080c0033608060405260405162000e8138038062000e81833981016040819052620000269162000490565b828162000036828260006200004d565b50620000449050826200008a565b505050620005c3565b6200005883620000e5565b600082511180620000665750805b1562000085576200008383836200012760201b620002601760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620000b562000156565b604080516001600160a01b03928316815291841660208301520160405180910390a1620000e2816200018f565b50565b620000f08162000244565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606200014f838360405180606001604052806027815260200162000e5a60279139620002f8565b9392505050565b60006200018060008051602062000e3a83398151915260001b620003de60201b620002081760201c565b546001600160a01b0316919050565b6001600160a01b038116620001fa5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b806200022360008051602062000e3a83398151915260001b620003de60201b620002081760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6200025a81620003e160201b6200028c1760201c565b620002be5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401620001f1565b80620002237f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b620003de60201b620002081760201c565b60606001600160a01b0384163b620003625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401620001f1565b600080856001600160a01b0316856040516200037f919062000570565b600060405180830381855af49150503d8060008114620003bc576040519150601f19603f3d011682016040523d82523d6000602084013e620003c1565b606091505b509092509050620003d4828286620003f0565b9695505050505050565b90565b6001600160a01b03163b151590565b60608315620004015750816200014f565b825115620004125782518084602001fd5b8160405162461bcd60e51b8152600401620001f191906200058e565b80516001600160a01b03811681146200044657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200047e57818101518382015260200162000464565b83811115620000835750506000910152565b600080600060608486031215620004a657600080fd5b620004b1846200042e565b9250620004c1602085016200042e565b60408501519092506001600160401b0380821115620004df57600080fd5b818601915086601f830112620004f457600080fd5b8151818111156200050957620005096200044b565b604051601f8201601f19908116603f011681019083821181831017156200053457620005346200044b565b816040528281528960208487010111156200054e57600080fd5b6200056183602083016020880162000461565b80955050505050509250925092565b600082516200058481846020870162000461565b9190910192915050565b6020815260008251806020840152620005af81604085016020870162000461565b601f01601f19169190910160400192915050565b61086780620005d36000396000f3fe60806040526004361061004e5760003560e01c80633659cfe6146100655780634f1ef286146100855780635c60da1b146100985780638f283970146100c9578063f851a440146100e95761005d565b3661005d5761005b6100fe565b005b61005b6100fe565b34801561007157600080fd5b5061005b6100803660046106f1565b610118565b61005b61009336600461070c565b61015f565b3480156100a457600080fd5b506100ad6101d0565b6040516001600160a01b03909116815260200160405180910390f35b3480156100d557600080fd5b5061005b6100e43660046106f1565b61020b565b3480156100f557600080fd5b506100ad610235565b61010661029b565b61011661011161033a565b610344565b565b610120610368565b6001600160a01b0316336001600160a01b03161415610157576101548160405180602001604052806000815250600061039b565b50565b6101546100fe565b610167610368565b6001600160a01b0316336001600160a01b031614156101c8576101c38383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506001925061039b915050565b505050565b6101c36100fe565b60006101da610368565b6001600160a01b0316336001600160a01b03161415610200576101fb61033a565b905090565b6102086100fe565b90565b610213610368565b6001600160a01b0316336001600160a01b0316141561015757610154816103c6565b600061023f610368565b6001600160a01b0316336001600160a01b03161415610200576101fb610368565b6060610285838360405180606001604052806027815260200161080b6027913961041a565b9392505050565b6001600160a01b03163b151590565b6102a3610368565b6001600160a01b0316336001600160a01b031614156101165760405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b60006101fb6104f7565b3660008037600080366000845af43d6000803e808015610363573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b6103a48361051f565b6000825111806103b15750805b156101c3576103c08383610260565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6103ef610368565b604080516001600160a01b03928316815291841660208301520160405180910390a16101548161055f565b60606001600160a01b0384163b6104825760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610331565b600080856001600160a01b03168560405161049d91906107bb565b600060405180830381855af49150503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b50915091506104ed828286610608565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc61038c565b61052881610641565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b0381166105c45760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608401610331565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80546001600160a01b0319166001600160a01b039290921691909117905550565b60608315610617575081610285565b8251156106275782518084602001fd5b8160405162461bcd60e51b815260040161033191906107d7565b6001600160a01b0381163b6106ae5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610331565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6105e7565b80356001600160a01b03811681146106ec57600080fd5b919050565b60006020828403121561070357600080fd5b610285826106d5565b60008060006040848603121561072157600080fd5b61072a846106d5565b9250602084013567ffffffffffffffff8082111561074757600080fd5b818601915086601f83011261075b57600080fd5b81358181111561076a57600080fd5b87602082850101111561077c57600080fd5b6020830194508093505050509250925092565b60005b838110156107aa578181015183820152602001610792565b838111156103c05750506000910152565b600082516107cd81846020870161078f565b9190910192915050565b60208152600082518060208401526107f681604085016020870161078f565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207420b9d3a17a9b4b1279482aea62855b38b1f3c36865e13712f5632f3a487f3764736f6c634300080c0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65642e6164647265737365732e626173655374726174656779496d706c656d656e746174696f6e2e6164647265737365732e6f70657261746f725374617465526574726965766572885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d746f6b656e5f616e645f73747261746567795f6465706c6f796d656e745f6f7574707574a26469706673582212200dbe016138a8dd2d2fcf2d0cef7338ef81fa33f72fcb950f4a666e059cc89e9e64736f6c634300080c0033
    /// ```
    #[rustfmt::skip]
    #[allow(clippy::all)]
    pub static BYTECODE: alloy_sol_types::private::Bytes = alloy_sol_types::private::Bytes::from_static(
        b"`\x80`@R`\x0C\x80Tb\xFF\0\xFF\x19\x16b\x01\0\x01\x17\x90Ui\x01\x0F\x0C\xF0d\xDDY \0\0`\rU4\x80\x15a\0/W`\0\x80\xFD[Pa1\x86\x80a\0?`\09`\0\xF3\xFE`\x80`@R4\x80\x15b\0\0\x11W`\0\x80\xFD[P`\x046\x10b\0\0:W`\x005`\xE0\x1C\x80c\xC0@b&\x14b\0\0?W\x80c\xF8\xCC\xBFG\x14b\0\0KW[`\0\x80\xFD[b\0\0Ib\0\0sV[\0[`\x0CTb\0\0_\x90b\x01\0\0\x90\x04`\xFF\x16\x81V[`@Q\x90\x15\x15\x81R` \x01`@Q\x80\x91\x03\x90\xF3[s_\xBD\xB21Vx\xAF\xEC\xB3g\xF02\xD9?d/d\x18\n\xA3`\0b\0\0\x94b\0\x03lV[\x90P`\0b\0\0\xA2b\0\x05\xFAV[\x90P`\0\x80`\0\x80Q` b\x001\r\x839\x81Q\x91R`\0\x1C`\x01`\x01`\xA0\x1B\x03\x16c\x7F\xB5)\x7F`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15b\0\0\xF5W`\0\x80\xFD[PZ\xF1\x15\x80\x15b\0\x01\nW=`\0\x80>=`\0\xFD[PPPP`\0`\0\x80Q` b\x001\r\x839\x81Q\x91R`\0\x1C`\x01`\x01`\xA0\x1B\x03\x16cB\xCB\xB1\\`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x01aW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90b\0\x01\x87\x91\x90b\0\x12\x97V[\x90PFazi\x14\x80b\0\x01\x9BWPFa\x059\x14[\x15b\0\x02RWb\0\x01\xBF\x85`\0\x01Q\x86` \x01Q\x87`\xE0\x01Q\x88`@\x01Qb\0\x08\xB6V[`@\x80Qc\x0F\xE7\x85\x85`\xE3\x1B\x81R`\x04\x81\x01\x91\x90\x91R`\x11`D\x82\x01Rperc20MockStrategy`x\x1B`d\x82\x01R`\x01`\x01`\xA0\x1B\x03\x80\x83\x16`$\x83\x01R\x91\x95P\x91\x93P\x87\x16\x90c\x7F<,(\x90`\x84\x01`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15b\0\x023W`\0\x80\xFD[PZ\xF1\x15\x80\x15b\0\x02HW=`\0\x80>=`\0\xFD[PPPPb\0\x02\xEDV[FaBh\x14\x15b\0\x02\x91Ws\\\x8BUr/B\x15V\xA2\xAA\xFBz>\xA6=L>QC\x12\x92Ps?\x1CT{!\xF6^\x10H\r\xE3\xAD\x8E\x19\xFA\xACF\xC9P4\x91Pb\0\x02\xEDV[`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FConfigure Token and Strategy for`D\x82\x01Re\x10!\xB40\xB4\xB7`\xD1\x1B`d\x82\x01R`\x84\x01[`@Q\x80\x91\x03\x90\xFD[b\0\x02\xFD\x84` \x01Q\x84b\0\r\x16V[`\0\x80Q` b\x001\r\x839\x81Q\x91R`\0\x1C`\x01`\x01`\xA0\x1B\x03\x16cv\xEA\xDD6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15b\0\x03KW`\0\x80\xFD[PZ\xF1\x15\x80\x15b\0\x03`W=`\0\x80>=`\0\xFD[PPPPPPPPPPV[`@\x80Qa\x01\0\x81\x01\x82R`\0\x80\x82R` \x82\x01\x81\x90R\x91\x81\x01\x82\x90R``\x81\x01\x82\x90R`\x80\x81\x01\x82\x90R`\xA0\x81\x01\x82\x90R`\xC0\x81\x01\x82\x90R`\xE0\x81\x01\x91\x90\x91R`\0b\0\x03\xEF`@Q\x80`@\x01`@R\x80`\x1C\x81R` \x01\x7Feigenlayer_deployment_output\0\0\0\0\x81RPb\0\x0E8V[\x90P`\0b\0\x044\x82`@Q\x80`@\x01`@R\x80`\x1F\x81R` \x01\x7F.addresses.eigenLayerProxyAdmin\0\x81RPb\0\x10OV[\x90P`\0b\0\x04y\x83`@Q\x80`@\x01`@R\x80`\x1E\x81R` \x01\x7F.addresses.eigenLayerPauserReg\0\0\x81RPb\0\x10OV[\x90P`\0b\0\x04\xBE\x84`@Q\x80`@\x01`@R\x80`\x1A\x81R` \x01\x7F.addresses.strategyManager\0\0\0\0\0\0\x81RPb\0\x10OV[\x90P`\0b\0\x04\xFB\x85`@Q\x80`@\x01`@R\x80`\x15\x81R` \x01t\x170\xB2292\xB9\xB9\xB2\xB9\x9722\xB62\xB3\xB0\xBA4\xB7\xB7`Y\x1B\x81RPb\0\x10OV[\x90P`\0b\0\x05@\x86`@Q\x80`@\x01`@R\x80`\x17\x81R` \x01\x7F.addresses.avsDirectory\0\0\0\0\0\0\0\0\0\x81RPb\0\x10OV[\x90P`\0b\0\x05z\x87`@Q\x80`@\x01`@R\x80`\x12\x81R` \x01q\x170\xB2292\xB9\xB9\xB2\xB9\x979\xB60\xB9\xB42\xB9`q\x1B\x81RPb\0\x10OV[\x90P`\0b\0\x05\xA3\x88`@Q\x80``\x01`@R\x80`%\x81R` \x01b\x000\xC7`%\x919b\0\x10OV[`@\x80Qa\x01\0\x81\x01\x82R`\x01`\x01`\xA0\x1B\x03\x99\x8A\x16\x81R\x97\x89\x16` \x89\x01R\x95\x88\x16\x95\x87\x01\x95\x90\x95RP\x91\x85\x16``\x85\x01R\x90\x84\x16`\x80\x84\x01R\x83\x16`\xA0\x83\x01R`\0`\xC0\x83\x01R\x90\x91\x16`\xE0\x82\x01R\x92\x91PPV[`@\x80Q``\x81\x01\x82R`\0\x80\x82R` \x82\x01\x81\x90R\x91\x81\x01\x91\x90\x91R`\0b\0\x06Y`@Q\x80`@\x01`@R\x80`\x19\x81R` \x01\x7Fmockavs_deployment_output\0\0\0\0\0\0\0\x81RPb\0\x0E8V[\x90P`\0b\0\x06\x9E\x82`@Q\x80`@\x01`@R\x80` \x81R` \x01\x7F.addresses.mockAvsServiceManager\x81RPb\0\x10OV[\x90P`\x01`\x01`\xA0\x1B\x03\x81\x16b\0\x07\x1EW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`:`$\x82\x01R\x7FMockAvsContractsParser: mockAvsS`D\x82\x01R\x7FerviceManager address is 0\0\0\0\0\0\0`d\x82\x01R`\x84\x01b\0\x02\xE4V[`\0b\0\x07a\x83`@Q\x80`@\x01`@R\x80`\x1E\x81R` \x01\x7F.addresses.registryCoordinator\0\0\x81RPb\0\x10OV[\x90P`\x01`\x01`\xA0\x1B\x03\x81\x16b\0\x07\xE1W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`8`$\x82\x01R\x7FMockAvsContractsParser: registry`D\x82\x01R\x7FCoordinator address is 0\0\0\0\0\0\0\0\0`d\x82\x01R`\x84\x01b\0\x02\xE4V[`\0b\0\x08\x08\x84`@Q\x80``\x01`@R\x80`!\x81R` \x01b\x000\xEC`!\x919b\0\x10OV[\x90P`\x01`\x01`\xA0\x1B\x03\x81\x16b\0\x08\x88W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`;`$\x82\x01R\x7FMockAvsContractsParser: operator`D\x82\x01R\x7FStateRetriever address is 0\0\0\0\0\0`d\x82\x01R`\x84\x01b\0\x02\xE4V[`@\x80Q``\x81\x01\x82R`\x01`\x01`\xA0\x1B\x03\x94\x85\x16\x81R\x92\x84\x16` \x84\x01R\x92\x16\x91\x81\x01\x91\x90\x91R\x92\x91PPV[`\0\x80`\0`@Qb\0\x08\xC9\x90b\0\x12{V[`@Q\x80\x91\x03\x90`\0\xF0\x80\x15\x80\x15b\0\x08\xE6W=`\0\x80>=`\0\xFD[P`\rT`@Qc@\xC1\x0F\x19`\xE0\x1B\x81R2`\x04\x82\x01R`$\x81\x01\x91\x90\x91R\x90\x91P`\x01`\x01`\xA0\x1B\x03\x82\x16\x90c@\xC1\x0F\x19\x90`D\x01`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15b\0\t7W`\0\x80\xFD[PZ\xF1\x15\x80\x15b\0\tLW=`\0\x80>=`\0\xFD[PP`@\x80Qh65\xC9\xAD\xC5\xDE\xA0\0\0`$\x82\x01\x81\x90R`D\x82\x01R`\x01`\x01`\xA0\x1B\x03\x85\x81\x16`d\x83\x01R\x8A\x16`\x84\x80\x83\x01\x91\x90\x91R\x82Q\x80\x83\x03\x90\x91\x01\x81R`\xA4\x90\x91\x01\x82R` \x81\x01\x80Q`\x01`\x01`\xE0\x1B\x03\x16c\x01\x9E')`\xE0\x1B\x17\x90R\x90Q`\0\x93P\x88\x92P\x8A\x91\x90b\0\t\xC5\x90b\0\x12\x89V[b\0\t\xD3\x93\x92\x91\x90b\0\x13\x12V[`@Q\x80\x91\x03\x90`\0\xF0\x80\x15\x80\x15b\0\t\xF0W=`\0\x80>=`\0\xFD[P`@\x80Q`\x01\x80\x82R\x81\x83\x01\x90\x92R\x91\x92P`\0\x91\x90` \x80\x83\x01\x90\x806\x837\x01\x90PP\x90P\x81\x81`\0\x81Q\x81\x10b\0\n.Wb\0\n.b\0\x13VV[`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16` \x92\x83\x02\x91\x90\x91\x01\x90\x91\x01R`@\x80Q`\x01\x80\x82R\x81\x83\x01\x90\x92R`\0\x91\x81` \x01` \x82\x02\x806\x837\x01\x90PP\x90P`\0\x81`\0\x81Q\x81\x10b\0\n\x83Wb\0\n\x83b\0\x13VV[\x91\x15\x15` \x92\x83\x02\x91\x90\x91\x01\x90\x91\x01R`@Qc\xDF[5G`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x88\x16\x90c\xDF[5G\x90b\0\n\xC3\x90\x85\x90\x85\x90`\x04\x01b\0\x13lV[`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15b\0\n\xDEW`\0\x80\xFD[PZ\xF1\x15\x80\x15b\0\n\xF3W=`\0\x80>=`\0\xFD[PP`@\x80Q\x80\x82\x01\x82R`\r\x81Rl\x1C\x18\\\x99[\x9D\x08\x1B\xD8\x9A\x99X\xDD`\x9A\x1B` \x80\x83\x01\x91\x90\x91R\x82Q\x80\x84\x01\x84R`\t\x81Rhaddresses`\xB8\x1B\x91\x81\x01\x91\x90\x91R\x91QcK\x9601`\xE1\x1B\x81R\x90\x93P\x90\x91Psq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x97,`b\x90b\0\x0B{\x90\x84\x90\x8A\x90`\x04\x01b\0\x13\xF6V[`\0`@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15b\0\x0B\x9BW=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x0B\xC5\x91\x90\x81\x01\x90b\0\x14EV[P`@QcK\x9601`\xE1\x1B\x81R`\0\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x97,`b\x90b\0\x0C\x04\x90\x85\x90\x8A\x90`\x04\x01b\0\x14\xFEV[`\0`@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15b\0\x0C$W=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x0CN\x91\x90\x81\x01\x90b\0\x14EV[`@Qc\x88\xDAm5`\xE0\x1B\x81R\x90\x91P`\0\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x88\xDAm5\x90b\0\x0C\x91\x90\x87\x90\x87\x90\x87\x90`\x04\x01b\0\x15UV[`\0`@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15b\0\x0C\xB1W=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x0C\xDB\x91\x90\x81\x01\x90b\0\x14EV[\x90Pb\0\r\x02\x81`@Q\x80``\x01`@R\x80`$\x81R` \x01b\x001-`$\x919b\0\x10\xD8V[P\x95\x9C\x94\x9BP\x93\x99PPPPPPPPPPV[`@\x80Q``\x81\x01\x82Ra'\x10\x81Ra:\x98` \x82\x01R`d\x81\x83\x01R\x81Q`\x01\x80\x82R\x81\x84\x01\x90\x93R\x90\x91`\0\x91\x82\x91\x81` \x01[`@\x80Q\x80\x82\x01\x90\x91R`\0\x80\x82R` \x82\x01R\x81R` \x01\x90`\x01\x90\x03\x90\x81b\0\rLW\x90PP\x90P`@Q\x80`@\x01`@R\x80\x85`\x01`\x01`\xA0\x1B\x03\x16\x81R` \x01g\r\xE0\xB6\xB3\xA7d\0\0k\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x81RP\x81`\0\x81Q\x81\x10b\0\r\xC0Wb\0\r\xC0b\0\x13VV[` \x90\x81\x02\x91\x90\x91\x01\x01R`@Qc\x1A\xEBi\x91`\xE3\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x86\x16\x90c\xD7[L\x88\x90b\0\r\xFD\x90\x86\x90\x86\x90\x86\x90`\x04\x01b\0\x15\x9EV[`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15b\0\x0E\x18W`\0\x80\xFD[PZ\xF1\x15\x80\x15b\0\x0E-W=`\0\x80>=`\0\xFD[PPPPPPPPPV[```\0`\0\x80Q` b\x001\r\x839\x81Q\x91R`\0\x1C`\x01`\x01`\xA0\x1B\x03\x16c\xD90\xA0\xE6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x0E\x8DW=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x0E\xB7\x91\x90\x81\x01\x90b\0\x14EV[`@Q` \x01b\0\x0E\xC9\x91\x90b\0\x16?V[`@\x80Q\x80\x83\x03`\x1F\x19\x01\x81R\x90\x82\x90Rc4\x80Q\xD7`\xE1\x1B\x82RF`\x04\x83\x01R\x91P`\0\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90ci\0\xA3\xAE\x90`$\x01`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x0F,W=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x0FV\x91\x90\x81\x01\x90b\0\x14EV[`@Q` \x01b\0\x0Fh\x91\x90b\0\x16tV[`@Q` \x81\x83\x03\x03\x81R\x90`@R\x90P`\0\x84`@Q` \x01b\0\x0F\x8E\x91\x90b\0\x16\x9BV[`@\x80Q`\x1F\x19\x81\x84\x03\x01\x81R\x90\x82\x90R\x91Psq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c`\xF9\xBB\x11\x90b\0\x0F\xD1\x90\x86\x90\x86\x90\x86\x90` \x01b\0\x16\xC6V[`@Q` \x81\x83\x03\x03\x81R\x90`@R`@Q\x82c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01b\0\x0F\xFE\x91\x90b\0\x17\x0FV[`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x10\x1CW=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x10F\x91\x90\x81\x01\x90b\0\x14EV[\x95\x94PPPPPV[`@Qc\x1E\x19\xE6W`\xE0\x1B\x81R`\0\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x1E\x19\xE6W\x90b\0\x10\x8D\x90\x86\x90\x86\x90`\x04\x01b\0\x17$V[` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x10\xABW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90b\0\x10\xD1\x91\x90b\0\x17MV[\x93\x92PPPV[`\0`\0\x80Q` b\x001\r\x839\x81Q\x91R`\0\x1C`\x01`\x01`\xA0\x1B\x03\x16c\xD90\xA0\xE6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x11+W=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x11U\x91\x90\x81\x01\x90b\0\x14EV[`@Q` \x01b\0\x11g\x91\x90b\0\x16?V[`@\x80Q\x80\x83\x03`\x1F\x19\x01\x81R\x90\x82\x90Rc4\x80Q\xD7`\xE1\x1B\x82RF`\x04\x83\x01R\x91P`\0\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90ci\0\xA3\xAE\x90`$\x01`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x11\xCAW=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x11\xF4\x91\x90\x81\x01\x90b\0\x14EV[`@Q` \x01b\0\x12\x06\x91\x90b\0\x16tV[`@Q` \x81\x83\x03\x03\x81R\x90`@R\x90P`\0\x82\x82\x85`@Q` \x01b\0\x120\x93\x92\x91\x90b\0\x17xV[`@\x80Q`\x1F\x19\x81\x84\x03\x01\x81R\x90\x82\x90Rc\xE2<\xD1\x9F`\xE0\x1B\x82R\x91Psq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\xE2<\xD1\x9F\x90b\0\r\xFD\x90\x88\x90\x85\x90`\x04\x01b\0\x17$V[a\nt\x80b\0\x17\xD2\x839\x01\x90V[a\x0E\x81\x80b\0\"F\x839\x01\x90V[`\0` \x82\x84\x03\x12\x15b\0\x12\xAAW`\0\x80\xFD[PQ\x91\x90PV[`\0[\x83\x81\x10\x15b\0\x12\xCEW\x81\x81\x01Q\x83\x82\x01R` \x01b\0\x12\xB4V[\x83\x81\x11\x15b\0\x12\xDEW`\0\x84\x84\x01R[PPPPV[`\0\x81Q\x80\x84Rb\0\x12\xFE\x81` \x86\x01` \x86\x01b\0\x12\xB1V[`\x1F\x01`\x1F\x19\x16\x92\x90\x92\x01` \x01\x92\x91PPV[`\x01`\x01`\xA0\x1B\x03\x84\x81\x16\x82R\x83\x16` \x82\x01R```@\x82\x01\x81\x90R`\0\x90b\0\x10F\x90\x83\x01\x84b\0\x12\xE4V[cNH{q`\xE0\x1B`\0R`A`\x04R`$`\0\xFD[cNH{q`\xE0\x1B`\0R`2`\x04R`$`\0\xFD[`@\x80\x82R\x83Q\x90\x82\x01\x81\x90R`\0\x90` \x90``\x84\x01\x90\x82\x87\x01\x84[\x82\x81\x10\x15b\0\x13\xB0W\x81Q`\x01`\x01`\xA0\x1B\x03\x16\x84R\x92\x84\x01\x92\x90\x84\x01\x90`\x01\x01b\0\x13\x89V[PPP\x83\x81\x03\x82\x85\x01R\x84Q\x80\x82R\x85\x83\x01\x91\x83\x01\x90`\0[\x81\x81\x10\x15b\0\x13\xE9W\x83Q\x15\x15\x83R\x92\x84\x01\x92\x91\x84\x01\x91`\x01\x01b\0\x13\xC9V[P\x90\x97\x96PPPPPPPV[``\x81R`\0b\0\x14\x0B``\x83\x01\x85b\0\x12\xE4V[\x82\x81\x03` \x80\x85\x01\x91\x90\x91R`\t\x82Rherc20mock`\xB8\x1B\x90\x82\x01R`\x01`\x01`\xA0\x1B\x03\x93\x90\x93\x16`@\x92\x83\x01RP\x01\x91\x90PV[`\0` \x82\x84\x03\x12\x15b\0\x14XW`\0\x80\xFD[\x81Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x82\x11\x15b\0\x14qW`\0\x80\xFD[\x81\x84\x01\x91P\x84`\x1F\x83\x01\x12b\0\x14\x86W`\0\x80\xFD[\x81Q\x81\x81\x11\x15b\0\x14\x9BWb\0\x14\x9Bb\0\x13@V[`@Q`\x1F\x82\x01`\x1F\x19\x90\x81\x16`?\x01\x16\x81\x01\x90\x83\x82\x11\x81\x83\x10\x17\x15b\0\x14\xC6Wb\0\x14\xC6b\0\x13@V[\x81`@R\x82\x81R\x87` \x84\x87\x01\x01\x11\x15b\0\x14\xE0W`\0\x80\xFD[b\0\x14\xF3\x83` \x83\x01` \x88\x01b\0\x12\xB1V[\x97\x96PPPPPPPV[``\x81R`\0b\0\x15\x13``\x83\x01\x85b\0\x12\xE4V[\x82\x81\x03` \x80\x85\x01\x91\x90\x91R`\x11\x82Rperc20mockstrategy`x\x1B\x90\x82\x01R`\x01`\x01`\xA0\x1B\x03\x93\x90\x93\x16`@\x92\x83\x01RP\x01\x91\x90PV[``\x81R`\0b\0\x15j``\x83\x01\x86b\0\x12\xE4V[\x82\x81\x03` \x84\x01Rb\0\x15~\x81\x86b\0\x12\xE4V[\x90P\x82\x81\x03`@\x84\x01Rb\0\x15\x94\x81\x85b\0\x12\xE4V[\x96\x95PPPPPPV[`\0`\xA0\x82\x01c\xFF\xFF\xFF\xFF\x86Q\x16\x83R` \x80\x87\x01Qa\xFF\xFF\x80\x82\x16\x83\x87\x01R`@\x91P\x80\x82\x8A\x01Q\x16\x82\x87\x01RPk\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x88\x16``\x87\x01R`\xA0`\x80\x87\x01R\x83\x87Q\x80\x86R`\xC0\x88\x01\x91P\x84\x89\x01\x95P`\0[\x81\x81\x10\x15b\0\x16/W\x86Q\x80Q`\x01`\x01`\xA0\x1B\x03\x16\x84R\x86\x01Q\x84\x16\x86\x84\x01R\x95\x85\x01\x95\x91\x84\x01\x91`\x01\x01b\0\x15\xFDV[P\x90\x9A\x99PPPPPPPPPPV[`\0\x82Qb\0\x16S\x81\x84` \x87\x01b\0\x12\xB1V[n/script/output/`\x88\x1B\x92\x01\x91\x82RP`\x0F\x01\x91\x90PV[`\0\x82Qb\0\x16\x88\x81\x84` \x87\x01b\0\x12\xB1V[`/`\xF8\x1B\x92\x01\x91\x82RP`\x01\x01\x91\x90PV[`\0\x82Qb\0\x16\xAF\x81\x84` \x87\x01b\0\x12\xB1V[d\x1759\xB7\xB7`\xD9\x1B\x92\x01\x91\x82RP`\x05\x01\x91\x90PV[`\0\x84Qb\0\x16\xDA\x81\x84` \x89\x01b\0\x12\xB1V[\x84Q\x90\x83\x01\x90b\0\x16\xF0\x81\x83` \x89\x01b\0\x12\xB1V[\x84Q\x91\x01\x90b\0\x17\x05\x81\x83` \x88\x01b\0\x12\xB1V[\x01\x95\x94PPPPPV[` \x81R`\0b\0\x10\xD1` \x83\x01\x84b\0\x12\xE4V[`@\x81R`\0b\0\x179`@\x83\x01\x85b\0\x12\xE4V[\x82\x81\x03` \x84\x01Rb\0\x10F\x81\x85b\0\x12\xE4V[`\0` \x82\x84\x03\x12\x15b\0\x17`W`\0\x80\xFD[\x81Q`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14b\0\x10\xD1W`\0\x80\xFD[`\0\x84Qb\0\x17\x8C\x81\x84` \x89\x01b\0\x12\xB1V[\x84Q\x90\x83\x01\x90b\0\x17\xA2\x81\x83` \x89\x01b\0\x12\xB1V[\x84Q\x91\x01\x90b\0\x17\xB7\x81\x83` \x88\x01b\0\x12\xB1V[d\x1759\xB7\xB7`\xD9\x1B\x91\x01\x90\x81R`\x05\x01\x95\x94PPPPPV\xFE`\x80`@R4\x80\x15a\0\x10W`\0\x80\xFD[P`@Q\x80`@\x01`@R\x80`\n\x81R` \x01i&\xB7\xB1\xB5\x90*7\xB5\xB2\xB7`\xB1\x1B\x81RP`@Q\x80`@\x01`@R\x80`\x03\x81R` \x01bMCK`\xE8\x1B\x81RP\x81`\x03\x90\x80Q\x90` \x01\x90a\0f\x92\x91\x90a\0\x82V[P\x80Qa\0z\x90`\x04\x90` \x84\x01\x90a\0\x82V[PPPa\x01VV[\x82\x80Ta\0\x8E\x90a\x01\x1BV[\x90`\0R` `\0 \x90`\x1F\x01` \x90\x04\x81\x01\x92\x82a\0\xB0W`\0\x85Ua\0\xF6V[\x82`\x1F\x10a\0\xC9W\x80Q`\xFF\x19\x16\x83\x80\x01\x17\x85Ua\0\xF6V[\x82\x80\x01`\x01\x01\x85U\x82\x15a\0\xF6W\x91\x82\x01[\x82\x81\x11\x15a\0\xF6W\x82Q\x82U\x91` \x01\x91\x90`\x01\x01\x90a\0\xDBV[Pa\x01\x02\x92\x91Pa\x01\x06V[P\x90V[[\x80\x82\x11\x15a\x01\x02W`\0\x81U`\x01\x01a\x01\x07V[`\x01\x81\x81\x1C\x90\x82\x16\x80a\x01/W`\x7F\x82\x16\x91P[` \x82\x10\x81\x14\x15a\x01PWcNH{q`\xE0\x1B`\0R`\"`\x04R`$`\0\xFD[P\x91\x90PV[a\t\x0F\x80a\x01e`\09`\0\xF3\xFE`\x80`@R4\x80\x15a\0\x10W`\0\x80\xFD[P`\x046\x10a\0\xB4W`\x005`\xE0\x1C\x80c@\xC1\x0F\x19\x11a\0qW\x80c@\xC1\x0F\x19\x14a\x01AW\x80cp\xA0\x821\x14a\x01VW\x80c\x95\xD8\x9BA\x14a\x01\x7FW\x80c\xA4W\xC2\xD7\x14a\x01\x87W\x80c\xA9\x05\x9C\xBB\x14a\x01\x9AW\x80c\xDDb\xED>\x14a\x01\xADW`\0\x80\xFD[\x80c\x06\xFD\xDE\x03\x14a\0\xB9W\x80c\t^\xA7\xB3\x14a\0\xD7W\x80c\x18\x16\r\xDD\x14a\0\xFAW\x80c#\xB8r\xDD\x14a\x01\x0CW\x80c1<\xE5g\x14a\x01\x1FW\x80c9P\x93Q\x14a\x01.W[`\0\x80\xFD[a\0\xC1a\x01\xC0V[`@Qa\0\xCE\x91\x90a\x07LV[`@Q\x80\x91\x03\x90\xF3[a\0\xEAa\0\xE56`\x04a\x07\xBDV[a\x02RV[`@Q\x90\x15\x15\x81R` \x01a\0\xCEV[`\x02T[`@Q\x90\x81R` \x01a\0\xCEV[a\0\xEAa\x01\x1A6`\x04a\x07\xE7V[a\x02jV[`@Q`\x12\x81R` \x01a\0\xCEV[a\0\xEAa\x01<6`\x04a\x07\xBDV[a\x02wV[a\x01Ta\x01O6`\x04a\x07\xBDV[a\x02\x99V[\0[a\0\xFEa\x01d6`\x04a\x08#V[`\x01`\x01`\xA0\x1B\x03\x16`\0\x90\x81R` \x81\x90R`@\x90 T\x90V[a\0\xC1a\x02\xA7V[a\0\xEAa\x01\x956`\x04a\x07\xBDV[a\x02\xB6V[a\0\xEAa\x01\xA86`\x04a\x07\xBDV[a\x03AV[a\0\xFEa\x01\xBB6`\x04a\x08EV[a\x03OV[```\x03\x80Ta\x01\xCF\x90a\x08xV[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x01\xFB\x90a\x08xV[\x80\x15a\x02HW\x80`\x1F\x10a\x02\x1DWa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x02HV[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x02+W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPPPP\x90P\x90V[`\x003a\x02`\x81\x85\x85a\x03zV[P`\x01\x93\x92PPPV[`\0a\x02`\x84\x84\x84a\x04\x9EV[`\x003a\x02`\x81\x85\x85a\x02\x8A\x83\x83a\x03OV[a\x02\x94\x91\x90a\x08\xB3V[a\x03zV[a\x02\xA3\x82\x82a\x06mV[PPV[```\x04\x80Ta\x01\xCF\x90a\x08xV[`\x003\x81a\x02\xC4\x82\x86a\x03OV[\x90P\x83\x81\x10\x15a\x03)W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`%`$\x82\x01R\x7FERC20: decreased allowance below`D\x82\x01Rd zero`\xD8\x1B`d\x82\x01R`\x84\x01[`@Q\x80\x91\x03\x90\xFD[a\x036\x82\x86\x86\x84\x03a\x03zV[P`\x01\x94\x93PPPPV[`\x003a\x02`\x81\x85\x85a\x04\x9EV[`\x01`\x01`\xA0\x1B\x03\x91\x82\x16`\0\x90\x81R`\x01` \x90\x81R`@\x80\x83 \x93\x90\x94\x16\x82R\x91\x90\x91R T\x90V[`\x01`\x01`\xA0\x1B\x03\x83\x16a\x03\xDCW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`$\x80\x82\x01R\x7FERC20: approve from the zero add`D\x82\x01Rcress`\xE0\x1B`d\x82\x01R`\x84\x01a\x03 V[`\x01`\x01`\xA0\x1B\x03\x82\x16a\x04=W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`\"`$\x82\x01R\x7FERC20: approve to the zero addre`D\x82\x01Rass`\xF0\x1B`d\x82\x01R`\x84\x01a\x03 V[`\x01`\x01`\xA0\x1B\x03\x83\x81\x16`\0\x81\x81R`\x01` \x90\x81R`@\x80\x83 \x94\x87\x16\x80\x84R\x94\x82R\x91\x82\x90 \x85\x90U\x90Q\x84\x81R\x7F\x8C[\xE1\xE5\xEB\xEC}[\xD1OqB}\x1E\x84\xF3\xDD\x03\x14\xC0\xF7\xB2)\x1E[ \n\xC8\xC7\xC3\xB9%\x91\x01`@Q\x80\x91\x03\x90\xA3PPPV[`\x01`\x01`\xA0\x1B\x03\x83\x16a\x05\x02W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`%`$\x82\x01R\x7FERC20: transfer from the zero ad`D\x82\x01Rddress`\xD8\x1B`d\x82\x01R`\x84\x01a\x03 V[`\x01`\x01`\xA0\x1B\x03\x82\x16a\x05dW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`#`$\x82\x01R\x7FERC20: transfer to the zero addr`D\x82\x01Rbess`\xE8\x1B`d\x82\x01R`\x84\x01a\x03 V[`\x01`\x01`\xA0\x1B\x03\x83\x16`\0\x90\x81R` \x81\x90R`@\x90 T\x81\x81\x10\x15a\x05\xDCW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FERC20: transfer amount exceeds b`D\x82\x01Realance`\xD0\x1B`d\x82\x01R`\x84\x01a\x03 V[`\x01`\x01`\xA0\x1B\x03\x80\x85\x16`\0\x90\x81R` \x81\x90R`@\x80\x82 \x85\x85\x03\x90U\x91\x85\x16\x81R\x90\x81 \x80T\x84\x92\x90a\x06\x13\x90\x84\x90a\x08\xB3V[\x92PP\x81\x90UP\x82`\x01`\x01`\xA0\x1B\x03\x16\x84`\x01`\x01`\xA0\x1B\x03\x16\x7F\xDD\xF2R\xAD\x1B\xE2\xC8\x9Bi\xC2\xB0h\xFC7\x8D\xAA\x95+\xA7\xF1c\xC4\xA1\x16(\xF5ZM\xF5#\xB3\xEF\x84`@Qa\x06_\x91\x81R` \x01\x90V[`@Q\x80\x91\x03\x90\xA3PPPPV[`\x01`\x01`\xA0\x1B\x03\x82\x16a\x06\xC3W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`\x1F`$\x82\x01R\x7FERC20: mint to the zero address\0`D\x82\x01R`d\x01a\x03 V[\x80`\x02`\0\x82\x82Ta\x06\xD5\x91\x90a\x08\xB3V[\x90\x91UPP`\x01`\x01`\xA0\x1B\x03\x82\x16`\0\x90\x81R` \x81\x90R`@\x81 \x80T\x83\x92\x90a\x07\x02\x90\x84\x90a\x08\xB3V[\x90\x91UPP`@Q\x81\x81R`\x01`\x01`\xA0\x1B\x03\x83\x16\x90`\0\x90\x7F\xDD\xF2R\xAD\x1B\xE2\xC8\x9Bi\xC2\xB0h\xFC7\x8D\xAA\x95+\xA7\xF1c\xC4\xA1\x16(\xF5ZM\xF5#\xB3\xEF\x90` \x01`@Q\x80\x91\x03\x90\xA3PPV[`\0` \x80\x83R\x83Q\x80\x82\x85\x01R`\0[\x81\x81\x10\x15a\x07yW\x85\x81\x01\x83\x01Q\x85\x82\x01`@\x01R\x82\x01a\x07]V[\x81\x81\x11\x15a\x07\x8BW`\0`@\x83\x87\x01\x01R[P`\x1F\x01`\x1F\x19\x16\x92\x90\x92\x01`@\x01\x93\x92PPPV[\x805`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x07\xB8W`\0\x80\xFD[\x91\x90PV[`\0\x80`@\x83\x85\x03\x12\x15a\x07\xD0W`\0\x80\xFD[a\x07\xD9\x83a\x07\xA1V[\x94` \x93\x90\x93\x015\x93PPPV[`\0\x80`\0``\x84\x86\x03\x12\x15a\x07\xFCW`\0\x80\xFD[a\x08\x05\x84a\x07\xA1V[\x92Pa\x08\x13` \x85\x01a\x07\xA1V[\x91P`@\x84\x015\x90P\x92P\x92P\x92V[`\0` \x82\x84\x03\x12\x15a\x085W`\0\x80\xFD[a\x08>\x82a\x07\xA1V[\x93\x92PPPV[`\0\x80`@\x83\x85\x03\x12\x15a\x08XW`\0\x80\xFD[a\x08a\x83a\x07\xA1V[\x91Pa\x08o` \x84\x01a\x07\xA1V[\x90P\x92P\x92\x90PV[`\x01\x81\x81\x1C\x90\x82\x16\x80a\x08\x8CW`\x7F\x82\x16\x91P[` \x82\x10\x81\x14\x15a\x08\xADWcNH{q`\xE0\x1B`\0R`\"`\x04R`$`\0\xFD[P\x91\x90PV[`\0\x82\x19\x82\x11\x15a\x08\xD4WcNH{q`\xE0\x1B`\0R`\x11`\x04R`$`\0\xFD[P\x01\x90V\xFE\xA2dipfsX\"\x12 \xCD\xD5\xDA\xCF\x892\x07:<\xAF\xFCr\xE8M\x1B\xC1\xB5\xBDa\x910<U<\xC0\x03\x19\xF5%v\x0E\xF3dsolcC\0\x08\x0C\x003`\x80`@R`@Qb\0\x0E\x818\x03\x80b\0\x0E\x81\x839\x81\x01`@\x81\x90Rb\0\0&\x91b\0\x04\x90V[\x82\x81b\0\x006\x82\x82`\0b\0\0MV[Pb\0\0D\x90P\x82b\0\0\x8AV[PPPb\0\x05\xC3V[b\0\0X\x83b\0\0\xE5V[`\0\x82Q\x11\x80b\0\0fWP\x80[\x15b\0\0\x85Wb\0\0\x83\x83\x83b\0\x01'` \x1Bb\0\x02`\x17` \x1CV[P[PPPV[\x7F~dMyB/\x17\xC0\x1EH\x94\xB5\xF4\xF5\x88\xD31\xEB\xFA(e=B\xAE\x83-\xC5\x9E8\xC9y\x8Fb\0\0\xB5b\0\x01VV[`@\x80Q`\x01`\x01`\xA0\x1B\x03\x92\x83\x16\x81R\x91\x84\x16` \x83\x01R\x01`@Q\x80\x91\x03\x90\xA1b\0\0\xE2\x81b\0\x01\x8FV[PV[b\0\0\xF0\x81b\0\x02DV[`@Q`\x01`\x01`\xA0\x1B\x03\x82\x16\x90\x7F\xBC|\xD7Z \xEE'\xFD\x9A\xDE\xBA\xB3 A\xF7U!M\xBCk\xFF\xA9\x0C\xC0\"[9\xDA.\\-;\x90`\0\x90\xA2PV[``b\0\x01O\x83\x83`@Q\x80``\x01`@R\x80`'\x81R` \x01b\0\x0EZ`'\x919b\0\x02\xF8V[\x93\x92PPPV[`\0b\0\x01\x80`\0\x80Q` b\0\x0E:\x839\x81Q\x91R`\0\x1Bb\0\x03\xDE` \x1Bb\0\x02\x08\x17` \x1CV[T`\x01`\x01`\xA0\x1B\x03\x16\x91\x90PV[`\x01`\x01`\xA0\x1B\x03\x81\x16b\0\x01\xFAW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FERC1967: new admin is the zero a`D\x82\x01Reddress`\xD0\x1B`d\x82\x01R`\x84\x01[`@Q\x80\x91\x03\x90\xFD[\x80b\0\x02#`\0\x80Q` b\0\x0E:\x839\x81Q\x91R`\0\x1Bb\0\x03\xDE` \x1Bb\0\x02\x08\x17` \x1CV[\x80T`\x01`\x01`\xA0\x1B\x03\x19\x16`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UPV[b\0\x02Z\x81b\0\x03\xE1` \x1Bb\0\x02\x8C\x17` \x1CV[b\0\x02\xBEW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`-`$\x82\x01R\x7FERC1967: new implementation is n`D\x82\x01Rl\x1B\xDD\x08\x18H\x18\xDB\xDB\x9D\x1C\x98X\xDD`\x9A\x1B`d\x82\x01R`\x84\x01b\0\x01\xF1V[\x80b\0\x02#\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBC`\0\x1Bb\0\x03\xDE` \x1Bb\0\x02\x08\x17` \x1CV[```\x01`\x01`\xA0\x1B\x03\x84\x16;b\0\x03bW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FAddress: delegate call to non-co`D\x82\x01Re\x1B\x9D\x1C\x98X\xDD`\xD2\x1B`d\x82\x01R`\x84\x01b\0\x01\xF1V[`\0\x80\x85`\x01`\x01`\xA0\x1B\x03\x16\x85`@Qb\0\x03\x7F\x91\x90b\0\x05pV[`\0`@Q\x80\x83\x03\x81\x85Z\xF4\x91PP=\x80`\0\x81\x14b\0\x03\xBCW`@Q\x91P`\x1F\x19`?=\x01\x16\x82\x01`@R=\x82R=`\0` \x84\x01>b\0\x03\xC1V[``\x91P[P\x90\x92P\x90Pb\0\x03\xD4\x82\x82\x86b\0\x03\xF0V[\x96\x95PPPPPPV[\x90V[`\x01`\x01`\xA0\x1B\x03\x16;\x15\x15\x90V[``\x83\x15b\0\x04\x01WP\x81b\0\x01OV[\x82Q\x15b\0\x04\x12W\x82Q\x80\x84` \x01\xFD[\x81`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01b\0\x01\xF1\x91\x90b\0\x05\x8EV[\x80Q`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14b\0\x04FW`\0\x80\xFD[\x91\x90PV[cNH{q`\xE0\x1B`\0R`A`\x04R`$`\0\xFD[`\0[\x83\x81\x10\x15b\0\x04~W\x81\x81\x01Q\x83\x82\x01R` \x01b\0\x04dV[\x83\x81\x11\x15b\0\0\x83WPP`\0\x91\x01RV[`\0\x80`\0``\x84\x86\x03\x12\x15b\0\x04\xA6W`\0\x80\xFD[b\0\x04\xB1\x84b\0\x04.V[\x92Pb\0\x04\xC1` \x85\x01b\0\x04.V[`@\x85\x01Q\x90\x92P`\x01`\x01`@\x1B\x03\x80\x82\x11\x15b\0\x04\xDFW`\0\x80\xFD[\x81\x86\x01\x91P\x86`\x1F\x83\x01\x12b\0\x04\xF4W`\0\x80\xFD[\x81Q\x81\x81\x11\x15b\0\x05\tWb\0\x05\tb\0\x04KV[`@Q`\x1F\x82\x01`\x1F\x19\x90\x81\x16`?\x01\x16\x81\x01\x90\x83\x82\x11\x81\x83\x10\x17\x15b\0\x054Wb\0\x054b\0\x04KV[\x81`@R\x82\x81R\x89` \x84\x87\x01\x01\x11\x15b\0\x05NW`\0\x80\xFD[b\0\x05a\x83` \x83\x01` \x88\x01b\0\x04aV[\x80\x95PPPPPP\x92P\x92P\x92V[`\0\x82Qb\0\x05\x84\x81\x84` \x87\x01b\0\x04aV[\x91\x90\x91\x01\x92\x91PPV[` \x81R`\0\x82Q\x80` \x84\x01Rb\0\x05\xAF\x81`@\x85\x01` \x87\x01b\0\x04aV[`\x1F\x01`\x1F\x19\x16\x91\x90\x91\x01`@\x01\x92\x91PPV[a\x08g\x80b\0\x05\xD3`\09`\0\xF3\xFE`\x80`@R`\x046\x10a\0NW`\x005`\xE0\x1C\x80c6Y\xCF\xE6\x14a\0eW\x80cO\x1E\xF2\x86\x14a\0\x85W\x80c\\`\xDA\x1B\x14a\0\x98W\x80c\x8F(9p\x14a\0\xC9W\x80c\xF8Q\xA4@\x14a\0\xE9Wa\0]V[6a\0]Wa\0[a\0\xFEV[\0[a\0[a\0\xFEV[4\x80\x15a\0qW`\0\x80\xFD[Pa\0[a\0\x806`\x04a\x06\xF1V[a\x01\x18V[a\0[a\0\x936`\x04a\x07\x0CV[a\x01_V[4\x80\x15a\0\xA4W`\0\x80\xFD[Pa\0\xADa\x01\xD0V[`@Q`\x01`\x01`\xA0\x1B\x03\x90\x91\x16\x81R` \x01`@Q\x80\x91\x03\x90\xF3[4\x80\x15a\0\xD5W`\0\x80\xFD[Pa\0[a\0\xE46`\x04a\x06\xF1V[a\x02\x0BV[4\x80\x15a\0\xF5W`\0\x80\xFD[Pa\0\xADa\x025V[a\x01\x06a\x02\x9BV[a\x01\x16a\x01\x11a\x03:V[a\x03DV[V[a\x01 a\x03hV[`\x01`\x01`\xA0\x1B\x03\x163`\x01`\x01`\xA0\x1B\x03\x16\x14\x15a\x01WWa\x01T\x81`@Q\x80` \x01`@R\x80`\0\x81RP`\0a\x03\x9BV[PV[a\x01Ta\0\xFEV[a\x01ga\x03hV[`\x01`\x01`\xA0\x1B\x03\x163`\x01`\x01`\xA0\x1B\x03\x16\x14\x15a\x01\xC8Wa\x01\xC3\x83\x83\x83\x80\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x93\x92\x91\x90\x81\x81R` \x01\x83\x83\x80\x82\x847`\0\x92\x01\x91\x90\x91RP`\x01\x92Pa\x03\x9B\x91PPV[PPPV[a\x01\xC3a\0\xFEV[`\0a\x01\xDAa\x03hV[`\x01`\x01`\xA0\x1B\x03\x163`\x01`\x01`\xA0\x1B\x03\x16\x14\x15a\x02\0Wa\x01\xFBa\x03:V[\x90P\x90V[a\x02\x08a\0\xFEV[\x90V[a\x02\x13a\x03hV[`\x01`\x01`\xA0\x1B\x03\x163`\x01`\x01`\xA0\x1B\x03\x16\x14\x15a\x01WWa\x01T\x81a\x03\xC6V[`\0a\x02?a\x03hV[`\x01`\x01`\xA0\x1B\x03\x163`\x01`\x01`\xA0\x1B\x03\x16\x14\x15a\x02\0Wa\x01\xFBa\x03hV[``a\x02\x85\x83\x83`@Q\x80``\x01`@R\x80`'\x81R` \x01a\x08\x0B`'\x919a\x04\x1AV[\x93\x92PPPV[`\x01`\x01`\xA0\x1B\x03\x16;\x15\x15\x90V[a\x02\xA3a\x03hV[`\x01`\x01`\xA0\x1B\x03\x163`\x01`\x01`\xA0\x1B\x03\x16\x14\x15a\x01\x16W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`B`$\x82\x01R\x7FTransparentUpgradeableProxy: adm`D\x82\x01R\x7Fin cannot fallback to proxy targ`d\x82\x01Ra\x19]`\xF2\x1B`\x84\x82\x01R`\xA4\x01[`@Q\x80\x91\x03\x90\xFD[`\0a\x01\xFBa\x04\xF7V[6`\0\x807`\0\x806`\0\x84Z\xF4=`\0\x80>\x80\x80\x15a\x03cW=`\0\xF3[=`\0\xFD[`\0\x7F\xB51'hJV\x8B1s\xAE\x13\xB9\xF8\xA6\x01n$>c\xB6\xE8\xEE\x11x\xD6\xA7\x17\x85\x0B]a\x03[T`\x01`\x01`\xA0\x1B\x03\x16\x91\x90PV[a\x03\xA4\x83a\x05\x1FV[`\0\x82Q\x11\x80a\x03\xB1WP\x80[\x15a\x01\xC3Wa\x03\xC0\x83\x83a\x02`V[PPPPV[\x7F~dMyB/\x17\xC0\x1EH\x94\xB5\xF4\xF5\x88\xD31\xEB\xFA(e=B\xAE\x83-\xC5\x9E8\xC9y\x8Fa\x03\xEFa\x03hV[`@\x80Q`\x01`\x01`\xA0\x1B\x03\x92\x83\x16\x81R\x91\x84\x16` \x83\x01R\x01`@Q\x80\x91\x03\x90\xA1a\x01T\x81a\x05_V[```\x01`\x01`\xA0\x1B\x03\x84\x16;a\x04\x82W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FAddress: delegate call to non-co`D\x82\x01Re\x1B\x9D\x1C\x98X\xDD`\xD2\x1B`d\x82\x01R`\x84\x01a\x031V[`\0\x80\x85`\x01`\x01`\xA0\x1B\x03\x16\x85`@Qa\x04\x9D\x91\x90a\x07\xBBV[`\0`@Q\x80\x83\x03\x81\x85Z\xF4\x91PP=\x80`\0\x81\x14a\x04\xD8W`@Q\x91P`\x1F\x19`?=\x01\x16\x82\x01`@R=\x82R=`\0` \x84\x01>a\x04\xDDV[``\x91P[P\x91P\x91Pa\x04\xED\x82\x82\x86a\x06\x08V[\x96\x95PPPPPPV[`\0\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBCa\x03\x8CV[a\x05(\x81a\x06AV[`@Q`\x01`\x01`\xA0\x1B\x03\x82\x16\x90\x7F\xBC|\xD7Z \xEE'\xFD\x9A\xDE\xBA\xB3 A\xF7U!M\xBCk\xFF\xA9\x0C\xC0\"[9\xDA.\\-;\x90`\0\x90\xA2PV[`\x01`\x01`\xA0\x1B\x03\x81\x16a\x05\xC4W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FERC1967: new admin is the zero a`D\x82\x01Reddress`\xD0\x1B`d\x82\x01R`\x84\x01a\x031V[\x80\x7F\xB51'hJV\x8B1s\xAE\x13\xB9\xF8\xA6\x01n$>c\xB6\xE8\xEE\x11x\xD6\xA7\x17\x85\x0B]a\x03[\x80T`\x01`\x01`\xA0\x1B\x03\x19\x16`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UPV[``\x83\x15a\x06\x17WP\x81a\x02\x85V[\x82Q\x15a\x06'W\x82Q\x80\x84` \x01\xFD[\x81`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x031\x91\x90a\x07\xD7V[`\x01`\x01`\xA0\x1B\x03\x81\x16;a\x06\xAEW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`-`$\x82\x01R\x7FERC1967: new implementation is n`D\x82\x01Rl\x1B\xDD\x08\x18H\x18\xDB\xDB\x9D\x1C\x98X\xDD`\x9A\x1B`d\x82\x01R`\x84\x01a\x031V[\x80\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBCa\x05\xE7V[\x805`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x06\xECW`\0\x80\xFD[\x91\x90PV[`\0` \x82\x84\x03\x12\x15a\x07\x03W`\0\x80\xFD[a\x02\x85\x82a\x06\xD5V[`\0\x80`\0`@\x84\x86\x03\x12\x15a\x07!W`\0\x80\xFD[a\x07*\x84a\x06\xD5V[\x92P` \x84\x015g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x82\x11\x15a\x07GW`\0\x80\xFD[\x81\x86\x01\x91P\x86`\x1F\x83\x01\x12a\x07[W`\0\x80\xFD[\x815\x81\x81\x11\x15a\x07jW`\0\x80\xFD[\x87` \x82\x85\x01\x01\x11\x15a\x07|W`\0\x80\xFD[` \x83\x01\x94P\x80\x93PPPP\x92P\x92P\x92V[`\0[\x83\x81\x10\x15a\x07\xAAW\x81\x81\x01Q\x83\x82\x01R` \x01a\x07\x92V[\x83\x81\x11\x15a\x03\xC0WPP`\0\x91\x01RV[`\0\x82Qa\x07\xCD\x81\x84` \x87\x01a\x07\x8FV[\x91\x90\x91\x01\x92\x91PPV[` \x81R`\0\x82Q\x80` \x84\x01Ra\x07\xF6\x81`@\x85\x01` \x87\x01a\x07\x8FV[`\x1F\x01`\x1F\x19\x16\x91\x90\x91\x01`@\x01\x92\x91PPV\xFEAddress: low-level delegate call failed\xA2dipfsX\"\x12 t \xB9\xD3\xA1z\x9BK\x12yH*\xEAb\x85[8\xB1\xF3\xC3he\xE17\x12\xF5c/:H\x7F7dsolcC\0\x08\x0C\x003\xB51'hJV\x8B1s\xAE\x13\xB9\xF8\xA6\x01n$>c\xB6\xE8\xEE\x11x\xD6\xA7\x17\x85\x0B]a\x03Address: low-level delegate call failed.addresses.baseStrategyImplementation.addresses.operatorStateRetriever\x88\\\xB6\x92@\xA95\xD62\xD7\x9C1q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-token_and_strategy_deployment_output\xA2dipfsX\"\x12 \r\xBE\x01a8\xA8\xDD-/\xCF-\x0C\xEFs8\xEF\x81\xFA3\xF7/\xCB\x95\x0FJfn\x05\x9C\xC8\x9E\x9EdsolcC\0\x08\x0C\x003",
    );
    /// The runtime bytecode of the contract, as deployed on the network.
    ///
    /// ```text
    ///0x60806040523480156200001157600080fd5b50600436106200003a5760003560e01c8063c0406226146200003f578063f8ccbf47146200004b575b600080fd5b6200004962000073565b005b600c546200005f9062010000900460ff1681565b604051901515815260200160405180910390f35b735fbdb2315678afecb367f032d93f642f64180aa36000620000946200036c565b90506000620000a2620005fa565b90506000806000805160206200310d83398151915260001c6001600160a01b0316637fb5297f6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620000f557600080fd5b505af11580156200010a573d6000803e3d6000fd5b5050505060006000805160206200310d83398151915260001c6001600160a01b03166342cbb15c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000161573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000187919062001297565b905046617a6914806200019b575046610539145b156200025257620001bf856000015186602001518760e001518860400151620008b6565b60408051630fe7858560e31b81526004810191909152601160448201527065726332304d6f636b537472617465677960781b60648201526001600160a01b038083166024830152919550919350871690637f3c2c2890608401600060405180830381600087803b1580156200023357600080fd5b505af115801562000248573d6000803e3d6000fd5b50505050620002ed565b4661426814156200029157735c8b55722f421556a2aafb7a3ea63d4c3e5143129250733f1c547b21f65e10480de3ad8e19faac46c950349150620002ed565b60405162461bcd60e51b815260206004820152602660248201527f436f6e66696775726520546f6b656e20616e6420537472617465677920666f726044820152651021b430b4b760d11b60648201526084015b60405180910390fd5b620002fd84602001518462000d16565b6000805160206200310d83398151915260001c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200034b57600080fd5b505af115801562000360573d6000803e3d6000fd5b50505050505050505050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526000620003ef6040518060400160405280601c81526020017f656967656e6c617965725f6465706c6f796d656e745f6f75747075740000000081525062000e38565b9050600062000434826040518060400160405280601f81526020017f2e6164647265737365732e656967656e4c6179657250726f787941646d696e008152506200104f565b9050600062000479836040518060400160405280601e81526020017f2e6164647265737365732e656967656e4c6179657250617573657252656700008152506200104f565b90506000620004be846040518060400160405280601a81526020017f2e6164647265737365732e73747261746567794d616e616765720000000000008152506200104f565b90506000620004fb85604051806040016040528060158152602001741730b2323932b9b9b2b9973232b632b3b0ba34b7b760591b8152506200104f565b9050600062000540866040518060400160405280601781526020017f2e6164647265737365732e6176734469726563746f72790000000000000000008152506200104f565b905060006200057a87604051806040016040528060128152602001711730b2323932b9b9b2b99739b630b9b432b960711b8152506200104f565b90506000620005a388604051806060016040528060258152602001620030c7602591396200104f565b60408051610100810182526001600160a01b03998a1681529789166020890152958816958701959095525091851660608501529084166080840152831660a0830152600060c083015290911660e082015292915050565b60408051606081018252600080825260208201819052918101919091526000620006596040518060400160405280601981526020017f6d6f636b6176735f6465706c6f796d656e745f6f75747075740000000000000081525062000e38565b905060006200069e826040518060400160405280602081526020017f2e6164647265737365732e6d6f636b417673536572766963654d616e616765728152506200104f565b90506001600160a01b0381166200071e5760405162461bcd60e51b815260206004820152603a60248201527f4d6f636b417673436f6e7472616374735061727365723a206d6f636b4176735360448201527f6572766963654d616e61676572206164647265737320697320300000000000006064820152608401620002e4565b600062000761836040518060400160405280601e81526020017f2e6164647265737365732e7265676973747279436f6f7264696e61746f7200008152506200104f565b90506001600160a01b038116620007e15760405162461bcd60e51b815260206004820152603860248201527f4d6f636b417673436f6e7472616374735061727365723a20726567697374727960448201527f436f6f7264696e61746f722061646472657373206973203000000000000000006064820152608401620002e4565b60006200080884604051806060016040528060218152602001620030ec602191396200104f565b90506001600160a01b038116620008885760405162461bcd60e51b815260206004820152603b60248201527f4d6f636b417673436f6e7472616374735061727365723a206f70657261746f7260448201527f53746174655265747269657665722061646472657373206973203000000000006064820152608401620002e4565b604080516060810182526001600160a01b039485168152928416602084015292169181019190915292915050565b6000806000604051620008c9906200127b565b604051809103906000f080158015620008e6573d6000803e3d6000fd5b50600d546040516340c10f1960e01b815232600482015260248101919091529091506001600160a01b038216906340c10f1990604401600060405180830381600087803b1580156200093757600080fd5b505af11580156200094c573d6000803e3d6000fd5b505060408051683635c9adc5dea000006024820181905260448201526001600160a01b0385811660648301528a166084808301919091528251808303909101815260a490910182526020810180516001600160e01b031663019e272960e01b1790529051600093508892508a9190620009c59062001289565b620009d39392919062001312565b604051809103906000f080158015620009f0573d6000803e3d6000fd5b506040805160018082528183019092529192506000919060208083019080368337019050509050818160008151811062000a2e5762000a2e62001356565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905060008160008151811062000a835762000a8362001356565b9115156020928302919091019091015260405163df5b354760e01b81526001600160a01b0388169063df5b35479062000ac390859085906004016200136c565b600060405180830381600087803b15801562000ade57600080fd5b505af115801562000af3573d6000803e3d6000fd5b5050604080518082018252600d81526c1c185c995b9d081bd89a9958dd609a1b60208083019190915282518084018452600981526861646472657373657360b81b918101919091529151634b96303160e11b8152909350909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063972c60629062000b7b9084908a90600401620013f6565b6000604051808303816000875af115801562000b9b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000bc5919081019062001445565b50604051634b96303160e11b8152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063972c60629062000c049085908a90600401620014fe565b6000604051808303816000875af115801562000c24573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c4e919081019062001445565b6040516388da6d3560e01b8152909150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d906388da6d359062000c919087908790879060040162001555565b6000604051808303816000875af115801562000cb1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000cdb919081019062001445565b905062000d02816040518060600160405280602481526020016200312d60249139620010d8565b50959c949b50939950505050505050505050565b604080516060810182526127108152613a9860208201526064818301528151600180825281840190935290916000918291816020015b604080518082019091526000808252602082015281526020019060019003908162000d4c5790505090506040518060400160405280856001600160a01b03168152602001670de0b6b3a76400006bffffffffffffffffffffffff168152508160008151811062000dc05762000dc062001356565b6020908102919091010152604051631aeb699160e31b81526001600160a01b0386169063d75b4c889062000dfd908690869086906004016200159e565b600060405180830381600087803b15801562000e1857600080fd5b505af115801562000e2d573d6000803e3d6000fd5b505050505050505050565b606060006000805160206200310d83398151915260001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000e8d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000eb7919081019062001445565b60405160200162000ec991906200163f565b60408051808303601f190181529082905263348051d760e11b82524660048301529150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa15801562000f2c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000f56919081019062001445565b60405160200162000f68919062001674565b604051602081830303815290604052905060008460405160200162000f8e91906200169b565b60408051601f19818403018152908290529150737109709ecfa91a80626ff3989d68f67f5b1dd12d906360f9bb119062000fd190869086908690602001620016c6565b6040516020818303038152906040526040518263ffffffff1660e01b815260040162000ffe91906200170f565b600060405180830381865afa1580156200101c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001046919081019062001445565b95945050505050565b604051631e19e65760e01b8152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90631e19e657906200108d908690869060040162001724565b602060405180830381865afa158015620010ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010d191906200174d565b9392505050565b60006000805160206200310d83398151915260001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200112b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001155919081019062001445565b6040516020016200116791906200163f565b60408051808303601f190181529082905263348051d760e11b82524660048301529150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015620011ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620011f4919081019062001445565b60405160200162001206919062001674565b60405160208183030381529060405290506000828285604051602001620012309392919062001778565b60408051601f198184030181529082905263e23cd19f60e01b82529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e23cd19f9062000dfd908890859060040162001724565b610a7480620017d283390190565b610e81806200224683390190565b600060208284031215620012aa57600080fd5b5051919050565b60005b83811015620012ce578181015183820152602001620012b4565b83811115620012de576000848401525b50505050565b60008151808452620012fe816020860160208601620012b1565b601f01601f19169290920160200192915050565b6001600160a01b038481168252831660208201526060604082018190526000906200104690830184620012e4565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b604080825283519082018190526000906020906060840190828701845b82811015620013b05781516001600160a01b03168452928401929084019060010162001389565b5050508381038285015284518082528583019183019060005b81811015620013e9578351151583529284019291840191600101620013c9565b5090979650505050505050565b6060815260006200140b6060830185620012e4565b828103602080850191909152600982526865726332306d6f636b60b81b908201526001600160a01b03939093166040928301525001919050565b6000602082840312156200145857600080fd5b815167ffffffffffffffff808211156200147157600080fd5b818401915084601f8301126200148657600080fd5b8151818111156200149b576200149b62001340565b604051601f8201601f19908116603f01168101908382118183101715620014c657620014c662001340565b81604052828152876020848701011115620014e057600080fd5b620014f3836020830160208801620012b1565b979650505050505050565b606081526000620015136060830185620012e4565b828103602080850191909152601182527065726332306d6f636b737472617465677960781b908201526001600160a01b03939093166040928301525001919050565b6060815260006200156a6060830186620012e4565b82810360208401526200157e8186620012e4565b90508281036040840152620015948185620012e4565b9695505050505050565b600060a0820163ffffffff865116835260208087015161ffff808216838701526040915080828a01511682870152506bffffffffffffffffffffffff808816606087015260a0608087015283875180865260c088019150848901955060005b818110156200162f57865180516001600160a01b031684528601518416868401529585019591840191600101620015fd565b50909a9950505050505050505050565b6000825162001653818460208701620012b1565b6e2f7363726970742f6f75747075742f60881b920191825250600f01919050565b6000825162001688818460208701620012b1565b602f60f81b920191825250600101919050565b60008251620016af818460208701620012b1565b64173539b7b760d91b920191825250600501919050565b60008451620016da818460208901620012b1565b845190830190620016f0818360208901620012b1565b845191019062001705818360208801620012b1565b0195945050505050565b602081526000620010d16020830184620012e4565b604081526000620017396040830185620012e4565b8281036020840152620010468185620012e4565b6000602082840312156200176057600080fd5b81516001600160a01b0381168114620010d157600080fd5b600084516200178c818460208901620012b1565b845190830190620017a2818360208901620012b1565b8451910190620017b7818360208801620012b1565b64173539b7b760d91b91019081526005019594505050505056fe608060405234801561001057600080fd5b506040518060400160405280600a81526020016926b7b1b5902a37b5b2b760b11b815250604051806040016040528060038152602001624d434b60e81b8152508160039080519060200190610066929190610082565b50805161007a906004906020840190610082565b505050610156565b82805461008e9061011b565b90600052602060002090601f0160209004810192826100b057600085556100f6565b82601f106100c957805160ff19168380011785556100f6565b828001600101855582156100f6579182015b828111156100f65782518255916020019190600101906100db565b50610102929150610106565b5090565b5b808211156101025760008155600101610107565b600181811c9082168061012f57607f821691505b6020821081141561015057634e487b7160e01b600052602260045260246000fd5b50919050565b61090f806101656000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce919061074c565b60405180910390f35b6100ea6100e53660046107bd565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a3660046107e7565b61026a565b604051601281526020016100ce565b6100ea61013c3660046107bd565b610277565b61015461014f3660046107bd565b610299565b005b6100fe610164366004610823565b6001600160a01b031660009081526020819052604090205490565b6100c16102a7565b6100ea6101953660046107bd565b6102b6565b6100ea6101a83660046107bd565b610341565b6100fe6101bb366004610845565b61034f565b6060600380546101cf90610878565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610878565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b60003361026081858561037a565b5060019392505050565b600061026084848461049e565b60003361026081858561028a838361034f565b61029491906108b3565b61037a565b6102a3828261066d565b5050565b6060600480546101cf90610878565b600033816102c4828661034f565b9050838110156103295760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610336828686840361037a565b506001949350505050565b60003361026081858561049e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103dc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610320565b6001600160a01b03821661043d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610320565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105025760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610320565b6001600160a01b0382166105645760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610320565b6001600160a01b038316600090815260208190526040902054818110156105dc5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610320565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106139084906108b3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161065f91815260200190565b60405180910390a350505050565b6001600160a01b0382166106c35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610320565b80600260008282546106d591906108b3565b90915550506001600160a01b038216600090815260208190526040812080548392906107029084906108b3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156107795785810183015185820160400152820161075d565b8181111561078b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107b857600080fd5b919050565b600080604083850312156107d057600080fd5b6107d9836107a1565b946020939093013593505050565b6000806000606084860312156107fc57600080fd5b610805846107a1565b9250610813602085016107a1565b9150604084013590509250925092565b60006020828403121561083557600080fd5b61083e826107a1565b9392505050565b6000806040838503121561085857600080fd5b610861836107a1565b915061086f602084016107a1565b90509250929050565b600181811c9082168061088c57607f821691505b602082108114156108ad57634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156108d457634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220cdd5dacf8932073a3caffc72e84d1bc1b5bd6191303c553cc00319f525760ef364736f6c634300080c0033608060405260405162000e8138038062000e81833981016040819052620000269162000490565b828162000036828260006200004d565b50620000449050826200008a565b505050620005c3565b6200005883620000e5565b600082511180620000665750805b1562000085576200008383836200012760201b620002601760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620000b562000156565b604080516001600160a01b03928316815291841660208301520160405180910390a1620000e2816200018f565b50565b620000f08162000244565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606200014f838360405180606001604052806027815260200162000e5a60279139620002f8565b9392505050565b60006200018060008051602062000e3a83398151915260001b620003de60201b620002081760201c565b546001600160a01b0316919050565b6001600160a01b038116620001fa5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b806200022360008051602062000e3a83398151915260001b620003de60201b620002081760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6200025a81620003e160201b6200028c1760201c565b620002be5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401620001f1565b80620002237f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b620003de60201b620002081760201c565b60606001600160a01b0384163b620003625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401620001f1565b600080856001600160a01b0316856040516200037f919062000570565b600060405180830381855af49150503d8060008114620003bc576040519150601f19603f3d011682016040523d82523d6000602084013e620003c1565b606091505b509092509050620003d4828286620003f0565b9695505050505050565b90565b6001600160a01b03163b151590565b60608315620004015750816200014f565b825115620004125782518084602001fd5b8160405162461bcd60e51b8152600401620001f191906200058e565b80516001600160a01b03811681146200044657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200047e57818101518382015260200162000464565b83811115620000835750506000910152565b600080600060608486031215620004a657600080fd5b620004b1846200042e565b9250620004c1602085016200042e565b60408501519092506001600160401b0380821115620004df57600080fd5b818601915086601f830112620004f457600080fd5b8151818111156200050957620005096200044b565b604051601f8201601f19908116603f011681019083821181831017156200053457620005346200044b565b816040528281528960208487010111156200054e57600080fd5b6200056183602083016020880162000461565b80955050505050509250925092565b600082516200058481846020870162000461565b9190910192915050565b6020815260008251806020840152620005af81604085016020870162000461565b601f01601f19169190910160400192915050565b61086780620005d36000396000f3fe60806040526004361061004e5760003560e01c80633659cfe6146100655780634f1ef286146100855780635c60da1b146100985780638f283970146100c9578063f851a440146100e95761005d565b3661005d5761005b6100fe565b005b61005b6100fe565b34801561007157600080fd5b5061005b6100803660046106f1565b610118565b61005b61009336600461070c565b61015f565b3480156100a457600080fd5b506100ad6101d0565b6040516001600160a01b03909116815260200160405180910390f35b3480156100d557600080fd5b5061005b6100e43660046106f1565b61020b565b3480156100f557600080fd5b506100ad610235565b61010661029b565b61011661011161033a565b610344565b565b610120610368565b6001600160a01b0316336001600160a01b03161415610157576101548160405180602001604052806000815250600061039b565b50565b6101546100fe565b610167610368565b6001600160a01b0316336001600160a01b031614156101c8576101c38383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506001925061039b915050565b505050565b6101c36100fe565b60006101da610368565b6001600160a01b0316336001600160a01b03161415610200576101fb61033a565b905090565b6102086100fe565b90565b610213610368565b6001600160a01b0316336001600160a01b0316141561015757610154816103c6565b600061023f610368565b6001600160a01b0316336001600160a01b03161415610200576101fb610368565b6060610285838360405180606001604052806027815260200161080b6027913961041a565b9392505050565b6001600160a01b03163b151590565b6102a3610368565b6001600160a01b0316336001600160a01b031614156101165760405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b60006101fb6104f7565b3660008037600080366000845af43d6000803e808015610363573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b6103a48361051f565b6000825111806103b15750805b156101c3576103c08383610260565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6103ef610368565b604080516001600160a01b03928316815291841660208301520160405180910390a16101548161055f565b60606001600160a01b0384163b6104825760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610331565b600080856001600160a01b03168560405161049d91906107bb565b600060405180830381855af49150503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b50915091506104ed828286610608565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc61038c565b61052881610641565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b0381166105c45760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608401610331565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80546001600160a01b0319166001600160a01b039290921691909117905550565b60608315610617575081610285565b8251156106275782518084602001fd5b8160405162461bcd60e51b815260040161033191906107d7565b6001600160a01b0381163b6106ae5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610331565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6105e7565b80356001600160a01b03811681146106ec57600080fd5b919050565b60006020828403121561070357600080fd5b610285826106d5565b60008060006040848603121561072157600080fd5b61072a846106d5565b9250602084013567ffffffffffffffff8082111561074757600080fd5b818601915086601f83011261075b57600080fd5b81358181111561076a57600080fd5b87602082850101111561077c57600080fd5b6020830194508093505050509250925092565b60005b838110156107aa578181015183820152602001610792565b838111156103c05750506000910152565b600082516107cd81846020870161078f565b9190910192915050565b60208152600082518060208401526107f681604085016020870161078f565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207420b9d3a17a9b4b1279482aea62855b38b1f3c36865e13712f5632f3a487f3764736f6c634300080c0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65642e6164647265737365732e626173655374726174656779496d706c656d656e746174696f6e2e6164647265737365732e6f70657261746f725374617465526574726965766572885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d746f6b656e5f616e645f73747261746567795f6465706c6f796d656e745f6f7574707574a26469706673582212200dbe016138a8dd2d2fcf2d0cef7338ef81fa33f72fcb950f4a666e059cc89e9e64736f6c634300080c0033
    /// ```
    #[rustfmt::skip]
    #[allow(clippy::all)]
    pub static DEPLOYED_BYTECODE: alloy_sol_types::private::Bytes = alloy_sol_types::private::Bytes::from_static(
        b"`\x80`@R4\x80\x15b\0\0\x11W`\0\x80\xFD[P`\x046\x10b\0\0:W`\x005`\xE0\x1C\x80c\xC0@b&\x14b\0\0?W\x80c\xF8\xCC\xBFG\x14b\0\0KW[`\0\x80\xFD[b\0\0Ib\0\0sV[\0[`\x0CTb\0\0_\x90b\x01\0\0\x90\x04`\xFF\x16\x81V[`@Q\x90\x15\x15\x81R` \x01`@Q\x80\x91\x03\x90\xF3[s_\xBD\xB21Vx\xAF\xEC\xB3g\xF02\xD9?d/d\x18\n\xA3`\0b\0\0\x94b\0\x03lV[\x90P`\0b\0\0\xA2b\0\x05\xFAV[\x90P`\0\x80`\0\x80Q` b\x001\r\x839\x81Q\x91R`\0\x1C`\x01`\x01`\xA0\x1B\x03\x16c\x7F\xB5)\x7F`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15b\0\0\xF5W`\0\x80\xFD[PZ\xF1\x15\x80\x15b\0\x01\nW=`\0\x80>=`\0\xFD[PPPP`\0`\0\x80Q` b\x001\r\x839\x81Q\x91R`\0\x1C`\x01`\x01`\xA0\x1B\x03\x16cB\xCB\xB1\\`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x01aW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90b\0\x01\x87\x91\x90b\0\x12\x97V[\x90PFazi\x14\x80b\0\x01\x9BWPFa\x059\x14[\x15b\0\x02RWb\0\x01\xBF\x85`\0\x01Q\x86` \x01Q\x87`\xE0\x01Q\x88`@\x01Qb\0\x08\xB6V[`@\x80Qc\x0F\xE7\x85\x85`\xE3\x1B\x81R`\x04\x81\x01\x91\x90\x91R`\x11`D\x82\x01Rperc20MockStrategy`x\x1B`d\x82\x01R`\x01`\x01`\xA0\x1B\x03\x80\x83\x16`$\x83\x01R\x91\x95P\x91\x93P\x87\x16\x90c\x7F<,(\x90`\x84\x01`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15b\0\x023W`\0\x80\xFD[PZ\xF1\x15\x80\x15b\0\x02HW=`\0\x80>=`\0\xFD[PPPPb\0\x02\xEDV[FaBh\x14\x15b\0\x02\x91Ws\\\x8BUr/B\x15V\xA2\xAA\xFBz>\xA6=L>QC\x12\x92Ps?\x1CT{!\xF6^\x10H\r\xE3\xAD\x8E\x19\xFA\xACF\xC9P4\x91Pb\0\x02\xEDV[`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FConfigure Token and Strategy for`D\x82\x01Re\x10!\xB40\xB4\xB7`\xD1\x1B`d\x82\x01R`\x84\x01[`@Q\x80\x91\x03\x90\xFD[b\0\x02\xFD\x84` \x01Q\x84b\0\r\x16V[`\0\x80Q` b\x001\r\x839\x81Q\x91R`\0\x1C`\x01`\x01`\xA0\x1B\x03\x16cv\xEA\xDD6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15b\0\x03KW`\0\x80\xFD[PZ\xF1\x15\x80\x15b\0\x03`W=`\0\x80>=`\0\xFD[PPPPPPPPPPV[`@\x80Qa\x01\0\x81\x01\x82R`\0\x80\x82R` \x82\x01\x81\x90R\x91\x81\x01\x82\x90R``\x81\x01\x82\x90R`\x80\x81\x01\x82\x90R`\xA0\x81\x01\x82\x90R`\xC0\x81\x01\x82\x90R`\xE0\x81\x01\x91\x90\x91R`\0b\0\x03\xEF`@Q\x80`@\x01`@R\x80`\x1C\x81R` \x01\x7Feigenlayer_deployment_output\0\0\0\0\x81RPb\0\x0E8V[\x90P`\0b\0\x044\x82`@Q\x80`@\x01`@R\x80`\x1F\x81R` \x01\x7F.addresses.eigenLayerProxyAdmin\0\x81RPb\0\x10OV[\x90P`\0b\0\x04y\x83`@Q\x80`@\x01`@R\x80`\x1E\x81R` \x01\x7F.addresses.eigenLayerPauserReg\0\0\x81RPb\0\x10OV[\x90P`\0b\0\x04\xBE\x84`@Q\x80`@\x01`@R\x80`\x1A\x81R` \x01\x7F.addresses.strategyManager\0\0\0\0\0\0\x81RPb\0\x10OV[\x90P`\0b\0\x04\xFB\x85`@Q\x80`@\x01`@R\x80`\x15\x81R` \x01t\x170\xB2292\xB9\xB9\xB2\xB9\x9722\xB62\xB3\xB0\xBA4\xB7\xB7`Y\x1B\x81RPb\0\x10OV[\x90P`\0b\0\x05@\x86`@Q\x80`@\x01`@R\x80`\x17\x81R` \x01\x7F.addresses.avsDirectory\0\0\0\0\0\0\0\0\0\x81RPb\0\x10OV[\x90P`\0b\0\x05z\x87`@Q\x80`@\x01`@R\x80`\x12\x81R` \x01q\x170\xB2292\xB9\xB9\xB2\xB9\x979\xB60\xB9\xB42\xB9`q\x1B\x81RPb\0\x10OV[\x90P`\0b\0\x05\xA3\x88`@Q\x80``\x01`@R\x80`%\x81R` \x01b\x000\xC7`%\x919b\0\x10OV[`@\x80Qa\x01\0\x81\x01\x82R`\x01`\x01`\xA0\x1B\x03\x99\x8A\x16\x81R\x97\x89\x16` \x89\x01R\x95\x88\x16\x95\x87\x01\x95\x90\x95RP\x91\x85\x16``\x85\x01R\x90\x84\x16`\x80\x84\x01R\x83\x16`\xA0\x83\x01R`\0`\xC0\x83\x01R\x90\x91\x16`\xE0\x82\x01R\x92\x91PPV[`@\x80Q``\x81\x01\x82R`\0\x80\x82R` \x82\x01\x81\x90R\x91\x81\x01\x91\x90\x91R`\0b\0\x06Y`@Q\x80`@\x01`@R\x80`\x19\x81R` \x01\x7Fmockavs_deployment_output\0\0\0\0\0\0\0\x81RPb\0\x0E8V[\x90P`\0b\0\x06\x9E\x82`@Q\x80`@\x01`@R\x80` \x81R` \x01\x7F.addresses.mockAvsServiceManager\x81RPb\0\x10OV[\x90P`\x01`\x01`\xA0\x1B\x03\x81\x16b\0\x07\x1EW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`:`$\x82\x01R\x7FMockAvsContractsParser: mockAvsS`D\x82\x01R\x7FerviceManager address is 0\0\0\0\0\0\0`d\x82\x01R`\x84\x01b\0\x02\xE4V[`\0b\0\x07a\x83`@Q\x80`@\x01`@R\x80`\x1E\x81R` \x01\x7F.addresses.registryCoordinator\0\0\x81RPb\0\x10OV[\x90P`\x01`\x01`\xA0\x1B\x03\x81\x16b\0\x07\xE1W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`8`$\x82\x01R\x7FMockAvsContractsParser: registry`D\x82\x01R\x7FCoordinator address is 0\0\0\0\0\0\0\0\0`d\x82\x01R`\x84\x01b\0\x02\xE4V[`\0b\0\x08\x08\x84`@Q\x80``\x01`@R\x80`!\x81R` \x01b\x000\xEC`!\x919b\0\x10OV[\x90P`\x01`\x01`\xA0\x1B\x03\x81\x16b\0\x08\x88W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`;`$\x82\x01R\x7FMockAvsContractsParser: operator`D\x82\x01R\x7FStateRetriever address is 0\0\0\0\0\0`d\x82\x01R`\x84\x01b\0\x02\xE4V[`@\x80Q``\x81\x01\x82R`\x01`\x01`\xA0\x1B\x03\x94\x85\x16\x81R\x92\x84\x16` \x84\x01R\x92\x16\x91\x81\x01\x91\x90\x91R\x92\x91PPV[`\0\x80`\0`@Qb\0\x08\xC9\x90b\0\x12{V[`@Q\x80\x91\x03\x90`\0\xF0\x80\x15\x80\x15b\0\x08\xE6W=`\0\x80>=`\0\xFD[P`\rT`@Qc@\xC1\x0F\x19`\xE0\x1B\x81R2`\x04\x82\x01R`$\x81\x01\x91\x90\x91R\x90\x91P`\x01`\x01`\xA0\x1B\x03\x82\x16\x90c@\xC1\x0F\x19\x90`D\x01`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15b\0\t7W`\0\x80\xFD[PZ\xF1\x15\x80\x15b\0\tLW=`\0\x80>=`\0\xFD[PP`@\x80Qh65\xC9\xAD\xC5\xDE\xA0\0\0`$\x82\x01\x81\x90R`D\x82\x01R`\x01`\x01`\xA0\x1B\x03\x85\x81\x16`d\x83\x01R\x8A\x16`\x84\x80\x83\x01\x91\x90\x91R\x82Q\x80\x83\x03\x90\x91\x01\x81R`\xA4\x90\x91\x01\x82R` \x81\x01\x80Q`\x01`\x01`\xE0\x1B\x03\x16c\x01\x9E')`\xE0\x1B\x17\x90R\x90Q`\0\x93P\x88\x92P\x8A\x91\x90b\0\t\xC5\x90b\0\x12\x89V[b\0\t\xD3\x93\x92\x91\x90b\0\x13\x12V[`@Q\x80\x91\x03\x90`\0\xF0\x80\x15\x80\x15b\0\t\xF0W=`\0\x80>=`\0\xFD[P`@\x80Q`\x01\x80\x82R\x81\x83\x01\x90\x92R\x91\x92P`\0\x91\x90` \x80\x83\x01\x90\x806\x837\x01\x90PP\x90P\x81\x81`\0\x81Q\x81\x10b\0\n.Wb\0\n.b\0\x13VV[`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16` \x92\x83\x02\x91\x90\x91\x01\x90\x91\x01R`@\x80Q`\x01\x80\x82R\x81\x83\x01\x90\x92R`\0\x91\x81` \x01` \x82\x02\x806\x837\x01\x90PP\x90P`\0\x81`\0\x81Q\x81\x10b\0\n\x83Wb\0\n\x83b\0\x13VV[\x91\x15\x15` \x92\x83\x02\x91\x90\x91\x01\x90\x91\x01R`@Qc\xDF[5G`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x88\x16\x90c\xDF[5G\x90b\0\n\xC3\x90\x85\x90\x85\x90`\x04\x01b\0\x13lV[`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15b\0\n\xDEW`\0\x80\xFD[PZ\xF1\x15\x80\x15b\0\n\xF3W=`\0\x80>=`\0\xFD[PP`@\x80Q\x80\x82\x01\x82R`\r\x81Rl\x1C\x18\\\x99[\x9D\x08\x1B\xD8\x9A\x99X\xDD`\x9A\x1B` \x80\x83\x01\x91\x90\x91R\x82Q\x80\x84\x01\x84R`\t\x81Rhaddresses`\xB8\x1B\x91\x81\x01\x91\x90\x91R\x91QcK\x9601`\xE1\x1B\x81R\x90\x93P\x90\x91Psq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x97,`b\x90b\0\x0B{\x90\x84\x90\x8A\x90`\x04\x01b\0\x13\xF6V[`\0`@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15b\0\x0B\x9BW=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x0B\xC5\x91\x90\x81\x01\x90b\0\x14EV[P`@QcK\x9601`\xE1\x1B\x81R`\0\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x97,`b\x90b\0\x0C\x04\x90\x85\x90\x8A\x90`\x04\x01b\0\x14\xFEV[`\0`@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15b\0\x0C$W=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x0CN\x91\x90\x81\x01\x90b\0\x14EV[`@Qc\x88\xDAm5`\xE0\x1B\x81R\x90\x91P`\0\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x88\xDAm5\x90b\0\x0C\x91\x90\x87\x90\x87\x90\x87\x90`\x04\x01b\0\x15UV[`\0`@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15b\0\x0C\xB1W=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x0C\xDB\x91\x90\x81\x01\x90b\0\x14EV[\x90Pb\0\r\x02\x81`@Q\x80``\x01`@R\x80`$\x81R` \x01b\x001-`$\x919b\0\x10\xD8V[P\x95\x9C\x94\x9BP\x93\x99PPPPPPPPPPV[`@\x80Q``\x81\x01\x82Ra'\x10\x81Ra:\x98` \x82\x01R`d\x81\x83\x01R\x81Q`\x01\x80\x82R\x81\x84\x01\x90\x93R\x90\x91`\0\x91\x82\x91\x81` \x01[`@\x80Q\x80\x82\x01\x90\x91R`\0\x80\x82R` \x82\x01R\x81R` \x01\x90`\x01\x90\x03\x90\x81b\0\rLW\x90PP\x90P`@Q\x80`@\x01`@R\x80\x85`\x01`\x01`\xA0\x1B\x03\x16\x81R` \x01g\r\xE0\xB6\xB3\xA7d\0\0k\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x81RP\x81`\0\x81Q\x81\x10b\0\r\xC0Wb\0\r\xC0b\0\x13VV[` \x90\x81\x02\x91\x90\x91\x01\x01R`@Qc\x1A\xEBi\x91`\xE3\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x86\x16\x90c\xD7[L\x88\x90b\0\r\xFD\x90\x86\x90\x86\x90\x86\x90`\x04\x01b\0\x15\x9EV[`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15b\0\x0E\x18W`\0\x80\xFD[PZ\xF1\x15\x80\x15b\0\x0E-W=`\0\x80>=`\0\xFD[PPPPPPPPPV[```\0`\0\x80Q` b\x001\r\x839\x81Q\x91R`\0\x1C`\x01`\x01`\xA0\x1B\x03\x16c\xD90\xA0\xE6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x0E\x8DW=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x0E\xB7\x91\x90\x81\x01\x90b\0\x14EV[`@Q` \x01b\0\x0E\xC9\x91\x90b\0\x16?V[`@\x80Q\x80\x83\x03`\x1F\x19\x01\x81R\x90\x82\x90Rc4\x80Q\xD7`\xE1\x1B\x82RF`\x04\x83\x01R\x91P`\0\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90ci\0\xA3\xAE\x90`$\x01`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x0F,W=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x0FV\x91\x90\x81\x01\x90b\0\x14EV[`@Q` \x01b\0\x0Fh\x91\x90b\0\x16tV[`@Q` \x81\x83\x03\x03\x81R\x90`@R\x90P`\0\x84`@Q` \x01b\0\x0F\x8E\x91\x90b\0\x16\x9BV[`@\x80Q`\x1F\x19\x81\x84\x03\x01\x81R\x90\x82\x90R\x91Psq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c`\xF9\xBB\x11\x90b\0\x0F\xD1\x90\x86\x90\x86\x90\x86\x90` \x01b\0\x16\xC6V[`@Q` \x81\x83\x03\x03\x81R\x90`@R`@Q\x82c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01b\0\x0F\xFE\x91\x90b\0\x17\x0FV[`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x10\x1CW=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x10F\x91\x90\x81\x01\x90b\0\x14EV[\x95\x94PPPPPV[`@Qc\x1E\x19\xE6W`\xE0\x1B\x81R`\0\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x1E\x19\xE6W\x90b\0\x10\x8D\x90\x86\x90\x86\x90`\x04\x01b\0\x17$V[` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x10\xABW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90b\0\x10\xD1\x91\x90b\0\x17MV[\x93\x92PPPV[`\0`\0\x80Q` b\x001\r\x839\x81Q\x91R`\0\x1C`\x01`\x01`\xA0\x1B\x03\x16c\xD90\xA0\xE6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x11+W=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x11U\x91\x90\x81\x01\x90b\0\x14EV[`@Q` \x01b\0\x11g\x91\x90b\0\x16?V[`@\x80Q\x80\x83\x03`\x1F\x19\x01\x81R\x90\x82\x90Rc4\x80Q\xD7`\xE1\x1B\x82RF`\x04\x83\x01R\x91P`\0\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90ci\0\xA3\xAE\x90`$\x01`\0`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15b\0\x11\xCAW=`\0\x80>=`\0\xFD[PPPP`@Q=`\0\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Rb\0\x11\xF4\x91\x90\x81\x01\x90b\0\x14EV[`@Q` \x01b\0\x12\x06\x91\x90b\0\x16tV[`@Q` \x81\x83\x03\x03\x81R\x90`@R\x90P`\0\x82\x82\x85`@Q` \x01b\0\x120\x93\x92\x91\x90b\0\x17xV[`@\x80Q`\x1F\x19\x81\x84\x03\x01\x81R\x90\x82\x90Rc\xE2<\xD1\x9F`\xE0\x1B\x82R\x91Psq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\xE2<\xD1\x9F\x90b\0\r\xFD\x90\x88\x90\x85\x90`\x04\x01b\0\x17$V[a\nt\x80b\0\x17\xD2\x839\x01\x90V[a\x0E\x81\x80b\0\"F\x839\x01\x90V[`\0` \x82\x84\x03\x12\x15b\0\x12\xAAW`\0\x80\xFD[PQ\x91\x90PV[`\0[\x83\x81\x10\x15b\0\x12\xCEW\x81\x81\x01Q\x83\x82\x01R` \x01b\0\x12\xB4V[\x83\x81\x11\x15b\0\x12\xDEW`\0\x84\x84\x01R[PPPPV[`\0\x81Q\x80\x84Rb\0\x12\xFE\x81` \x86\x01` \x86\x01b\0\x12\xB1V[`\x1F\x01`\x1F\x19\x16\x92\x90\x92\x01` \x01\x92\x91PPV[`\x01`\x01`\xA0\x1B\x03\x84\x81\x16\x82R\x83\x16` \x82\x01R```@\x82\x01\x81\x90R`\0\x90b\0\x10F\x90\x83\x01\x84b\0\x12\xE4V[cNH{q`\xE0\x1B`\0R`A`\x04R`$`\0\xFD[cNH{q`\xE0\x1B`\0R`2`\x04R`$`\0\xFD[`@\x80\x82R\x83Q\x90\x82\x01\x81\x90R`\0\x90` \x90``\x84\x01\x90\x82\x87\x01\x84[\x82\x81\x10\x15b\0\x13\xB0W\x81Q`\x01`\x01`\xA0\x1B\x03\x16\x84R\x92\x84\x01\x92\x90\x84\x01\x90`\x01\x01b\0\x13\x89V[PPP\x83\x81\x03\x82\x85\x01R\x84Q\x80\x82R\x85\x83\x01\x91\x83\x01\x90`\0[\x81\x81\x10\x15b\0\x13\xE9W\x83Q\x15\x15\x83R\x92\x84\x01\x92\x91\x84\x01\x91`\x01\x01b\0\x13\xC9V[P\x90\x97\x96PPPPPPPV[``\x81R`\0b\0\x14\x0B``\x83\x01\x85b\0\x12\xE4V[\x82\x81\x03` \x80\x85\x01\x91\x90\x91R`\t\x82Rherc20mock`\xB8\x1B\x90\x82\x01R`\x01`\x01`\xA0\x1B\x03\x93\x90\x93\x16`@\x92\x83\x01RP\x01\x91\x90PV[`\0` \x82\x84\x03\x12\x15b\0\x14XW`\0\x80\xFD[\x81Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x82\x11\x15b\0\x14qW`\0\x80\xFD[\x81\x84\x01\x91P\x84`\x1F\x83\x01\x12b\0\x14\x86W`\0\x80\xFD[\x81Q\x81\x81\x11\x15b\0\x14\x9BWb\0\x14\x9Bb\0\x13@V[`@Q`\x1F\x82\x01`\x1F\x19\x90\x81\x16`?\x01\x16\x81\x01\x90\x83\x82\x11\x81\x83\x10\x17\x15b\0\x14\xC6Wb\0\x14\xC6b\0\x13@V[\x81`@R\x82\x81R\x87` \x84\x87\x01\x01\x11\x15b\0\x14\xE0W`\0\x80\xFD[b\0\x14\xF3\x83` \x83\x01` \x88\x01b\0\x12\xB1V[\x97\x96PPPPPPPV[``\x81R`\0b\0\x15\x13``\x83\x01\x85b\0\x12\xE4V[\x82\x81\x03` \x80\x85\x01\x91\x90\x91R`\x11\x82Rperc20mockstrategy`x\x1B\x90\x82\x01R`\x01`\x01`\xA0\x1B\x03\x93\x90\x93\x16`@\x92\x83\x01RP\x01\x91\x90PV[``\x81R`\0b\0\x15j``\x83\x01\x86b\0\x12\xE4V[\x82\x81\x03` \x84\x01Rb\0\x15~\x81\x86b\0\x12\xE4V[\x90P\x82\x81\x03`@\x84\x01Rb\0\x15\x94\x81\x85b\0\x12\xE4V[\x96\x95PPPPPPV[`\0`\xA0\x82\x01c\xFF\xFF\xFF\xFF\x86Q\x16\x83R` \x80\x87\x01Qa\xFF\xFF\x80\x82\x16\x83\x87\x01R`@\x91P\x80\x82\x8A\x01Q\x16\x82\x87\x01RPk\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x88\x16``\x87\x01R`\xA0`\x80\x87\x01R\x83\x87Q\x80\x86R`\xC0\x88\x01\x91P\x84\x89\x01\x95P`\0[\x81\x81\x10\x15b\0\x16/W\x86Q\x80Q`\x01`\x01`\xA0\x1B\x03\x16\x84R\x86\x01Q\x84\x16\x86\x84\x01R\x95\x85\x01\x95\x91\x84\x01\x91`\x01\x01b\0\x15\xFDV[P\x90\x9A\x99PPPPPPPPPPV[`\0\x82Qb\0\x16S\x81\x84` \x87\x01b\0\x12\xB1V[n/script/output/`\x88\x1B\x92\x01\x91\x82RP`\x0F\x01\x91\x90PV[`\0\x82Qb\0\x16\x88\x81\x84` \x87\x01b\0\x12\xB1V[`/`\xF8\x1B\x92\x01\x91\x82RP`\x01\x01\x91\x90PV[`\0\x82Qb\0\x16\xAF\x81\x84` \x87\x01b\0\x12\xB1V[d\x1759\xB7\xB7`\xD9\x1B\x92\x01\x91\x82RP`\x05\x01\x91\x90PV[`\0\x84Qb\0\x16\xDA\x81\x84` \x89\x01b\0\x12\xB1V[\x84Q\x90\x83\x01\x90b\0\x16\xF0\x81\x83` \x89\x01b\0\x12\xB1V[\x84Q\x91\x01\x90b\0\x17\x05\x81\x83` \x88\x01b\0\x12\xB1V[\x01\x95\x94PPPPPV[` \x81R`\0b\0\x10\xD1` \x83\x01\x84b\0\x12\xE4V[`@\x81R`\0b\0\x179`@\x83\x01\x85b\0\x12\xE4V[\x82\x81\x03` \x84\x01Rb\0\x10F\x81\x85b\0\x12\xE4V[`\0` \x82\x84\x03\x12\x15b\0\x17`W`\0\x80\xFD[\x81Q`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14b\0\x10\xD1W`\0\x80\xFD[`\0\x84Qb\0\x17\x8C\x81\x84` \x89\x01b\0\x12\xB1V[\x84Q\x90\x83\x01\x90b\0\x17\xA2\x81\x83` \x89\x01b\0\x12\xB1V[\x84Q\x91\x01\x90b\0\x17\xB7\x81\x83` \x88\x01b\0\x12\xB1V[d\x1759\xB7\xB7`\xD9\x1B\x91\x01\x90\x81R`\x05\x01\x95\x94PPPPPV\xFE`\x80`@R4\x80\x15a\0\x10W`\0\x80\xFD[P`@Q\x80`@\x01`@R\x80`\n\x81R` \x01i&\xB7\xB1\xB5\x90*7\xB5\xB2\xB7`\xB1\x1B\x81RP`@Q\x80`@\x01`@R\x80`\x03\x81R` \x01bMCK`\xE8\x1B\x81RP\x81`\x03\x90\x80Q\x90` \x01\x90a\0f\x92\x91\x90a\0\x82V[P\x80Qa\0z\x90`\x04\x90` \x84\x01\x90a\0\x82V[PPPa\x01VV[\x82\x80Ta\0\x8E\x90a\x01\x1BV[\x90`\0R` `\0 \x90`\x1F\x01` \x90\x04\x81\x01\x92\x82a\0\xB0W`\0\x85Ua\0\xF6V[\x82`\x1F\x10a\0\xC9W\x80Q`\xFF\x19\x16\x83\x80\x01\x17\x85Ua\0\xF6V[\x82\x80\x01`\x01\x01\x85U\x82\x15a\0\xF6W\x91\x82\x01[\x82\x81\x11\x15a\0\xF6W\x82Q\x82U\x91` \x01\x91\x90`\x01\x01\x90a\0\xDBV[Pa\x01\x02\x92\x91Pa\x01\x06V[P\x90V[[\x80\x82\x11\x15a\x01\x02W`\0\x81U`\x01\x01a\x01\x07V[`\x01\x81\x81\x1C\x90\x82\x16\x80a\x01/W`\x7F\x82\x16\x91P[` \x82\x10\x81\x14\x15a\x01PWcNH{q`\xE0\x1B`\0R`\"`\x04R`$`\0\xFD[P\x91\x90PV[a\t\x0F\x80a\x01e`\09`\0\xF3\xFE`\x80`@R4\x80\x15a\0\x10W`\0\x80\xFD[P`\x046\x10a\0\xB4W`\x005`\xE0\x1C\x80c@\xC1\x0F\x19\x11a\0qW\x80c@\xC1\x0F\x19\x14a\x01AW\x80cp\xA0\x821\x14a\x01VW\x80c\x95\xD8\x9BA\x14a\x01\x7FW\x80c\xA4W\xC2\xD7\x14a\x01\x87W\x80c\xA9\x05\x9C\xBB\x14a\x01\x9AW\x80c\xDDb\xED>\x14a\x01\xADW`\0\x80\xFD[\x80c\x06\xFD\xDE\x03\x14a\0\xB9W\x80c\t^\xA7\xB3\x14a\0\xD7W\x80c\x18\x16\r\xDD\x14a\0\xFAW\x80c#\xB8r\xDD\x14a\x01\x0CW\x80c1<\xE5g\x14a\x01\x1FW\x80c9P\x93Q\x14a\x01.W[`\0\x80\xFD[a\0\xC1a\x01\xC0V[`@Qa\0\xCE\x91\x90a\x07LV[`@Q\x80\x91\x03\x90\xF3[a\0\xEAa\0\xE56`\x04a\x07\xBDV[a\x02RV[`@Q\x90\x15\x15\x81R` \x01a\0\xCEV[`\x02T[`@Q\x90\x81R` \x01a\0\xCEV[a\0\xEAa\x01\x1A6`\x04a\x07\xE7V[a\x02jV[`@Q`\x12\x81R` \x01a\0\xCEV[a\0\xEAa\x01<6`\x04a\x07\xBDV[a\x02wV[a\x01Ta\x01O6`\x04a\x07\xBDV[a\x02\x99V[\0[a\0\xFEa\x01d6`\x04a\x08#V[`\x01`\x01`\xA0\x1B\x03\x16`\0\x90\x81R` \x81\x90R`@\x90 T\x90V[a\0\xC1a\x02\xA7V[a\0\xEAa\x01\x956`\x04a\x07\xBDV[a\x02\xB6V[a\0\xEAa\x01\xA86`\x04a\x07\xBDV[a\x03AV[a\0\xFEa\x01\xBB6`\x04a\x08EV[a\x03OV[```\x03\x80Ta\x01\xCF\x90a\x08xV[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x01\xFB\x90a\x08xV[\x80\x15a\x02HW\x80`\x1F\x10a\x02\x1DWa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x02HV[\x82\x01\x91\x90`\0R` `\0 \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x02+W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPPPP\x90P\x90V[`\x003a\x02`\x81\x85\x85a\x03zV[P`\x01\x93\x92PPPV[`\0a\x02`\x84\x84\x84a\x04\x9EV[`\x003a\x02`\x81\x85\x85a\x02\x8A\x83\x83a\x03OV[a\x02\x94\x91\x90a\x08\xB3V[a\x03zV[a\x02\xA3\x82\x82a\x06mV[PPV[```\x04\x80Ta\x01\xCF\x90a\x08xV[`\x003\x81a\x02\xC4\x82\x86a\x03OV[\x90P\x83\x81\x10\x15a\x03)W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`%`$\x82\x01R\x7FERC20: decreased allowance below`D\x82\x01Rd zero`\xD8\x1B`d\x82\x01R`\x84\x01[`@Q\x80\x91\x03\x90\xFD[a\x036\x82\x86\x86\x84\x03a\x03zV[P`\x01\x94\x93PPPPV[`\x003a\x02`\x81\x85\x85a\x04\x9EV[`\x01`\x01`\xA0\x1B\x03\x91\x82\x16`\0\x90\x81R`\x01` \x90\x81R`@\x80\x83 \x93\x90\x94\x16\x82R\x91\x90\x91R T\x90V[`\x01`\x01`\xA0\x1B\x03\x83\x16a\x03\xDCW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`$\x80\x82\x01R\x7FERC20: approve from the zero add`D\x82\x01Rcress`\xE0\x1B`d\x82\x01R`\x84\x01a\x03 V[`\x01`\x01`\xA0\x1B\x03\x82\x16a\x04=W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`\"`$\x82\x01R\x7FERC20: approve to the zero addre`D\x82\x01Rass`\xF0\x1B`d\x82\x01R`\x84\x01a\x03 V[`\x01`\x01`\xA0\x1B\x03\x83\x81\x16`\0\x81\x81R`\x01` \x90\x81R`@\x80\x83 \x94\x87\x16\x80\x84R\x94\x82R\x91\x82\x90 \x85\x90U\x90Q\x84\x81R\x7F\x8C[\xE1\xE5\xEB\xEC}[\xD1OqB}\x1E\x84\xF3\xDD\x03\x14\xC0\xF7\xB2)\x1E[ \n\xC8\xC7\xC3\xB9%\x91\x01`@Q\x80\x91\x03\x90\xA3PPPV[`\x01`\x01`\xA0\x1B\x03\x83\x16a\x05\x02W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`%`$\x82\x01R\x7FERC20: transfer from the zero ad`D\x82\x01Rddress`\xD8\x1B`d\x82\x01R`\x84\x01a\x03 V[`\x01`\x01`\xA0\x1B\x03\x82\x16a\x05dW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`#`$\x82\x01R\x7FERC20: transfer to the zero addr`D\x82\x01Rbess`\xE8\x1B`d\x82\x01R`\x84\x01a\x03 V[`\x01`\x01`\xA0\x1B\x03\x83\x16`\0\x90\x81R` \x81\x90R`@\x90 T\x81\x81\x10\x15a\x05\xDCW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FERC20: transfer amount exceeds b`D\x82\x01Realance`\xD0\x1B`d\x82\x01R`\x84\x01a\x03 V[`\x01`\x01`\xA0\x1B\x03\x80\x85\x16`\0\x90\x81R` \x81\x90R`@\x80\x82 \x85\x85\x03\x90U\x91\x85\x16\x81R\x90\x81 \x80T\x84\x92\x90a\x06\x13\x90\x84\x90a\x08\xB3V[\x92PP\x81\x90UP\x82`\x01`\x01`\xA0\x1B\x03\x16\x84`\x01`\x01`\xA0\x1B\x03\x16\x7F\xDD\xF2R\xAD\x1B\xE2\xC8\x9Bi\xC2\xB0h\xFC7\x8D\xAA\x95+\xA7\xF1c\xC4\xA1\x16(\xF5ZM\xF5#\xB3\xEF\x84`@Qa\x06_\x91\x81R` \x01\x90V[`@Q\x80\x91\x03\x90\xA3PPPPV[`\x01`\x01`\xA0\x1B\x03\x82\x16a\x06\xC3W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`\x1F`$\x82\x01R\x7FERC20: mint to the zero address\0`D\x82\x01R`d\x01a\x03 V[\x80`\x02`\0\x82\x82Ta\x06\xD5\x91\x90a\x08\xB3V[\x90\x91UPP`\x01`\x01`\xA0\x1B\x03\x82\x16`\0\x90\x81R` \x81\x90R`@\x81 \x80T\x83\x92\x90a\x07\x02\x90\x84\x90a\x08\xB3V[\x90\x91UPP`@Q\x81\x81R`\x01`\x01`\xA0\x1B\x03\x83\x16\x90`\0\x90\x7F\xDD\xF2R\xAD\x1B\xE2\xC8\x9Bi\xC2\xB0h\xFC7\x8D\xAA\x95+\xA7\xF1c\xC4\xA1\x16(\xF5ZM\xF5#\xB3\xEF\x90` \x01`@Q\x80\x91\x03\x90\xA3PPV[`\0` \x80\x83R\x83Q\x80\x82\x85\x01R`\0[\x81\x81\x10\x15a\x07yW\x85\x81\x01\x83\x01Q\x85\x82\x01`@\x01R\x82\x01a\x07]V[\x81\x81\x11\x15a\x07\x8BW`\0`@\x83\x87\x01\x01R[P`\x1F\x01`\x1F\x19\x16\x92\x90\x92\x01`@\x01\x93\x92PPPV[\x805`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x07\xB8W`\0\x80\xFD[\x91\x90PV[`\0\x80`@\x83\x85\x03\x12\x15a\x07\xD0W`\0\x80\xFD[a\x07\xD9\x83a\x07\xA1V[\x94` \x93\x90\x93\x015\x93PPPV[`\0\x80`\0``\x84\x86\x03\x12\x15a\x07\xFCW`\0\x80\xFD[a\x08\x05\x84a\x07\xA1V[\x92Pa\x08\x13` \x85\x01a\x07\xA1V[\x91P`@\x84\x015\x90P\x92P\x92P\x92V[`\0` \x82\x84\x03\x12\x15a\x085W`\0\x80\xFD[a\x08>\x82a\x07\xA1V[\x93\x92PPPV[`\0\x80`@\x83\x85\x03\x12\x15a\x08XW`\0\x80\xFD[a\x08a\x83a\x07\xA1V[\x91Pa\x08o` \x84\x01a\x07\xA1V[\x90P\x92P\x92\x90PV[`\x01\x81\x81\x1C\x90\x82\x16\x80a\x08\x8CW`\x7F\x82\x16\x91P[` \x82\x10\x81\x14\x15a\x08\xADWcNH{q`\xE0\x1B`\0R`\"`\x04R`$`\0\xFD[P\x91\x90PV[`\0\x82\x19\x82\x11\x15a\x08\xD4WcNH{q`\xE0\x1B`\0R`\x11`\x04R`$`\0\xFD[P\x01\x90V\xFE\xA2dipfsX\"\x12 \xCD\xD5\xDA\xCF\x892\x07:<\xAF\xFCr\xE8M\x1B\xC1\xB5\xBDa\x910<U<\xC0\x03\x19\xF5%v\x0E\xF3dsolcC\0\x08\x0C\x003`\x80`@R`@Qb\0\x0E\x818\x03\x80b\0\x0E\x81\x839\x81\x01`@\x81\x90Rb\0\0&\x91b\0\x04\x90V[\x82\x81b\0\x006\x82\x82`\0b\0\0MV[Pb\0\0D\x90P\x82b\0\0\x8AV[PPPb\0\x05\xC3V[b\0\0X\x83b\0\0\xE5V[`\0\x82Q\x11\x80b\0\0fWP\x80[\x15b\0\0\x85Wb\0\0\x83\x83\x83b\0\x01'` \x1Bb\0\x02`\x17` \x1CV[P[PPPV[\x7F~dMyB/\x17\xC0\x1EH\x94\xB5\xF4\xF5\x88\xD31\xEB\xFA(e=B\xAE\x83-\xC5\x9E8\xC9y\x8Fb\0\0\xB5b\0\x01VV[`@\x80Q`\x01`\x01`\xA0\x1B\x03\x92\x83\x16\x81R\x91\x84\x16` \x83\x01R\x01`@Q\x80\x91\x03\x90\xA1b\0\0\xE2\x81b\0\x01\x8FV[PV[b\0\0\xF0\x81b\0\x02DV[`@Q`\x01`\x01`\xA0\x1B\x03\x82\x16\x90\x7F\xBC|\xD7Z \xEE'\xFD\x9A\xDE\xBA\xB3 A\xF7U!M\xBCk\xFF\xA9\x0C\xC0\"[9\xDA.\\-;\x90`\0\x90\xA2PV[``b\0\x01O\x83\x83`@Q\x80``\x01`@R\x80`'\x81R` \x01b\0\x0EZ`'\x919b\0\x02\xF8V[\x93\x92PPPV[`\0b\0\x01\x80`\0\x80Q` b\0\x0E:\x839\x81Q\x91R`\0\x1Bb\0\x03\xDE` \x1Bb\0\x02\x08\x17` \x1CV[T`\x01`\x01`\xA0\x1B\x03\x16\x91\x90PV[`\x01`\x01`\xA0\x1B\x03\x81\x16b\0\x01\xFAW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FERC1967: new admin is the zero a`D\x82\x01Reddress`\xD0\x1B`d\x82\x01R`\x84\x01[`@Q\x80\x91\x03\x90\xFD[\x80b\0\x02#`\0\x80Q` b\0\x0E:\x839\x81Q\x91R`\0\x1Bb\0\x03\xDE` \x1Bb\0\x02\x08\x17` \x1CV[\x80T`\x01`\x01`\xA0\x1B\x03\x19\x16`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UPV[b\0\x02Z\x81b\0\x03\xE1` \x1Bb\0\x02\x8C\x17` \x1CV[b\0\x02\xBEW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`-`$\x82\x01R\x7FERC1967: new implementation is n`D\x82\x01Rl\x1B\xDD\x08\x18H\x18\xDB\xDB\x9D\x1C\x98X\xDD`\x9A\x1B`d\x82\x01R`\x84\x01b\0\x01\xF1V[\x80b\0\x02#\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBC`\0\x1Bb\0\x03\xDE` \x1Bb\0\x02\x08\x17` \x1CV[```\x01`\x01`\xA0\x1B\x03\x84\x16;b\0\x03bW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FAddress: delegate call to non-co`D\x82\x01Re\x1B\x9D\x1C\x98X\xDD`\xD2\x1B`d\x82\x01R`\x84\x01b\0\x01\xF1V[`\0\x80\x85`\x01`\x01`\xA0\x1B\x03\x16\x85`@Qb\0\x03\x7F\x91\x90b\0\x05pV[`\0`@Q\x80\x83\x03\x81\x85Z\xF4\x91PP=\x80`\0\x81\x14b\0\x03\xBCW`@Q\x91P`\x1F\x19`?=\x01\x16\x82\x01`@R=\x82R=`\0` \x84\x01>b\0\x03\xC1V[``\x91P[P\x90\x92P\x90Pb\0\x03\xD4\x82\x82\x86b\0\x03\xF0V[\x96\x95PPPPPPV[\x90V[`\x01`\x01`\xA0\x1B\x03\x16;\x15\x15\x90V[``\x83\x15b\0\x04\x01WP\x81b\0\x01OV[\x82Q\x15b\0\x04\x12W\x82Q\x80\x84` \x01\xFD[\x81`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01b\0\x01\xF1\x91\x90b\0\x05\x8EV[\x80Q`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14b\0\x04FW`\0\x80\xFD[\x91\x90PV[cNH{q`\xE0\x1B`\0R`A`\x04R`$`\0\xFD[`\0[\x83\x81\x10\x15b\0\x04~W\x81\x81\x01Q\x83\x82\x01R` \x01b\0\x04dV[\x83\x81\x11\x15b\0\0\x83WPP`\0\x91\x01RV[`\0\x80`\0``\x84\x86\x03\x12\x15b\0\x04\xA6W`\0\x80\xFD[b\0\x04\xB1\x84b\0\x04.V[\x92Pb\0\x04\xC1` \x85\x01b\0\x04.V[`@\x85\x01Q\x90\x92P`\x01`\x01`@\x1B\x03\x80\x82\x11\x15b\0\x04\xDFW`\0\x80\xFD[\x81\x86\x01\x91P\x86`\x1F\x83\x01\x12b\0\x04\xF4W`\0\x80\xFD[\x81Q\x81\x81\x11\x15b\0\x05\tWb\0\x05\tb\0\x04KV[`@Q`\x1F\x82\x01`\x1F\x19\x90\x81\x16`?\x01\x16\x81\x01\x90\x83\x82\x11\x81\x83\x10\x17\x15b\0\x054Wb\0\x054b\0\x04KV[\x81`@R\x82\x81R\x89` \x84\x87\x01\x01\x11\x15b\0\x05NW`\0\x80\xFD[b\0\x05a\x83` \x83\x01` \x88\x01b\0\x04aV[\x80\x95PPPPPP\x92P\x92P\x92V[`\0\x82Qb\0\x05\x84\x81\x84` \x87\x01b\0\x04aV[\x91\x90\x91\x01\x92\x91PPV[` \x81R`\0\x82Q\x80` \x84\x01Rb\0\x05\xAF\x81`@\x85\x01` \x87\x01b\0\x04aV[`\x1F\x01`\x1F\x19\x16\x91\x90\x91\x01`@\x01\x92\x91PPV[a\x08g\x80b\0\x05\xD3`\09`\0\xF3\xFE`\x80`@R`\x046\x10a\0NW`\x005`\xE0\x1C\x80c6Y\xCF\xE6\x14a\0eW\x80cO\x1E\xF2\x86\x14a\0\x85W\x80c\\`\xDA\x1B\x14a\0\x98W\x80c\x8F(9p\x14a\0\xC9W\x80c\xF8Q\xA4@\x14a\0\xE9Wa\0]V[6a\0]Wa\0[a\0\xFEV[\0[a\0[a\0\xFEV[4\x80\x15a\0qW`\0\x80\xFD[Pa\0[a\0\x806`\x04a\x06\xF1V[a\x01\x18V[a\0[a\0\x936`\x04a\x07\x0CV[a\x01_V[4\x80\x15a\0\xA4W`\0\x80\xFD[Pa\0\xADa\x01\xD0V[`@Q`\x01`\x01`\xA0\x1B\x03\x90\x91\x16\x81R` \x01`@Q\x80\x91\x03\x90\xF3[4\x80\x15a\0\xD5W`\0\x80\xFD[Pa\0[a\0\xE46`\x04a\x06\xF1V[a\x02\x0BV[4\x80\x15a\0\xF5W`\0\x80\xFD[Pa\0\xADa\x025V[a\x01\x06a\x02\x9BV[a\x01\x16a\x01\x11a\x03:V[a\x03DV[V[a\x01 a\x03hV[`\x01`\x01`\xA0\x1B\x03\x163`\x01`\x01`\xA0\x1B\x03\x16\x14\x15a\x01WWa\x01T\x81`@Q\x80` \x01`@R\x80`\0\x81RP`\0a\x03\x9BV[PV[a\x01Ta\0\xFEV[a\x01ga\x03hV[`\x01`\x01`\xA0\x1B\x03\x163`\x01`\x01`\xA0\x1B\x03\x16\x14\x15a\x01\xC8Wa\x01\xC3\x83\x83\x83\x80\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x93\x92\x91\x90\x81\x81R` \x01\x83\x83\x80\x82\x847`\0\x92\x01\x91\x90\x91RP`\x01\x92Pa\x03\x9B\x91PPV[PPPV[a\x01\xC3a\0\xFEV[`\0a\x01\xDAa\x03hV[`\x01`\x01`\xA0\x1B\x03\x163`\x01`\x01`\xA0\x1B\x03\x16\x14\x15a\x02\0Wa\x01\xFBa\x03:V[\x90P\x90V[a\x02\x08a\0\xFEV[\x90V[a\x02\x13a\x03hV[`\x01`\x01`\xA0\x1B\x03\x163`\x01`\x01`\xA0\x1B\x03\x16\x14\x15a\x01WWa\x01T\x81a\x03\xC6V[`\0a\x02?a\x03hV[`\x01`\x01`\xA0\x1B\x03\x163`\x01`\x01`\xA0\x1B\x03\x16\x14\x15a\x02\0Wa\x01\xFBa\x03hV[``a\x02\x85\x83\x83`@Q\x80``\x01`@R\x80`'\x81R` \x01a\x08\x0B`'\x919a\x04\x1AV[\x93\x92PPPV[`\x01`\x01`\xA0\x1B\x03\x16;\x15\x15\x90V[a\x02\xA3a\x03hV[`\x01`\x01`\xA0\x1B\x03\x163`\x01`\x01`\xA0\x1B\x03\x16\x14\x15a\x01\x16W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`B`$\x82\x01R\x7FTransparentUpgradeableProxy: adm`D\x82\x01R\x7Fin cannot fallback to proxy targ`d\x82\x01Ra\x19]`\xF2\x1B`\x84\x82\x01R`\xA4\x01[`@Q\x80\x91\x03\x90\xFD[`\0a\x01\xFBa\x04\xF7V[6`\0\x807`\0\x806`\0\x84Z\xF4=`\0\x80>\x80\x80\x15a\x03cW=`\0\xF3[=`\0\xFD[`\0\x7F\xB51'hJV\x8B1s\xAE\x13\xB9\xF8\xA6\x01n$>c\xB6\xE8\xEE\x11x\xD6\xA7\x17\x85\x0B]a\x03[T`\x01`\x01`\xA0\x1B\x03\x16\x91\x90PV[a\x03\xA4\x83a\x05\x1FV[`\0\x82Q\x11\x80a\x03\xB1WP\x80[\x15a\x01\xC3Wa\x03\xC0\x83\x83a\x02`V[PPPPV[\x7F~dMyB/\x17\xC0\x1EH\x94\xB5\xF4\xF5\x88\xD31\xEB\xFA(e=B\xAE\x83-\xC5\x9E8\xC9y\x8Fa\x03\xEFa\x03hV[`@\x80Q`\x01`\x01`\xA0\x1B\x03\x92\x83\x16\x81R\x91\x84\x16` \x83\x01R\x01`@Q\x80\x91\x03\x90\xA1a\x01T\x81a\x05_V[```\x01`\x01`\xA0\x1B\x03\x84\x16;a\x04\x82W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FAddress: delegate call to non-co`D\x82\x01Re\x1B\x9D\x1C\x98X\xDD`\xD2\x1B`d\x82\x01R`\x84\x01a\x031V[`\0\x80\x85`\x01`\x01`\xA0\x1B\x03\x16\x85`@Qa\x04\x9D\x91\x90a\x07\xBBV[`\0`@Q\x80\x83\x03\x81\x85Z\xF4\x91PP=\x80`\0\x81\x14a\x04\xD8W`@Q\x91P`\x1F\x19`?=\x01\x16\x82\x01`@R=\x82R=`\0` \x84\x01>a\x04\xDDV[``\x91P[P\x91P\x91Pa\x04\xED\x82\x82\x86a\x06\x08V[\x96\x95PPPPPPV[`\0\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBCa\x03\x8CV[a\x05(\x81a\x06AV[`@Q`\x01`\x01`\xA0\x1B\x03\x82\x16\x90\x7F\xBC|\xD7Z \xEE'\xFD\x9A\xDE\xBA\xB3 A\xF7U!M\xBCk\xFF\xA9\x0C\xC0\"[9\xDA.\\-;\x90`\0\x90\xA2PV[`\x01`\x01`\xA0\x1B\x03\x81\x16a\x05\xC4W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FERC1967: new admin is the zero a`D\x82\x01Reddress`\xD0\x1B`d\x82\x01R`\x84\x01a\x031V[\x80\x7F\xB51'hJV\x8B1s\xAE\x13\xB9\xF8\xA6\x01n$>c\xB6\xE8\xEE\x11x\xD6\xA7\x17\x85\x0B]a\x03[\x80T`\x01`\x01`\xA0\x1B\x03\x19\x16`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UPV[``\x83\x15a\x06\x17WP\x81a\x02\x85V[\x82Q\x15a\x06'W\x82Q\x80\x84` \x01\xFD[\x81`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x031\x91\x90a\x07\xD7V[`\x01`\x01`\xA0\x1B\x03\x81\x16;a\x06\xAEW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`-`$\x82\x01R\x7FERC1967: new implementation is n`D\x82\x01Rl\x1B\xDD\x08\x18H\x18\xDB\xDB\x9D\x1C\x98X\xDD`\x9A\x1B`d\x82\x01R`\x84\x01a\x031V[\x80\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBCa\x05\xE7V[\x805`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x06\xECW`\0\x80\xFD[\x91\x90PV[`\0` \x82\x84\x03\x12\x15a\x07\x03W`\0\x80\xFD[a\x02\x85\x82a\x06\xD5V[`\0\x80`\0`@\x84\x86\x03\x12\x15a\x07!W`\0\x80\xFD[a\x07*\x84a\x06\xD5V[\x92P` \x84\x015g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x82\x11\x15a\x07GW`\0\x80\xFD[\x81\x86\x01\x91P\x86`\x1F\x83\x01\x12a\x07[W`\0\x80\xFD[\x815\x81\x81\x11\x15a\x07jW`\0\x80\xFD[\x87` \x82\x85\x01\x01\x11\x15a\x07|W`\0\x80\xFD[` \x83\x01\x94P\x80\x93PPPP\x92P\x92P\x92V[`\0[\x83\x81\x10\x15a\x07\xAAW\x81\x81\x01Q\x83\x82\x01R` \x01a\x07\x92V[\x83\x81\x11\x15a\x03\xC0WPP`\0\x91\x01RV[`\0\x82Qa\x07\xCD\x81\x84` \x87\x01a\x07\x8FV[\x91\x90\x91\x01\x92\x91PPV[` \x81R`\0\x82Q\x80` \x84\x01Ra\x07\xF6\x81`@\x85\x01` \x87\x01a\x07\x8FV[`\x1F\x01`\x1F\x19\x16\x91\x90\x91\x01`@\x01\x92\x91PPV\xFEAddress: low-level delegate call failed\xA2dipfsX\"\x12 t \xB9\xD3\xA1z\x9BK\x12yH*\xEAb\x85[8\xB1\xF3\xC3he\xE17\x12\xF5c/:H\x7F7dsolcC\0\x08\x0C\x003\xB51'hJV\x8B1s\xAE\x13\xB9\xF8\xA6\x01n$>c\xB6\xE8\xEE\x11x\xD6\xA7\x17\x85\x0B]a\x03Address: low-level delegate call failed.addresses.baseStrategyImplementation.addresses.operatorStateRetriever\x88\\\xB6\x92@\xA95\xD62\xD7\x9C1q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-token_and_strategy_deployment_output\xA2dipfsX\"\x12 \r\xBE\x01a8\xA8\xDD-/\xCF-\x0C\xEFs8\xEF\x81\xFA3\xF7/\xCB\x95\x0FJfn\x05\x9C\xC8\x9E\x9EdsolcC\0\x08\x0C\x003",
    );
    /**Function with signature `IS_SCRIPT()` and selector `0xf8ccbf47`.
    ```solidity
    function IS_SCRIPT() external view returns (bool);
    ```*/
    #[allow(non_camel_case_types, non_snake_case)]
    #[derive(Clone)]
    pub struct IS_SCRIPTCall {}
    ///Container type for the return parameters of the [`IS_SCRIPT()`](IS_SCRIPTCall) function.
    #[allow(non_camel_case_types, non_snake_case)]
    #[derive(Clone)]
    pub struct IS_SCRIPTReturn {
        pub _0: bool,
    }
    #[allow(non_camel_case_types, non_snake_case, clippy::style)]
    const _: () = {
        use alloy::sol_types as alloy_sol_types;
        {
            #[doc(hidden)]
            type UnderlyingSolTuple<'a> = ();
            #[doc(hidden)]
            type UnderlyingRustTuple<'a> = ();
            #[cfg(test)]
            #[allow(dead_code, unreachable_patterns)]
            fn _type_assertion(_t: alloy_sol_types::private::AssertTypeEq<UnderlyingRustTuple>) {
                match _t {
                    alloy_sol_types::private::AssertTypeEq::<
                        <UnderlyingSolTuple as alloy_sol_types::SolType>::RustType,
                    >(_) => {}
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<IS_SCRIPTCall> for UnderlyingRustTuple<'_> {
                fn from(value: IS_SCRIPTCall) -> Self {
                    ()
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<UnderlyingRustTuple<'_>> for IS_SCRIPTCall {
                fn from(tuple: UnderlyingRustTuple<'_>) -> Self {
                    Self {}
                }
            }
        }
        {
            #[doc(hidden)]
            type UnderlyingSolTuple<'a> = (alloy::sol_types::sol_data::Bool,);
            #[doc(hidden)]
            type UnderlyingRustTuple<'a> = (bool,);
            #[cfg(test)]
            #[allow(dead_code, unreachable_patterns)]
            fn _type_assertion(_t: alloy_sol_types::private::AssertTypeEq<UnderlyingRustTuple>) {
                match _t {
                    alloy_sol_types::private::AssertTypeEq::<
                        <UnderlyingSolTuple as alloy_sol_types::SolType>::RustType,
                    >(_) => {}
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<IS_SCRIPTReturn> for UnderlyingRustTuple<'_> {
                fn from(value: IS_SCRIPTReturn) -> Self {
                    (value._0,)
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<UnderlyingRustTuple<'_>> for IS_SCRIPTReturn {
                fn from(tuple: UnderlyingRustTuple<'_>) -> Self {
                    Self { _0: tuple.0 }
                }
            }
        }
        #[automatically_derived]
        impl alloy_sol_types::SolCall for IS_SCRIPTCall {
            type Parameters<'a> = ();
            type Token<'a> = <Self::Parameters<'a> as alloy_sol_types::SolType>::Token<'a>;
            type Return = IS_SCRIPTReturn;
            type ReturnTuple<'a> = (alloy::sol_types::sol_data::Bool,);
            type ReturnToken<'a> = <Self::ReturnTuple<'a> as alloy_sol_types::SolType>::Token<'a>;
            const SIGNATURE: &'static str = "IS_SCRIPT()";
            const SELECTOR: [u8; 4] = [248u8, 204u8, 191u8, 71u8];
            #[inline]
            fn new<'a>(
                tuple: <Self::Parameters<'a> as alloy_sol_types::SolType>::RustType,
            ) -> Self {
                tuple.into()
            }
            #[inline]
            fn tokenize(&self) -> Self::Token<'_> {
                ()
            }
            #[inline]
            fn abi_decode_returns(
                data: &[u8],
                validate: bool,
            ) -> alloy_sol_types::Result<Self::Return> {
                <Self::ReturnTuple<'_> as alloy_sol_types::SolType>::abi_decode_sequence(
                    data, validate,
                )
                .map(Into::into)
            }
        }
    };
    /**Function with signature `run()` and selector `0xc0406226`.
    ```solidity
    function run() external;
    ```*/
    #[allow(non_camel_case_types, non_snake_case)]
    #[derive(Clone)]
    pub struct runCall {}
    ///Container type for the return parameters of the [`run()`](runCall) function.
    #[allow(non_camel_case_types, non_snake_case)]
    #[derive(Clone)]
    pub struct runReturn {}
    #[allow(non_camel_case_types, non_snake_case, clippy::style)]
    const _: () = {
        use alloy::sol_types as alloy_sol_types;
        {
            #[doc(hidden)]
            type UnderlyingSolTuple<'a> = ();
            #[doc(hidden)]
            type UnderlyingRustTuple<'a> = ();
            #[cfg(test)]
            #[allow(dead_code, unreachable_patterns)]
            fn _type_assertion(_t: alloy_sol_types::private::AssertTypeEq<UnderlyingRustTuple>) {
                match _t {
                    alloy_sol_types::private::AssertTypeEq::<
                        <UnderlyingSolTuple as alloy_sol_types::SolType>::RustType,
                    >(_) => {}
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<runCall> for UnderlyingRustTuple<'_> {
                fn from(value: runCall) -> Self {
                    ()
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<UnderlyingRustTuple<'_>> for runCall {
                fn from(tuple: UnderlyingRustTuple<'_>) -> Self {
                    Self {}
                }
            }
        }
        {
            #[doc(hidden)]
            type UnderlyingSolTuple<'a> = ();
            #[doc(hidden)]
            type UnderlyingRustTuple<'a> = ();
            #[cfg(test)]
            #[allow(dead_code, unreachable_patterns)]
            fn _type_assertion(_t: alloy_sol_types::private::AssertTypeEq<UnderlyingRustTuple>) {
                match _t {
                    alloy_sol_types::private::AssertTypeEq::<
                        <UnderlyingSolTuple as alloy_sol_types::SolType>::RustType,
                    >(_) => {}
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<runReturn> for UnderlyingRustTuple<'_> {
                fn from(value: runReturn) -> Self {
                    ()
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<UnderlyingRustTuple<'_>> for runReturn {
                fn from(tuple: UnderlyingRustTuple<'_>) -> Self {
                    Self {}
                }
            }
        }
        #[automatically_derived]
        impl alloy_sol_types::SolCall for runCall {
            type Parameters<'a> = ();
            type Token<'a> = <Self::Parameters<'a> as alloy_sol_types::SolType>::Token<'a>;
            type Return = runReturn;
            type ReturnTuple<'a> = ();
            type ReturnToken<'a> = <Self::ReturnTuple<'a> as alloy_sol_types::SolType>::Token<'a>;
            const SIGNATURE: &'static str = "run()";
            const SELECTOR: [u8; 4] = [192u8, 64u8, 98u8, 38u8];
            #[inline]
            fn new<'a>(
                tuple: <Self::Parameters<'a> as alloy_sol_types::SolType>::RustType,
            ) -> Self {
                tuple.into()
            }
            #[inline]
            fn tokenize(&self) -> Self::Token<'_> {
                ()
            }
            #[inline]
            fn abi_decode_returns(
                data: &[u8],
                validate: bool,
            ) -> alloy_sol_types::Result<Self::Return> {
                <Self::ReturnTuple<'_> as alloy_sol_types::SolType>::abi_decode_sequence(
                    data, validate,
                )
                .map(Into::into)
            }
        }
    };
    ///Container for all the [`DeployTokensStrategiesCreateQuorums`](self) function calls.
    pub enum DeployTokensStrategiesCreateQuorumsCalls {
        IS_SCRIPT(IS_SCRIPTCall),
        run(runCall),
    }
    #[automatically_derived]
    impl DeployTokensStrategiesCreateQuorumsCalls {
        /// All the selectors of this enum.
        ///
        /// Note that the selectors might not be in the same order as the variants.
        /// No guarantees are made about the order of the selectors.
        ///
        /// Prefer using `SolInterface` methods instead.
        pub const SELECTORS: &'static [[u8; 4usize]] =
            &[[192u8, 64u8, 98u8, 38u8], [248u8, 204u8, 191u8, 71u8]];
    }
    #[automatically_derived]
    impl alloy_sol_types::SolInterface for DeployTokensStrategiesCreateQuorumsCalls {
        const NAME: &'static str = "DeployTokensStrategiesCreateQuorumsCalls";
        const MIN_DATA_LENGTH: usize = 0usize;
        const COUNT: usize = 2usize;
        #[inline]
        fn selector(&self) -> [u8; 4] {
            match self {
                Self::IS_SCRIPT(_) => <IS_SCRIPTCall as alloy_sol_types::SolCall>::SELECTOR,
                Self::run(_) => <runCall as alloy_sol_types::SolCall>::SELECTOR,
            }
        }
        #[inline]
        fn selector_at(i: usize) -> ::core::option::Option<[u8; 4]> {
            Self::SELECTORS.get(i).copied()
        }
        #[inline]
        fn valid_selector(selector: [u8; 4]) -> bool {
            Self::SELECTORS.binary_search(&selector).is_ok()
        }
        #[inline]
        #[allow(unsafe_code, non_snake_case)]
        fn abi_decode_raw(
            selector: [u8; 4],
            data: &[u8],
            validate: bool,
        ) -> alloy_sol_types::Result<Self> {
            static DECODE_SHIMS: &[fn(
                &[u8],
                bool,
            ) -> alloy_sol_types::Result<
                DeployTokensStrategiesCreateQuorumsCalls,
            >] = &[
                {
                    fn run(
                        data: &[u8],
                        validate: bool,
                    ) -> alloy_sol_types::Result<DeployTokensStrategiesCreateQuorumsCalls>
                    {
                        <runCall as alloy_sol_types::SolCall>::abi_decode_raw(data, validate)
                            .map(DeployTokensStrategiesCreateQuorumsCalls::run)
                    }
                    run
                },
                {
                    fn IS_SCRIPT(
                        data: &[u8],
                        validate: bool,
                    ) -> alloy_sol_types::Result<DeployTokensStrategiesCreateQuorumsCalls>
                    {
                        <IS_SCRIPTCall as alloy_sol_types::SolCall>::abi_decode_raw(data, validate)
                            .map(DeployTokensStrategiesCreateQuorumsCalls::IS_SCRIPT)
                    }
                    IS_SCRIPT
                },
            ];
            let Ok(idx) = Self::SELECTORS.binary_search(&selector) else {
                return Err(alloy_sol_types::Error::unknown_selector(
                    <Self as alloy_sol_types::SolInterface>::NAME,
                    selector,
                ));
            };
            (unsafe { DECODE_SHIMS.get_unchecked(idx) })(data, validate)
        }
        #[inline]
        fn abi_encoded_size(&self) -> usize {
            match self {
                Self::IS_SCRIPT(inner) => {
                    <IS_SCRIPTCall as alloy_sol_types::SolCall>::abi_encoded_size(inner)
                }
                Self::run(inner) => <runCall as alloy_sol_types::SolCall>::abi_encoded_size(inner),
            }
        }
        #[inline]
        fn abi_encode_raw(&self, out: &mut alloy_sol_types::private::Vec<u8>) {
            match self {
                Self::IS_SCRIPT(inner) => {
                    <IS_SCRIPTCall as alloy_sol_types::SolCall>::abi_encode_raw(inner, out)
                }
                Self::run(inner) => {
                    <runCall as alloy_sol_types::SolCall>::abi_encode_raw(inner, out)
                }
            }
        }
    }
    use alloy::contract as alloy_contract;
    /**Creates a new wrapper around an on-chain [`DeployTokensStrategiesCreateQuorums`](self) contract instance.

    See the [wrapper's documentation](`DeployTokensStrategiesCreateQuorumsInstance`) for more details.*/
    #[inline]
    pub const fn new<
        T: alloy_contract::private::Transport + ::core::clone::Clone,
        P: alloy_contract::private::Provider<T, N>,
        N: alloy_contract::private::Network,
    >(
        address: alloy_sol_types::private::Address,
        provider: P,
    ) -> DeployTokensStrategiesCreateQuorumsInstance<T, P, N> {
        DeployTokensStrategiesCreateQuorumsInstance::<T, P, N>::new(address, provider)
    }
    /**Deploys this contract using the given `provider` and constructor arguments, if any.

    Returns a new instance of the contract, if the deployment was successful.

    For more fine-grained control over the deployment process, use [`deploy_builder`] instead.*/
    #[inline]
    pub fn deploy<
        T: alloy_contract::private::Transport + ::core::clone::Clone,
        P: alloy_contract::private::Provider<T, N>,
        N: alloy_contract::private::Network,
    >(
        provider: P,
    ) -> impl ::core::future::Future<
        Output = alloy_contract::Result<DeployTokensStrategiesCreateQuorumsInstance<T, P, N>>,
    > {
        DeployTokensStrategiesCreateQuorumsInstance::<T, P, N>::deploy(provider)
    }
    /**Creates a `RawCallBuilder` for deploying this contract using the given `provider`
    and constructor arguments, if any.

    This is a simple wrapper around creating a `RawCallBuilder` with the data set to
    the bytecode concatenated with the constructor's ABI-encoded arguments.*/
    #[inline]
    pub fn deploy_builder<
        T: alloy_contract::private::Transport + ::core::clone::Clone,
        P: alloy_contract::private::Provider<T, N>,
        N: alloy_contract::private::Network,
    >(
        provider: P,
    ) -> alloy_contract::RawCallBuilder<T, P, N> {
        DeployTokensStrategiesCreateQuorumsInstance::<T, P, N>::deploy_builder(provider)
    }
    /**A [`DeployTokensStrategiesCreateQuorums`](self) instance.

    Contains type-safe methods for interacting with an on-chain instance of the
    [`DeployTokensStrategiesCreateQuorums`](self) contract located at a given `address`, using a given
    provider `P`.

    If the contract bytecode is available (see the [`sol!`](alloy_sol_types::sol!)
    documentation on how to provide it), the `deploy` and `deploy_builder` methods can
    be used to deploy a new instance of the contract.

    See the [module-level documentation](self) for all the available methods.*/
    #[derive(Clone)]
    pub struct DeployTokensStrategiesCreateQuorumsInstance<
        T,
        P,
        N = alloy_contract::private::Ethereum,
    > {
        address: alloy_sol_types::private::Address,
        provider: P,
        _network_transport: ::core::marker::PhantomData<(N, T)>,
    }
    #[automatically_derived]
    impl<T, P, N> ::core::fmt::Debug for DeployTokensStrategiesCreateQuorumsInstance<T, P, N> {
        #[inline]
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple("DeployTokensStrategiesCreateQuorumsInstance")
                .field(&self.address)
                .finish()
        }
    }
    /// Instantiation and getters/setters.
    #[automatically_derived]
    impl<
            T: alloy_contract::private::Transport + ::core::clone::Clone,
            P: alloy_contract::private::Provider<T, N>,
            N: alloy_contract::private::Network,
        > DeployTokensStrategiesCreateQuorumsInstance<T, P, N>
    {
        /**Creates a new wrapper around an on-chain [`DeployTokensStrategiesCreateQuorums`](self) contract instance.

        See the [wrapper's documentation](`DeployTokensStrategiesCreateQuorumsInstance`) for more details.*/
        #[inline]
        pub const fn new(address: alloy_sol_types::private::Address, provider: P) -> Self {
            Self {
                address,
                provider,
                _network_transport: ::core::marker::PhantomData,
            }
        }
        /**Deploys this contract using the given `provider` and constructor arguments, if any.

        Returns a new instance of the contract, if the deployment was successful.

        For more fine-grained control over the deployment process, use [`deploy_builder`] instead.*/
        #[inline]
        pub async fn deploy(
            provider: P,
        ) -> alloy_contract::Result<DeployTokensStrategiesCreateQuorumsInstance<T, P, N>> {
            let call_builder = Self::deploy_builder(provider);
            let contract_address = call_builder.deploy().await?;
            Ok(Self::new(contract_address, call_builder.provider))
        }
        /**Creates a `RawCallBuilder` for deploying this contract using the given `provider`
        and constructor arguments, if any.

        This is a simple wrapper around creating a `RawCallBuilder` with the data set to
        the bytecode concatenated with the constructor's ABI-encoded arguments.*/
        #[inline]
        pub fn deploy_builder(provider: P) -> alloy_contract::RawCallBuilder<T, P, N> {
            alloy_contract::RawCallBuilder::new_raw_deploy(
                provider,
                ::core::clone::Clone::clone(&BYTECODE),
            )
        }
        /// Returns a reference to the address.
        #[inline]
        pub const fn address(&self) -> &alloy_sol_types::private::Address {
            &self.address
        }
        /// Sets the address.
        #[inline]
        pub fn set_address(&mut self, address: alloy_sol_types::private::Address) {
            self.address = address;
        }
        /// Sets the address and returns `self`.
        pub fn at(mut self, address: alloy_sol_types::private::Address) -> Self {
            self.set_address(address);
            self
        }
        /// Returns a reference to the provider.
        #[inline]
        pub const fn provider(&self) -> &P {
            &self.provider
        }
    }
    impl<T, P: ::core::clone::Clone, N> DeployTokensStrategiesCreateQuorumsInstance<T, &P, N> {
        /// Clones the provider and returns a new instance with the cloned provider.
        #[inline]
        pub fn with_cloned_provider(self) -> DeployTokensStrategiesCreateQuorumsInstance<T, P, N> {
            DeployTokensStrategiesCreateQuorumsInstance {
                address: self.address,
                provider: ::core::clone::Clone::clone(&self.provider),
                _network_transport: ::core::marker::PhantomData,
            }
        }
    }
    /// Function calls.
    #[automatically_derived]
    impl<
            T: alloy_contract::private::Transport + ::core::clone::Clone,
            P: alloy_contract::private::Provider<T, N>,
            N: alloy_contract::private::Network,
        > DeployTokensStrategiesCreateQuorumsInstance<T, P, N>
    {
        /// Creates a new call builder using this contract instance's provider and address.
        ///
        /// Note that the call can be any function call, not just those defined in this
        /// contract. Prefer using the other methods for building type-safe contract calls.
        pub fn call_builder<C: alloy_sol_types::SolCall>(
            &self,
            call: &C,
        ) -> alloy_contract::SolCallBuilder<T, &P, C, N> {
            alloy_contract::SolCallBuilder::new_sol(&self.provider, &self.address, call)
        }
        ///Creates a new call builder for the [`IS_SCRIPT`] function.
        pub fn IS_SCRIPT(&self) -> alloy_contract::SolCallBuilder<T, &P, IS_SCRIPTCall, N> {
            self.call_builder(&IS_SCRIPTCall {})
        }
        ///Creates a new call builder for the [`run`] function.
        pub fn run(&self) -> alloy_contract::SolCallBuilder<T, &P, runCall, N> {
            self.call_builder(&runCall {})
        }
    }
    /// Event filters.
    #[automatically_derived]
    impl<
            T: alloy_contract::private::Transport + ::core::clone::Clone,
            P: alloy_contract::private::Provider<T, N>,
            N: alloy_contract::private::Network,
        > DeployTokensStrategiesCreateQuorumsInstance<T, P, N>
    {
        /// Creates a new event filter using this contract instance's provider and address.
        ///
        /// Note that the type can be any event, not just those defined in this contract.
        /// Prefer using the other methods for building type-safe event filters.
        pub fn event_filter<E: alloy_sol_types::SolEvent>(
            &self,
        ) -> alloy_contract::Event<T, &P, E, N> {
            alloy_contract::Event::new_sol(&self.provider, &self.address)
        }
    }
}
