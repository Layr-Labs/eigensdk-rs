/**

Generated by the following Solidity interface...
```solidity
interface DeployTokensStrategiesCreateQuorums {
    function IS_SCRIPT() external view returns (bool);
    function run() external;
}
```

...which was generated by the following JSON ABI:
```json
[
  {
    "type": "function",
    "name": "IS_SCRIPT",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "run",
    "inputs": [],
    "outputs": [],
    "stateMutability": "nonpayable"
  }
]
```*/
#[allow(
    non_camel_case_types,
    non_snake_case,
    clippy::pub_underscore_fields,
    clippy::style,
    clippy::empty_structs_with_brackets
)]
pub mod DeployTokensStrategiesCreateQuorums {
    use super::*;
    use alloy::sol_types as alloy_sol_types;
    /// The creation / init bytecode of the contract.
    ///
    /// ```text
    ///0x6080604052600c805462ff00ff19166201000117905569010f0cf064dd59200000600d55348015602d575f5ffd5b50612e468061003b5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063c040622614610038578063f8ccbf4714610042575b5f5ffd5b610040610069565b005b600c546100559062010000900460ff1681565b604051901515815260200160405180910390f35b735fbdb2315678afecb367f032d93f642f64180aa35f61008761032c565b90505f61009261059f565b90505f5f5f516020612dcd5f395f51905f525f1c6001600160a01b0316637fb5297f6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156100dd575f5ffd5b505af11580156100ef573d5f5f3e3d5ffd5b505050505f5f516020612dcd5f395f51905f525f1c6001600160a01b03166342cbb15c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561013f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101639190611179565b905046617a691480610176575046610539145b1561022157610196855f015186602001518760e001518860400151610847565b60408051630fe7858560e31b81526004810191909152601160448201527065726332304d6f636b537472617465677960781b60648201526001600160a01b038083166024830152919550919350871690637f3c2c28906084015f604051808303815f87803b158015610206575f5ffd5b505af1158015610218573d5f5f3e3d5ffd5b505050506102b9565b466142680361025d57735c8b55722f421556a2aafb7a3ea63d4c3e5143129250733f1c547b21f65e10480de3ad8e19faac46c9503491506102b9565b60405162461bcd60e51b815260206004820152602660248201527f436f6e66696775726520546f6b656e20616e6420537472617465677920666f726044820152651021b430b4b760d11b60648201526084015b60405180910390fd5b6102c7846020015184610c58565b5f516020612dcd5f395f51905f525f1c6001600160a01b03166376eadd366040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561030e575f5ffd5b505af1158015610320573d5f5f3e3d5ffd5b50505050505050505050565b60408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091525f6103ab6040518060400160405280601c81526020017f656967656e6c617965725f6465706c6f796d656e745f6f757470757400000000815250610d65565b90505f6103ed826040518060400160405280601f81526020017f2e6164647265737365732e656967656e4c6179657250726f787941646d696e00815250610f57565b90505f61042f836040518060400160405280601e81526020017f2e6164647265737365732e656967656e4c617965725061757365725265670000815250610f57565b90505f610471846040518060400160405280601a81526020017f2e6164647265737365732e73747261746567794d616e61676572000000000000815250610f57565b90505f6104ab85604051806040016040528060158152602001741730b2323932b9b9b2b9973232b632b3b0ba34b7b760591b815250610f57565b90505f6104ed866040518060400160405280601781526020017f2e6164647265737365732e6176734469726563746f7279000000000000000000815250610f57565b90505f61052487604051806040016040528060128152602001711730b2323932b9b9b2b99739b630b9b432b960711b815250610f57565b90505f61054988604051806060016040528060258152602001612d8760259139610f57565b60408051610100810182526001600160a01b03998a1681529789166020890152958816958701959095525091851660608501529084166080840152831660a08301525f60c083015290911660e082015292915050565b604080516060810182525f80825260208201819052918101919091525f6105fa6040518060400160405280601981526020017f6d6f636b6176735f6465706c6f796d656e745f6f757470757400000000000000815250610d65565b90505f61063c826040518060400160405280602081526020017f2e6164647265737365732e6d6f636b417673536572766963654d616e61676572815250610f57565b90506001600160a01b0381166106ba5760405162461bcd60e51b815260206004820152603a60248201527f4d6f636b417673436f6e7472616374735061727365723a206d6f636b4176735360448201527f6572766963654d616e616765722061646472657373206973203000000000000060648201526084016102b0565b5f6106fa836040518060400160405280601e81526020017f2e6164647265737365732e7265676973747279436f6f7264696e61746f720000815250610f57565b90506001600160a01b0381166107785760405162461bcd60e51b815260206004820152603860248201527f4d6f636b417673436f6e7472616374735061727365723a20726567697374727960448201527f436f6f7264696e61746f7220616464726573732069732030000000000000000060648201526084016102b0565b5f61079b84604051806060016040528060218152602001612dac60219139610f57565b90506001600160a01b0381166108195760405162461bcd60e51b815260206004820152603b60248201527f4d6f636b417673436f6e7472616374735061727365723a206f70657261746f7260448201527f537461746552657472696576657220616464726573732069732030000000000060648201526084016102b0565b604080516060810182526001600160a01b039485168152928416602084015292169181019190915292915050565b5f5f5f6040516108569061115f565b604051809103905ff08015801561086f573d5f5f3e3d5ffd5b50600d546040516340c10f1960e01b815232600482015260248101919091529091506001600160a01b038216906340c10f19906044015f604051808303815f87803b1580156108bc575f5ffd5b505af11580156108ce573d5f5f3e3d5ffd5b505060408051683635c9adc5dea000006024820181905260448201526001600160a01b0385811660648301528a166084808301919091528251808303909101815260a490910182526020810180516001600160e01b031663019e272960e01b17905290515f93508892508a91906109449061116c565b610950939291906111be565b604051809103905ff080158015610969573d5f5f3e3d5ffd5b506040805160018082528183019092529192505f91906020808301908036833701905050905081815f815181106109a2576109a26111fd565b6001600160a01b0392909216602092830291909101909101526040805160018082528183019092525f918160200160208202803683370190505090505f815f815181106109f1576109f16111fd565b9115156020928302919091019091015260405163df5b354760e01b81526001600160a01b0388169063df5b354790610a2f9085908590600401611211565b5f604051808303815f87803b158015610a46575f5ffd5b505af1158015610a58573d5f5f3e3d5ffd5b5050604080518082018252600d81526c1c185c995b9d081bd89a9958dd609a1b60208083019190915282518084018452600981526861646472657373657360b81b918101919091529151634b96303160e11b8152909350909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063972c606290610ade9084908a9060040161129c565b5f604051808303815f875af1158015610af9573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610b2091908101906112e8565b50604051634b96303160e11b81525f90737109709ecfa91a80626ff3989d68f67f5b1dd12d9063972c606290610b5c9085908a9060040161139b565b5f604051808303815f875af1158015610b77573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610b9e91908101906112e8565b6040516388da6d3560e01b81529091505f90737109709ecfa91a80626ff3989d68f67f5b1dd12d906388da6d3590610bde908790879087906004016113ef565b5f604051808303815f875af1158015610bf9573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610c2091908101906112e8565b9050610c4481604051806060016040528060248152602001612ded60249139610fd8565b50959c949b50939950505050505050505050565b604080516060810182526127108152613a9860208201526064818301528151600180825281840190935290915f918291816020015b604080518082019091525f8082526020820152815260200190600190039081610c8d5790505090506040518060400160405280856001600160a01b03168152602001670de0b6b3a76400006001600160601b0316815250815f81518110610cf657610cf66111fd565b6020908102919091010152604051631aeb699160e31b81526001600160a01b0386169063d75b4c8890610d3190869086908690600401611431565b5f604051808303815f87803b158015610d48575f5ffd5b505af1158015610d5a573d5f5f3e3d5ffd5b505050505050505050565b60605f5f516020612dcd5f395f51905f525f1c6001600160a01b031663d930a0e66040518163ffffffff1660e01b81526004015f60405180830381865afa158015610db2573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610dd991908101906112e8565b604051602001610de991906114e6565b60408051808303601f190181529082905263348051d760e11b825246600483015291505f90737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae906024015f60405180830381865afa158015610e47573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610e6e91908101906112e8565b604051602001610e7e9190611510565b60405160208183030381529060405290505f84604051602001610ea1919061152c565b60408051601f19818403018152908290529150737109709ecfa91a80626ff3989d68f67f5b1dd12d906360f9bb1190610ee29086908690869060200161154c565b6040516020818303038152906040526040518263ffffffff1660e01b8152600401610f0d9190611569565b5f60405180830381865afa158015610f27573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610f4e91908101906112e8565b95945050505050565b604051631e19e65760e01b81525f90737109709ecfa91a80626ff3989d68f67f5b1dd12d90631e19e65790610f92908690869060040161157b565b602060405180830381865afa158015610fad573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fd1919061159f565b9392505050565b5f5f516020612dcd5f395f51905f525f1c6001600160a01b031663d930a0e66040518163ffffffff1660e01b81526004015f60405180830381865afa158015611023573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261104a91908101906112e8565b60405160200161105a91906114e6565b60408051808303601f190181529082905263348051d760e11b825246600483015291505f90737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae906024015f60405180830381865afa1580156110b8573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526110df91908101906112e8565b6040516020016110ef9190611510565b60405160208183030381529060405290505f828285604051602001611116939291906115c5565b60408051601f198184030181529082905263e23cd19f60e01b82529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e23cd19f90610d31908890859060040161157b565b610aa7806115ee83390190565b610cf28061209583390190565b5f60208284031215611189575f5ffd5b5051919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038481168252831660208201526060604082018190525f90610f4e90830184611190565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b604080825283519082018190525f9060208501906060840190835b818110156112535783516001600160a01b031683526020938401939092019160010161122c565b5050838103602080860191909152855180835291810192508501905f5b818110156112905782511515845260209384019390920191600101611270565b50919695505050505050565b606081525f6112ae6060830185611190565b828103602080850191909152600982526865726332306d6f636b60b81b908201526001600160a01b03939093166040928301525001919050565b5f602082840312156112f8575f5ffd5b815167ffffffffffffffff81111561130e575f5ffd5b8201601f8101841361131e575f5ffd5b805167ffffffffffffffff811115611338576113386111e9565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611367576113676111e9565b60405281815282820160200186101561137e575f5ffd5b8160208401602083015e5f91810160200191909152949350505050565b606081525f6113ad6060830185611190565b828103602080850191909152601182527065726332306d6f636b737472617465677960781b908201526001600160a01b03939093166040928301525001919050565b606081525f6114016060830186611190565b82810360208401526114138186611190565b905082810360408401526114278185611190565b9695505050505050565b5f60a0820163ffffffff865116835261ffff602087015116602084015261ffff60408701511660408401526001600160601b038516606084015260a0608084015280845180835260c0850191506020860192505f5b818110156114c257835180516001600160a01b031684526020908101516001600160601b03168185015290930192604090920191600101611486565b5090979650505050505050565b5f81518060208401855e5f93019283525090919050565b5f6114f182846114cf565b6e2f7363726970742f6f75747075742f60881b8152600f019392505050565b5f61151b82846114cf565b602f60f81b81526001019392505050565b5f61153782846114cf565b64173539b7b760d91b81526005019392505050565b5f610f4e61156361155d84886114cf565b866114cf565b846114cf565b602081525f610fd16020830184611190565b604081525f61158d6040830185611190565b8281036020840152610f4e8185611190565b5f602082840312156115af575f5ffd5b81516001600160a01b0381168114610fd1575f5ffd5b5f6115d661156361155d84886114cf565b64173539b7b760d91b81526005019594505050505056fe608060405234801561000f575f5ffd5b506040518060400160405280600a81526020016926b7b1b5902a37b5b2b760b11b815250604051806040016040528060038152602001624d434b60e81b815250816003908161005e919061010b565b50600461006b828261010b565b5050506101c5565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061009b57607f821691505b6020821081036100b957634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561010657805f5260205f20601f840160051c810160208510156100e45750805b601f840160051c820191505b81811015610103575f81556001016100f0565b50505b505050565b81516001600160401b0381111561012457610124610073565b610138816101328454610087565b846100bf565b6020601f82116001811461016a575f83156101535750848201515b5f19600385901b1c1916600184901b178455610103565b5f84815260208120601f198516915b828110156101995787850151825560209485019460019092019101610179565b50848210156101b657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6108d5806101d25f395ff3fe608060405234801561000f575f5ffd5b50600436106100b1575f3560e01c806340c10f191161006e57806340c10f191461013d57806370a082311461015257806395d89b411461017a578063a457c2d714610182578063a9059cbb14610195578063dd62ed3e146101a8575f5ffd5b806306fdde03146100b5578063095ea7b3146100d357806318160ddd146100f657806323b872dd14610108578063313ce5671461011b578063395093511461012a575b5f5ffd5b6100bd6101bb565b6040516100ca9190610745565b60405180910390f35b6100e66100e1366004610795565b61024b565b60405190151581526020016100ca565b6002545b6040519081526020016100ca565b6100e66101163660046107bd565b610264565b604051601281526020016100ca565b6100e6610138366004610795565b61027a565b61015061014b366004610795565b61029b565b005b6100fa6101603660046107f7565b6001600160a01b03165f9081526020819052604090205490565b6100bd6102a9565b6100e6610190366004610795565b6102b8565b6100e66101a3366004610795565b610342565b6100fa6101b6366004610817565b61034f565b6060600380546101ca90610848565b80601f01602080910402602001604051908101604052809291908181526020018280546101f690610848565b80156102415780601f1061021857610100808354040283529160200191610241565b820191905f5260205f20905b81548152906001019060200180831161022457829003601f168201915b5050505050905090565b5f33610258818585610379565b60019150505b92915050565b5f61027084848461049c565b5060019392505050565b5f3361025881858561028c838361034f565b6102969190610880565b610379565b6102a58282610669565b5050565b6060600480546101ca90610848565b5f33816102c5828661034f565b90508381101561032a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103378286868403610379565b506001949350505050565b5f3361025881858561049c565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103db5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610321565b6001600160a01b03821661043c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610321565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105005760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610321565b6001600160a01b0382166105625760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610321565b6001600160a01b0383165f90815260208190526040902054818110156105d95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610321565b6001600160a01b038085165f9081526020819052604080822085850390559185168152908120805484929061060f908490610880565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161065b91815260200190565b60405180910390a350505050565b6001600160a01b0382166106bf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610321565b8060025f8282546106d09190610880565b90915550506001600160a01b0382165f90815260208190526040812080548392906106fc908490610880565b90915550506040518181526001600160a01b038316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610790575f5ffd5b919050565b5f5f604083850312156107a6575f5ffd5b6107af8361077a565b946020939093013593505050565b5f5f5f606084860312156107cf575f5ffd5b6107d88461077a565b92506107e66020850161077a565b929592945050506040919091013590565b5f60208284031215610807575f5ffd5b6108108261077a565b9392505050565b5f5f60408385031215610828575f5ffd5b6108318361077a565b915061083f6020840161077a565b90509250929050565b600181811c9082168061085c57607f821691505b60208210810361087a57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561025e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212209a04aae6e5fbb6825b56c06d7ba2442cb503d85ed1076ed76e5944b01268899e64736f6c634300081c00336080604052604051610cf2380380610cf2833981016040819052610022916103b7565b828161002f82825f610043565b5061003b90508261006e565b5050506104d3565b61004c836100db565b5f825111806100585750805b1561006957610067838361011a565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6100ad5f516020610cab5f395f51905f52546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a16100d881610146565b50565b6100e4816101e1565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b606061013f8383604051806060016040528060278152602001610ccb60279139610275565b9392505050565b6001600160a01b0381166101b05760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b805f516020610cab5f395f51905f525b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0381163b61024e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101a7565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6101c0565b60606001600160a01b0384163b6102dd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101a7565b5f5f856001600160a01b0316856040516102f79190610488565b5f60405180830381855af49150503d805f811461032f576040519150601f19603f3d011682016040523d82523d5f602084013e610334565b606091505b50909250905061034582828661034f565b9695505050505050565b6060831561035e57508161013f565b82511561036e5782518084602001fd5b8160405162461bcd60e51b81526004016101a7919061049e565b80516001600160a01b038116811461039e575f5ffd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f606084860312156103c9575f5ffd5b6103d284610388565b92506103e060208501610388565b60408501519092506001600160401b038111156103fb575f5ffd5b8401601f8101861361040b575f5ffd5b80516001600160401b03811115610424576104246103a3565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610452576104526103a3565b604052818152828201602001881015610469575f5ffd5b8160208401602083015e5f602083830101528093505050509250925092565b5f82518060208501845e5f920191825250919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6107cb806104e05f395ff3fe60806040526004361061004d575f3560e01c80633659cfe6146100645780634f1ef286146100835780635c60da1b146100965780638f283970146100c6578063f851a440146100e55761005c565b3661005c5761005a6100f9565b005b61005a6100f9565b34801561006f575f5ffd5b5061005a61007e36600461068c565b610113565b61005a6100913660046106a5565b61014e565b3480156100a1575f5ffd5b506100aa6101b4565b6040516001600160a01b03909116815260200160405180910390f35b3480156100d1575f5ffd5b5061005a6100e036600461068c565b6101e4565b3480156100f0575f5ffd5b506100aa610204565b610101610224565b61011161010c6102b9565b6102c2565b565b61011b6102e0565b6001600160a01b03163303610146576101438160405180602001604052805f8152505f610312565b50565b6101436100f9565b6101566102e0565b6001600160a01b031633036101ac576101a78383838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525060019250610312915050565b505050565b6101a76100f9565b5f6101bd6102e0565b6001600160a01b031633036101d9576101d46102b9565b905090565b6101e16100f9565b90565b6101ec6102e0565b6001600160a01b03163303610146576101438161033c565b5f61020d6102e0565b6001600160a01b031633036101d9576101d46102e0565b61022c6102e0565b6001600160a01b031633036101115760405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b5f6101d4610390565b365f5f375f5f365f845af43d5f5f3e8080156102dc573d5ff35b3d5ffd5b5f7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b61031b836103b7565b5f825111806103275750805b156101a75761033683836103f6565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6103656102e0565b604080516001600160a01b03928316815291841660208301520160405180910390a161014381610422565b5f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610303565b6103c0816104cb565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b606061041b838360405180606001604052806027815260200161076f6027913961055f565b9392505050565b6001600160a01b0381166104875760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084016102b0565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0381163b6105385760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016102b0565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6104aa565b60606001600160a01b0384163b6105c75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016102b0565b5f5f856001600160a01b0316856040516105e19190610723565b5f60405180830381855af49150503d805f8114610619576040519150601f19603f3d011682016040523d82523d5f602084013e61061e565b606091505b509150915061062e828286610638565b9695505050505050565b6060831561064757508161041b565b8251156106575782518084602001fd5b8160405162461bcd60e51b81526004016102b09190610739565b80356001600160a01b0381168114610687575f5ffd5b919050565b5f6020828403121561069c575f5ffd5b61041b82610671565b5f5f5f604084860312156106b7575f5ffd5b6106c084610671565b9250602084013567ffffffffffffffff8111156106db575f5ffd5b8401601f810186136106eb575f5ffd5b803567ffffffffffffffff811115610701575f5ffd5b866020828401011115610712575f5ffd5b939660209190910195509293505050565b5f82518060208501845e5f920191825250919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f8301168401019150509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b8a8d1625a9ca10466731217315d098ef9c2609c47b7d8ef5a3315947ca6f92864736f6c634300081c0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65642e6164647265737365732e626173655374726174656779496d706c656d656e746174696f6e2e6164647265737365732e6f70657261746f725374617465526574726965766572885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d746f6b656e5f616e645f73747261746567795f6465706c6f796d656e745f6f7574707574a2646970667358221220bb6473ac2f6cb078380960f833d32b097a379bed2707e8d5dceee2794968f54164736f6c634300081c0033
    /// ```
    #[rustfmt::skip]
    #[allow(clippy::all)]
    pub static BYTECODE: alloy_sol_types::private::Bytes = alloy_sol_types::private::Bytes::from_static(
        b"`\x80`@R`\x0C\x80Tb\xFF\0\xFF\x19\x16b\x01\0\x01\x17\x90Ui\x01\x0F\x0C\xF0d\xDDY \0\0`\rU4\x80\x15`-W__\xFD[Pa.F\x80a\0;_9_\xF3\xFE`\x80`@R4\x80\x15a\0\x0FW__\xFD[P`\x046\x10a\x004W_5`\xE0\x1C\x80c\xC0@b&\x14a\08W\x80c\xF8\xCC\xBFG\x14a\0BW[__\xFD[a\0@a\0iV[\0[`\x0CTa\0U\x90b\x01\0\0\x90\x04`\xFF\x16\x81V[`@Q\x90\x15\x15\x81R` \x01`@Q\x80\x91\x03\x90\xF3[s_\xBD\xB21Vx\xAF\xEC\xB3g\xF02\xD9?d/d\x18\n\xA3_a\0\x87a\x03,V[\x90P_a\0\x92a\x05\x9FV[\x90P___Q` a-\xCD_9_Q\x90_R_\x1C`\x01`\x01`\xA0\x1B\x03\x16c\x7F\xB5)\x7F`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01_`@Q\x80\x83\x03\x81_\x87\x80;\x15\x80\x15a\0\xDDW__\xFD[PZ\xF1\x15\x80\x15a\0\xEFW=__>=_\xFD[PPPP__Q` a-\xCD_9_Q\x90_R_\x1C`\x01`\x01`\xA0\x1B\x03\x16cB\xCB\xB1\\`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x01?W=__>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x01c\x91\x90a\x11yV[\x90PFazi\x14\x80a\x01vWPFa\x059\x14[\x15a\x02!Wa\x01\x96\x85_\x01Q\x86` \x01Q\x87`\xE0\x01Q\x88`@\x01Qa\x08GV[`@\x80Qc\x0F\xE7\x85\x85`\xE3\x1B\x81R`\x04\x81\x01\x91\x90\x91R`\x11`D\x82\x01Rperc20MockStrategy`x\x1B`d\x82\x01R`\x01`\x01`\xA0\x1B\x03\x80\x83\x16`$\x83\x01R\x91\x95P\x91\x93P\x87\x16\x90c\x7F<,(\x90`\x84\x01_`@Q\x80\x83\x03\x81_\x87\x80;\x15\x80\x15a\x02\x06W__\xFD[PZ\xF1\x15\x80\x15a\x02\x18W=__>=_\xFD[PPPPa\x02\xB9V[FaBh\x03a\x02]Ws\\\x8BUr/B\x15V\xA2\xAA\xFBz>\xA6=L>QC\x12\x92Ps?\x1CT{!\xF6^\x10H\r\xE3\xAD\x8E\x19\xFA\xACF\xC9P4\x91Pa\x02\xB9V[`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FConfigure Token and Strategy for`D\x82\x01Re\x10!\xB40\xB4\xB7`\xD1\x1B`d\x82\x01R`\x84\x01[`@Q\x80\x91\x03\x90\xFD[a\x02\xC7\x84` \x01Q\x84a\x0CXV[_Q` a-\xCD_9_Q\x90_R_\x1C`\x01`\x01`\xA0\x1B\x03\x16cv\xEA\xDD6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01_`@Q\x80\x83\x03\x81_\x87\x80;\x15\x80\x15a\x03\x0EW__\xFD[PZ\xF1\x15\x80\x15a\x03 W=__>=_\xFD[PPPPPPPPPPV[`@\x80Qa\x01\0\x81\x01\x82R_\x80\x82R` \x82\x01\x81\x90R\x91\x81\x01\x82\x90R``\x81\x01\x82\x90R`\x80\x81\x01\x82\x90R`\xA0\x81\x01\x82\x90R`\xC0\x81\x01\x82\x90R`\xE0\x81\x01\x91\x90\x91R_a\x03\xAB`@Q\x80`@\x01`@R\x80`\x1C\x81R` \x01\x7Feigenlayer_deployment_output\0\0\0\0\x81RPa\reV[\x90P_a\x03\xED\x82`@Q\x80`@\x01`@R\x80`\x1F\x81R` \x01\x7F.addresses.eigenLayerProxyAdmin\0\x81RPa\x0FWV[\x90P_a\x04/\x83`@Q\x80`@\x01`@R\x80`\x1E\x81R` \x01\x7F.addresses.eigenLayerPauserReg\0\0\x81RPa\x0FWV[\x90P_a\x04q\x84`@Q\x80`@\x01`@R\x80`\x1A\x81R` \x01\x7F.addresses.strategyManager\0\0\0\0\0\0\x81RPa\x0FWV[\x90P_a\x04\xAB\x85`@Q\x80`@\x01`@R\x80`\x15\x81R` \x01t\x170\xB2292\xB9\xB9\xB2\xB9\x9722\xB62\xB3\xB0\xBA4\xB7\xB7`Y\x1B\x81RPa\x0FWV[\x90P_a\x04\xED\x86`@Q\x80`@\x01`@R\x80`\x17\x81R` \x01\x7F.addresses.avsDirectory\0\0\0\0\0\0\0\0\0\x81RPa\x0FWV[\x90P_a\x05$\x87`@Q\x80`@\x01`@R\x80`\x12\x81R` \x01q\x170\xB2292\xB9\xB9\xB2\xB9\x979\xB60\xB9\xB42\xB9`q\x1B\x81RPa\x0FWV[\x90P_a\x05I\x88`@Q\x80``\x01`@R\x80`%\x81R` \x01a-\x87`%\x919a\x0FWV[`@\x80Qa\x01\0\x81\x01\x82R`\x01`\x01`\xA0\x1B\x03\x99\x8A\x16\x81R\x97\x89\x16` \x89\x01R\x95\x88\x16\x95\x87\x01\x95\x90\x95RP\x91\x85\x16``\x85\x01R\x90\x84\x16`\x80\x84\x01R\x83\x16`\xA0\x83\x01R_`\xC0\x83\x01R\x90\x91\x16`\xE0\x82\x01R\x92\x91PPV[`@\x80Q``\x81\x01\x82R_\x80\x82R` \x82\x01\x81\x90R\x91\x81\x01\x91\x90\x91R_a\x05\xFA`@Q\x80`@\x01`@R\x80`\x19\x81R` \x01\x7Fmockavs_deployment_output\0\0\0\0\0\0\0\x81RPa\reV[\x90P_a\x06<\x82`@Q\x80`@\x01`@R\x80` \x81R` \x01\x7F.addresses.mockAvsServiceManager\x81RPa\x0FWV[\x90P`\x01`\x01`\xA0\x1B\x03\x81\x16a\x06\xBAW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`:`$\x82\x01R\x7FMockAvsContractsParser: mockAvsS`D\x82\x01R\x7FerviceManager address is 0\0\0\0\0\0\0`d\x82\x01R`\x84\x01a\x02\xB0V[_a\x06\xFA\x83`@Q\x80`@\x01`@R\x80`\x1E\x81R` \x01\x7F.addresses.registryCoordinator\0\0\x81RPa\x0FWV[\x90P`\x01`\x01`\xA0\x1B\x03\x81\x16a\x07xW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`8`$\x82\x01R\x7FMockAvsContractsParser: registry`D\x82\x01R\x7FCoordinator address is 0\0\0\0\0\0\0\0\0`d\x82\x01R`\x84\x01a\x02\xB0V[_a\x07\x9B\x84`@Q\x80``\x01`@R\x80`!\x81R` \x01a-\xAC`!\x919a\x0FWV[\x90P`\x01`\x01`\xA0\x1B\x03\x81\x16a\x08\x19W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`;`$\x82\x01R\x7FMockAvsContractsParser: operator`D\x82\x01R\x7FStateRetriever address is 0\0\0\0\0\0`d\x82\x01R`\x84\x01a\x02\xB0V[`@\x80Q``\x81\x01\x82R`\x01`\x01`\xA0\x1B\x03\x94\x85\x16\x81R\x92\x84\x16` \x84\x01R\x92\x16\x91\x81\x01\x91\x90\x91R\x92\x91PPV[___`@Qa\x08V\x90a\x11_V[`@Q\x80\x91\x03\x90_\xF0\x80\x15\x80\x15a\x08oW=__>=_\xFD[P`\rT`@Qc@\xC1\x0F\x19`\xE0\x1B\x81R2`\x04\x82\x01R`$\x81\x01\x91\x90\x91R\x90\x91P`\x01`\x01`\xA0\x1B\x03\x82\x16\x90c@\xC1\x0F\x19\x90`D\x01_`@Q\x80\x83\x03\x81_\x87\x80;\x15\x80\x15a\x08\xBCW__\xFD[PZ\xF1\x15\x80\x15a\x08\xCEW=__>=_\xFD[PP`@\x80Qh65\xC9\xAD\xC5\xDE\xA0\0\0`$\x82\x01\x81\x90R`D\x82\x01R`\x01`\x01`\xA0\x1B\x03\x85\x81\x16`d\x83\x01R\x8A\x16`\x84\x80\x83\x01\x91\x90\x91R\x82Q\x80\x83\x03\x90\x91\x01\x81R`\xA4\x90\x91\x01\x82R` \x81\x01\x80Q`\x01`\x01`\xE0\x1B\x03\x16c\x01\x9E')`\xE0\x1B\x17\x90R\x90Q_\x93P\x88\x92P\x8A\x91\x90a\tD\x90a\x11lV[a\tP\x93\x92\x91\x90a\x11\xBEV[`@Q\x80\x91\x03\x90_\xF0\x80\x15\x80\x15a\tiW=__>=_\xFD[P`@\x80Q`\x01\x80\x82R\x81\x83\x01\x90\x92R\x91\x92P_\x91\x90` \x80\x83\x01\x90\x806\x837\x01\x90PP\x90P\x81\x81_\x81Q\x81\x10a\t\xA2Wa\t\xA2a\x11\xFDV[`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16` \x92\x83\x02\x91\x90\x91\x01\x90\x91\x01R`@\x80Q`\x01\x80\x82R\x81\x83\x01\x90\x92R_\x91\x81` \x01` \x82\x02\x806\x837\x01\x90PP\x90P_\x81_\x81Q\x81\x10a\t\xF1Wa\t\xF1a\x11\xFDV[\x91\x15\x15` \x92\x83\x02\x91\x90\x91\x01\x90\x91\x01R`@Qc\xDF[5G`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x88\x16\x90c\xDF[5G\x90a\n/\x90\x85\x90\x85\x90`\x04\x01a\x12\x11V[_`@Q\x80\x83\x03\x81_\x87\x80;\x15\x80\x15a\nFW__\xFD[PZ\xF1\x15\x80\x15a\nXW=__>=_\xFD[PP`@\x80Q\x80\x82\x01\x82R`\r\x81Rl\x1C\x18\\\x99[\x9D\x08\x1B\xD8\x9A\x99X\xDD`\x9A\x1B` \x80\x83\x01\x91\x90\x91R\x82Q\x80\x84\x01\x84R`\t\x81Rhaddresses`\xB8\x1B\x91\x81\x01\x91\x90\x91R\x91QcK\x9601`\xE1\x1B\x81R\x90\x93P\x90\x91Psq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x97,`b\x90a\n\xDE\x90\x84\x90\x8A\x90`\x04\x01a\x12\x9CV[_`@Q\x80\x83\x03\x81_\x87Z\xF1\x15\x80\x15a\n\xF9W=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x0B \x91\x90\x81\x01\x90a\x12\xE8V[P`@QcK\x9601`\xE1\x1B\x81R_\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x97,`b\x90a\x0B\\\x90\x85\x90\x8A\x90`\x04\x01a\x13\x9BV[_`@Q\x80\x83\x03\x81_\x87Z\xF1\x15\x80\x15a\x0BwW=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x0B\x9E\x91\x90\x81\x01\x90a\x12\xE8V[`@Qc\x88\xDAm5`\xE0\x1B\x81R\x90\x91P_\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x88\xDAm5\x90a\x0B\xDE\x90\x87\x90\x87\x90\x87\x90`\x04\x01a\x13\xEFV[_`@Q\x80\x83\x03\x81_\x87Z\xF1\x15\x80\x15a\x0B\xF9W=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x0C \x91\x90\x81\x01\x90a\x12\xE8V[\x90Pa\x0CD\x81`@Q\x80``\x01`@R\x80`$\x81R` \x01a-\xED`$\x919a\x0F\xD8V[P\x95\x9C\x94\x9BP\x93\x99PPPPPPPPPPV[`@\x80Q``\x81\x01\x82Ra'\x10\x81Ra:\x98` \x82\x01R`d\x81\x83\x01R\x81Q`\x01\x80\x82R\x81\x84\x01\x90\x93R\x90\x91_\x91\x82\x91\x81` \x01[`@\x80Q\x80\x82\x01\x90\x91R_\x80\x82R` \x82\x01R\x81R` \x01\x90`\x01\x90\x03\x90\x81a\x0C\x8DW\x90PP\x90P`@Q\x80`@\x01`@R\x80\x85`\x01`\x01`\xA0\x1B\x03\x16\x81R` \x01g\r\xE0\xB6\xB3\xA7d\0\0`\x01`\x01``\x1B\x03\x16\x81RP\x81_\x81Q\x81\x10a\x0C\xF6Wa\x0C\xF6a\x11\xFDV[` \x90\x81\x02\x91\x90\x91\x01\x01R`@Qc\x1A\xEBi\x91`\xE3\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x86\x16\x90c\xD7[L\x88\x90a\r1\x90\x86\x90\x86\x90\x86\x90`\x04\x01a\x141V[_`@Q\x80\x83\x03\x81_\x87\x80;\x15\x80\x15a\rHW__\xFD[PZ\xF1\x15\x80\x15a\rZW=__>=_\xFD[PPPPPPPPPV[``__Q` a-\xCD_9_Q\x90_R_\x1C`\x01`\x01`\xA0\x1B\x03\x16c\xD90\xA0\xE6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01_`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\r\xB2W=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\r\xD9\x91\x90\x81\x01\x90a\x12\xE8V[`@Q` \x01a\r\xE9\x91\x90a\x14\xE6V[`@\x80Q\x80\x83\x03`\x1F\x19\x01\x81R\x90\x82\x90Rc4\x80Q\xD7`\xE1\x1B\x82RF`\x04\x83\x01R\x91P_\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90ci\0\xA3\xAE\x90`$\x01_`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x0EGW=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x0En\x91\x90\x81\x01\x90a\x12\xE8V[`@Q` \x01a\x0E~\x91\x90a\x15\x10V[`@Q` \x81\x83\x03\x03\x81R\x90`@R\x90P_\x84`@Q` \x01a\x0E\xA1\x91\x90a\x15,V[`@\x80Q`\x1F\x19\x81\x84\x03\x01\x81R\x90\x82\x90R\x91Psq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c`\xF9\xBB\x11\x90a\x0E\xE2\x90\x86\x90\x86\x90\x86\x90` \x01a\x15LV[`@Q` \x81\x83\x03\x03\x81R\x90`@R`@Q\x82c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01a\x0F\r\x91\x90a\x15iV[_`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x0F'W=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x0FN\x91\x90\x81\x01\x90a\x12\xE8V[\x95\x94PPPPPV[`@Qc\x1E\x19\xE6W`\xE0\x1B\x81R_\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x1E\x19\xE6W\x90a\x0F\x92\x90\x86\x90\x86\x90`\x04\x01a\x15{V[` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x0F\xADW=__>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x0F\xD1\x91\x90a\x15\x9FV[\x93\x92PPPV[__Q` a-\xCD_9_Q\x90_R_\x1C`\x01`\x01`\xA0\x1B\x03\x16c\xD90\xA0\xE6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01_`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x10#W=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x10J\x91\x90\x81\x01\x90a\x12\xE8V[`@Q` \x01a\x10Z\x91\x90a\x14\xE6V[`@\x80Q\x80\x83\x03`\x1F\x19\x01\x81R\x90\x82\x90Rc4\x80Q\xD7`\xE1\x1B\x82RF`\x04\x83\x01R\x91P_\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90ci\0\xA3\xAE\x90`$\x01_`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x10\xB8W=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x10\xDF\x91\x90\x81\x01\x90a\x12\xE8V[`@Q` \x01a\x10\xEF\x91\x90a\x15\x10V[`@Q` \x81\x83\x03\x03\x81R\x90`@R\x90P_\x82\x82\x85`@Q` \x01a\x11\x16\x93\x92\x91\x90a\x15\xC5V[`@\x80Q`\x1F\x19\x81\x84\x03\x01\x81R\x90\x82\x90Rc\xE2<\xD1\x9F`\xE0\x1B\x82R\x91Psq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\xE2<\xD1\x9F\x90a\r1\x90\x88\x90\x85\x90`\x04\x01a\x15{V[a\n\xA7\x80a\x15\xEE\x839\x01\x90V[a\x0C\xF2\x80a \x95\x839\x01\x90V[_` \x82\x84\x03\x12\x15a\x11\x89W__\xFD[PQ\x91\x90PV[_\x81Q\x80\x84R\x80` \x84\x01` \x86\x01^_` \x82\x86\x01\x01R` `\x1F\x19`\x1F\x83\x01\x16\x85\x01\x01\x91PP\x92\x91PPV[`\x01`\x01`\xA0\x1B\x03\x84\x81\x16\x82R\x83\x16` \x82\x01R```@\x82\x01\x81\x90R_\x90a\x0FN\x90\x83\x01\x84a\x11\x90V[cNH{q`\xE0\x1B_R`A`\x04R`$_\xFD[cNH{q`\xE0\x1B_R`2`\x04R`$_\xFD[`@\x80\x82R\x83Q\x90\x82\x01\x81\x90R_\x90` \x85\x01\x90``\x84\x01\x90\x83[\x81\x81\x10\x15a\x12SW\x83Q`\x01`\x01`\xA0\x1B\x03\x16\x83R` \x93\x84\x01\x93\x90\x92\x01\x91`\x01\x01a\x12,V[PP\x83\x81\x03` \x80\x86\x01\x91\x90\x91R\x85Q\x80\x83R\x91\x81\x01\x92P\x85\x01\x90_[\x81\x81\x10\x15a\x12\x90W\x82Q\x15\x15\x84R` \x93\x84\x01\x93\x90\x92\x01\x91`\x01\x01a\x12pV[P\x91\x96\x95PPPPPPV[``\x81R_a\x12\xAE``\x83\x01\x85a\x11\x90V[\x82\x81\x03` \x80\x85\x01\x91\x90\x91R`\t\x82Rherc20mock`\xB8\x1B\x90\x82\x01R`\x01`\x01`\xA0\x1B\x03\x93\x90\x93\x16`@\x92\x83\x01RP\x01\x91\x90PV[_` \x82\x84\x03\x12\x15a\x12\xF8W__\xFD[\x81Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\x13\x0EW__\xFD[\x82\x01`\x1F\x81\x01\x84\x13a\x13\x1EW__\xFD[\x80Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\x138Wa\x138a\x11\xE9V[`@Q`\x1F\x82\x01`\x1F\x19\x90\x81\x16`?\x01\x16\x81\x01g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x82\x82\x10\x17\x15a\x13gWa\x13ga\x11\xE9V[`@R\x81\x81R\x82\x82\x01` \x01\x86\x10\x15a\x13~W__\xFD[\x81` \x84\x01` \x83\x01^_\x91\x81\x01` \x01\x91\x90\x91R\x94\x93PPPPV[``\x81R_a\x13\xAD``\x83\x01\x85a\x11\x90V[\x82\x81\x03` \x80\x85\x01\x91\x90\x91R`\x11\x82Rperc20mockstrategy`x\x1B\x90\x82\x01R`\x01`\x01`\xA0\x1B\x03\x93\x90\x93\x16`@\x92\x83\x01RP\x01\x91\x90PV[``\x81R_a\x14\x01``\x83\x01\x86a\x11\x90V[\x82\x81\x03` \x84\x01Ra\x14\x13\x81\x86a\x11\x90V[\x90P\x82\x81\x03`@\x84\x01Ra\x14'\x81\x85a\x11\x90V[\x96\x95PPPPPPV[_`\xA0\x82\x01c\xFF\xFF\xFF\xFF\x86Q\x16\x83Ra\xFF\xFF` \x87\x01Q\x16` \x84\x01Ra\xFF\xFF`@\x87\x01Q\x16`@\x84\x01R`\x01`\x01``\x1B\x03\x85\x16``\x84\x01R`\xA0`\x80\x84\x01R\x80\x84Q\x80\x83R`\xC0\x85\x01\x91P` \x86\x01\x92P_[\x81\x81\x10\x15a\x14\xC2W\x83Q\x80Q`\x01`\x01`\xA0\x1B\x03\x16\x84R` \x90\x81\x01Q`\x01`\x01``\x1B\x03\x16\x81\x85\x01R\x90\x93\x01\x92`@\x90\x92\x01\x91`\x01\x01a\x14\x86V[P\x90\x97\x96PPPPPPPV[_\x81Q\x80` \x84\x01\x85^_\x93\x01\x92\x83RP\x90\x91\x90PV[_a\x14\xF1\x82\x84a\x14\xCFV[n/script/output/`\x88\x1B\x81R`\x0F\x01\x93\x92PPPV[_a\x15\x1B\x82\x84a\x14\xCFV[`/`\xF8\x1B\x81R`\x01\x01\x93\x92PPPV[_a\x157\x82\x84a\x14\xCFV[d\x1759\xB7\xB7`\xD9\x1B\x81R`\x05\x01\x93\x92PPPV[_a\x0FNa\x15ca\x15]\x84\x88a\x14\xCFV[\x86a\x14\xCFV[\x84a\x14\xCFV[` \x81R_a\x0F\xD1` \x83\x01\x84a\x11\x90V[`@\x81R_a\x15\x8D`@\x83\x01\x85a\x11\x90V[\x82\x81\x03` \x84\x01Ra\x0FN\x81\x85a\x11\x90V[_` \x82\x84\x03\x12\x15a\x15\xAFW__\xFD[\x81Q`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x0F\xD1W__\xFD[_a\x15\xD6a\x15ca\x15]\x84\x88a\x14\xCFV[d\x1759\xB7\xB7`\xD9\x1B\x81R`\x05\x01\x95\x94PPPPPV\xFE`\x80`@R4\x80\x15a\0\x0FW__\xFD[P`@Q\x80`@\x01`@R\x80`\n\x81R` \x01i&\xB7\xB1\xB5\x90*7\xB5\xB2\xB7`\xB1\x1B\x81RP`@Q\x80`@\x01`@R\x80`\x03\x81R` \x01bMCK`\xE8\x1B\x81RP\x81`\x03\x90\x81a\0^\x91\x90a\x01\x0BV[P`\x04a\0k\x82\x82a\x01\x0BV[PPPa\x01\xC5V[cNH{q`\xE0\x1B_R`A`\x04R`$_\xFD[`\x01\x81\x81\x1C\x90\x82\x16\x80a\0\x9BW`\x7F\x82\x16\x91P[` \x82\x10\x81\x03a\0\xB9WcNH{q`\xE0\x1B_R`\"`\x04R`$_\xFD[P\x91\x90PV[`\x1F\x82\x11\x15a\x01\x06W\x80_R` _ `\x1F\x84\x01`\x05\x1C\x81\x01` \x85\x10\x15a\0\xE4WP\x80[`\x1F\x84\x01`\x05\x1C\x82\x01\x91P[\x81\x81\x10\x15a\x01\x03W_\x81U`\x01\x01a\0\xF0V[PP[PPPV[\x81Q`\x01`\x01`@\x1B\x03\x81\x11\x15a\x01$Wa\x01$a\0sV[a\x018\x81a\x012\x84Ta\0\x87V[\x84a\0\xBFV[` `\x1F\x82\x11`\x01\x81\x14a\x01jW_\x83\x15a\x01SWP\x84\x82\x01Q[_\x19`\x03\x85\x90\x1B\x1C\x19\x16`\x01\x84\x90\x1B\x17\x84Ua\x01\x03V[_\x84\x81R` \x81 `\x1F\x19\x85\x16\x91[\x82\x81\x10\x15a\x01\x99W\x87\x85\x01Q\x82U` \x94\x85\x01\x94`\x01\x90\x92\x01\x91\x01a\x01yV[P\x84\x82\x10\x15a\x01\xB6W\x86\x84\x01Q_\x19`\x03\x87\x90\x1B`\xF8\x16\x1C\x19\x16\x81U[PPPP`\x01\x90\x81\x1B\x01\x90UPV[a\x08\xD5\x80a\x01\xD2_9_\xF3\xFE`\x80`@R4\x80\x15a\0\x0FW__\xFD[P`\x046\x10a\0\xB1W_5`\xE0\x1C\x80c@\xC1\x0F\x19\x11a\0nW\x80c@\xC1\x0F\x19\x14a\x01=W\x80cp\xA0\x821\x14a\x01RW\x80c\x95\xD8\x9BA\x14a\x01zW\x80c\xA4W\xC2\xD7\x14a\x01\x82W\x80c\xA9\x05\x9C\xBB\x14a\x01\x95W\x80c\xDDb\xED>\x14a\x01\xA8W__\xFD[\x80c\x06\xFD\xDE\x03\x14a\0\xB5W\x80c\t^\xA7\xB3\x14a\0\xD3W\x80c\x18\x16\r\xDD\x14a\0\xF6W\x80c#\xB8r\xDD\x14a\x01\x08W\x80c1<\xE5g\x14a\x01\x1BW\x80c9P\x93Q\x14a\x01*W[__\xFD[a\0\xBDa\x01\xBBV[`@Qa\0\xCA\x91\x90a\x07EV[`@Q\x80\x91\x03\x90\xF3[a\0\xE6a\0\xE16`\x04a\x07\x95V[a\x02KV[`@Q\x90\x15\x15\x81R` \x01a\0\xCAV[`\x02T[`@Q\x90\x81R` \x01a\0\xCAV[a\0\xE6a\x01\x166`\x04a\x07\xBDV[a\x02dV[`@Q`\x12\x81R` \x01a\0\xCAV[a\0\xE6a\x0186`\x04a\x07\x95V[a\x02zV[a\x01Pa\x01K6`\x04a\x07\x95V[a\x02\x9BV[\0[a\0\xFAa\x01`6`\x04a\x07\xF7V[`\x01`\x01`\xA0\x1B\x03\x16_\x90\x81R` \x81\x90R`@\x90 T\x90V[a\0\xBDa\x02\xA9V[a\0\xE6a\x01\x906`\x04a\x07\x95V[a\x02\xB8V[a\0\xE6a\x01\xA36`\x04a\x07\x95V[a\x03BV[a\0\xFAa\x01\xB66`\x04a\x08\x17V[a\x03OV[```\x03\x80Ta\x01\xCA\x90a\x08HV[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x01\xF6\x90a\x08HV[\x80\x15a\x02AW\x80`\x1F\x10a\x02\x18Wa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x02AV[\x82\x01\x91\x90_R` _ \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x02$W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPPPP\x90P\x90V[_3a\x02X\x81\x85\x85a\x03yV[`\x01\x91PP[\x92\x91PPV[_a\x02p\x84\x84\x84a\x04\x9CV[P`\x01\x93\x92PPPV[_3a\x02X\x81\x85\x85a\x02\x8C\x83\x83a\x03OV[a\x02\x96\x91\x90a\x08\x80V[a\x03yV[a\x02\xA5\x82\x82a\x06iV[PPV[```\x04\x80Ta\x01\xCA\x90a\x08HV[_3\x81a\x02\xC5\x82\x86a\x03OV[\x90P\x83\x81\x10\x15a\x03*W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`%`$\x82\x01R\x7FERC20: decreased allowance below`D\x82\x01Rd zero`\xD8\x1B`d\x82\x01R`\x84\x01[`@Q\x80\x91\x03\x90\xFD[a\x037\x82\x86\x86\x84\x03a\x03yV[P`\x01\x94\x93PPPPV[_3a\x02X\x81\x85\x85a\x04\x9CV[`\x01`\x01`\xA0\x1B\x03\x91\x82\x16_\x90\x81R`\x01` \x90\x81R`@\x80\x83 \x93\x90\x94\x16\x82R\x91\x90\x91R T\x90V[`\x01`\x01`\xA0\x1B\x03\x83\x16a\x03\xDBW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`$\x80\x82\x01R\x7FERC20: approve from the zero add`D\x82\x01Rcress`\xE0\x1B`d\x82\x01R`\x84\x01a\x03!V[`\x01`\x01`\xA0\x1B\x03\x82\x16a\x04<W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`\"`$\x82\x01R\x7FERC20: approve to the zero addre`D\x82\x01Rass`\xF0\x1B`d\x82\x01R`\x84\x01a\x03!V[`\x01`\x01`\xA0\x1B\x03\x83\x81\x16_\x81\x81R`\x01` \x90\x81R`@\x80\x83 \x94\x87\x16\x80\x84R\x94\x82R\x91\x82\x90 \x85\x90U\x90Q\x84\x81R\x7F\x8C[\xE1\xE5\xEB\xEC}[\xD1OqB}\x1E\x84\xF3\xDD\x03\x14\xC0\xF7\xB2)\x1E[ \n\xC8\xC7\xC3\xB9%\x91\x01`@Q\x80\x91\x03\x90\xA3PPPV[`\x01`\x01`\xA0\x1B\x03\x83\x16a\x05\0W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`%`$\x82\x01R\x7FERC20: transfer from the zero ad`D\x82\x01Rddress`\xD8\x1B`d\x82\x01R`\x84\x01a\x03!V[`\x01`\x01`\xA0\x1B\x03\x82\x16a\x05bW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`#`$\x82\x01R\x7FERC20: transfer to the zero addr`D\x82\x01Rbess`\xE8\x1B`d\x82\x01R`\x84\x01a\x03!V[`\x01`\x01`\xA0\x1B\x03\x83\x16_\x90\x81R` \x81\x90R`@\x90 T\x81\x81\x10\x15a\x05\xD9W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FERC20: transfer amount exceeds b`D\x82\x01Realance`\xD0\x1B`d\x82\x01R`\x84\x01a\x03!V[`\x01`\x01`\xA0\x1B\x03\x80\x85\x16_\x90\x81R` \x81\x90R`@\x80\x82 \x85\x85\x03\x90U\x91\x85\x16\x81R\x90\x81 \x80T\x84\x92\x90a\x06\x0F\x90\x84\x90a\x08\x80V[\x92PP\x81\x90UP\x82`\x01`\x01`\xA0\x1B\x03\x16\x84`\x01`\x01`\xA0\x1B\x03\x16\x7F\xDD\xF2R\xAD\x1B\xE2\xC8\x9Bi\xC2\xB0h\xFC7\x8D\xAA\x95+\xA7\xF1c\xC4\xA1\x16(\xF5ZM\xF5#\xB3\xEF\x84`@Qa\x06[\x91\x81R` \x01\x90V[`@Q\x80\x91\x03\x90\xA3PPPPV[`\x01`\x01`\xA0\x1B\x03\x82\x16a\x06\xBFW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`\x1F`$\x82\x01R\x7FERC20: mint to the zero address\0`D\x82\x01R`d\x01a\x03!V[\x80`\x02_\x82\x82Ta\x06\xD0\x91\x90a\x08\x80V[\x90\x91UPP`\x01`\x01`\xA0\x1B\x03\x82\x16_\x90\x81R` \x81\x90R`@\x81 \x80T\x83\x92\x90a\x06\xFC\x90\x84\x90a\x08\x80V[\x90\x91UPP`@Q\x81\x81R`\x01`\x01`\xA0\x1B\x03\x83\x16\x90_\x90\x7F\xDD\xF2R\xAD\x1B\xE2\xC8\x9Bi\xC2\xB0h\xFC7\x8D\xAA\x95+\xA7\xF1c\xC4\xA1\x16(\xF5ZM\xF5#\xB3\xEF\x90` \x01`@Q\x80\x91\x03\x90\xA3PPV[` \x81R_\x82Q\x80` \x84\x01R\x80` \x85\x01`@\x85\x01^_`@\x82\x85\x01\x01R`@`\x1F\x19`\x1F\x83\x01\x16\x84\x01\x01\x91PP\x92\x91PPV[\x805`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x07\x90W__\xFD[\x91\x90PV[__`@\x83\x85\x03\x12\x15a\x07\xA6W__\xFD[a\x07\xAF\x83a\x07zV[\x94` \x93\x90\x93\x015\x93PPPV[___``\x84\x86\x03\x12\x15a\x07\xCFW__\xFD[a\x07\xD8\x84a\x07zV[\x92Pa\x07\xE6` \x85\x01a\x07zV[\x92\x95\x92\x94PPP`@\x91\x90\x91\x015\x90V[_` \x82\x84\x03\x12\x15a\x08\x07W__\xFD[a\x08\x10\x82a\x07zV[\x93\x92PPPV[__`@\x83\x85\x03\x12\x15a\x08(W__\xFD[a\x081\x83a\x07zV[\x91Pa\x08?` \x84\x01a\x07zV[\x90P\x92P\x92\x90PV[`\x01\x81\x81\x1C\x90\x82\x16\x80a\x08\\W`\x7F\x82\x16\x91P[` \x82\x10\x81\x03a\x08zWcNH{q`\xE0\x1B_R`\"`\x04R`$_\xFD[P\x91\x90PV[\x80\x82\x01\x80\x82\x11\x15a\x02^WcNH{q`\xE0\x1B_R`\x11`\x04R`$_\xFD\xFE\xA2dipfsX\"\x12 \x9A\x04\xAA\xE6\xE5\xFB\xB6\x82[V\xC0m{\xA2D,\xB5\x03\xD8^\xD1\x07n\xD7nYD\xB0\x12h\x89\x9EdsolcC\0\x08\x1C\x003`\x80`@R`@Qa\x0C\xF28\x03\x80a\x0C\xF2\x839\x81\x01`@\x81\x90Ra\0\"\x91a\x03\xB7V[\x82\x81a\0/\x82\x82_a\0CV[Pa\0;\x90P\x82a\0nV[PPPa\x04\xD3V[a\0L\x83a\0\xDBV[_\x82Q\x11\x80a\0XWP\x80[\x15a\0iWa\0g\x83\x83a\x01\x1AV[P[PPPV[\x7F~dMyB/\x17\xC0\x1EH\x94\xB5\xF4\xF5\x88\xD31\xEB\xFA(e=B\xAE\x83-\xC5\x9E8\xC9y\x8Fa\0\xAD_Q` a\x0C\xAB_9_Q\x90_RT`\x01`\x01`\xA0\x1B\x03\x16\x90V[`@\x80Q`\x01`\x01`\xA0\x1B\x03\x92\x83\x16\x81R\x91\x84\x16` \x83\x01R\x01`@Q\x80\x91\x03\x90\xA1a\0\xD8\x81a\x01FV[PV[a\0\xE4\x81a\x01\xE1V[`@Q`\x01`\x01`\xA0\x1B\x03\x82\x16\x90\x7F\xBC|\xD7Z \xEE'\xFD\x9A\xDE\xBA\xB3 A\xF7U!M\xBCk\xFF\xA9\x0C\xC0\"[9\xDA.\\-;\x90_\x90\xA2PV[``a\x01?\x83\x83`@Q\x80``\x01`@R\x80`'\x81R` \x01a\x0C\xCB`'\x919a\x02uV[\x93\x92PPPV[`\x01`\x01`\xA0\x1B\x03\x81\x16a\x01\xB0W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FERC1967: new admin is the zero a`D\x82\x01Reddress`\xD0\x1B`d\x82\x01R`\x84\x01[`@Q\x80\x91\x03\x90\xFD[\x80_Q` a\x0C\xAB_9_Q\x90_R[\x80T`\x01`\x01`\xA0\x1B\x03\x19\x16`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UPV[`\x01`\x01`\xA0\x1B\x03\x81\x16;a\x02NW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`-`$\x82\x01R\x7FERC1967: new implementation is n`D\x82\x01Rl\x1B\xDD\x08\x18H\x18\xDB\xDB\x9D\x1C\x98X\xDD`\x9A\x1B`d\x82\x01R`\x84\x01a\x01\xA7V[\x80\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBCa\x01\xC0V[```\x01`\x01`\xA0\x1B\x03\x84\x16;a\x02\xDDW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FAddress: delegate call to non-co`D\x82\x01Re\x1B\x9D\x1C\x98X\xDD`\xD2\x1B`d\x82\x01R`\x84\x01a\x01\xA7V[__\x85`\x01`\x01`\xA0\x1B\x03\x16\x85`@Qa\x02\xF7\x91\x90a\x04\x88V[_`@Q\x80\x83\x03\x81\x85Z\xF4\x91PP=\x80_\x81\x14a\x03/W`@Q\x91P`\x1F\x19`?=\x01\x16\x82\x01`@R=\x82R=_` \x84\x01>a\x034V[``\x91P[P\x90\x92P\x90Pa\x03E\x82\x82\x86a\x03OV[\x96\x95PPPPPPV[``\x83\x15a\x03^WP\x81a\x01?V[\x82Q\x15a\x03nW\x82Q\x80\x84` \x01\xFD[\x81`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\xA7\x91\x90a\x04\x9EV[\x80Q`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x03\x9EW__\xFD[\x91\x90PV[cNH{q`\xE0\x1B_R`A`\x04R`$_\xFD[___``\x84\x86\x03\x12\x15a\x03\xC9W__\xFD[a\x03\xD2\x84a\x03\x88V[\x92Pa\x03\xE0` \x85\x01a\x03\x88V[`@\x85\x01Q\x90\x92P`\x01`\x01`@\x1B\x03\x81\x11\x15a\x03\xFBW__\xFD[\x84\x01`\x1F\x81\x01\x86\x13a\x04\x0BW__\xFD[\x80Q`\x01`\x01`@\x1B\x03\x81\x11\x15a\x04$Wa\x04$a\x03\xA3V[`@Q`\x1F\x82\x01`\x1F\x19\x90\x81\x16`?\x01\x16\x81\x01`\x01`\x01`@\x1B\x03\x81\x11\x82\x82\x10\x17\x15a\x04RWa\x04Ra\x03\xA3V[`@R\x81\x81R\x82\x82\x01` \x01\x88\x10\x15a\x04iW__\xFD[\x81` \x84\x01` \x83\x01^_` \x83\x83\x01\x01R\x80\x93PPPP\x92P\x92P\x92V[_\x82Q\x80` \x85\x01\x84^_\x92\x01\x91\x82RP\x91\x90PV[` \x81R_\x82Q\x80` \x84\x01R\x80` \x85\x01`@\x85\x01^_`@\x82\x85\x01\x01R`@`\x1F\x19`\x1F\x83\x01\x16\x84\x01\x01\x91PP\x92\x91PPV[a\x07\xCB\x80a\x04\xE0_9_\xF3\xFE`\x80`@R`\x046\x10a\0MW_5`\xE0\x1C\x80c6Y\xCF\xE6\x14a\0dW\x80cO\x1E\xF2\x86\x14a\0\x83W\x80c\\`\xDA\x1B\x14a\0\x96W\x80c\x8F(9p\x14a\0\xC6W\x80c\xF8Q\xA4@\x14a\0\xE5Wa\0\\V[6a\0\\Wa\0Za\0\xF9V[\0[a\0Za\0\xF9V[4\x80\x15a\0oW__\xFD[Pa\0Za\0~6`\x04a\x06\x8CV[a\x01\x13V[a\0Za\0\x916`\x04a\x06\xA5V[a\x01NV[4\x80\x15a\0\xA1W__\xFD[Pa\0\xAAa\x01\xB4V[`@Q`\x01`\x01`\xA0\x1B\x03\x90\x91\x16\x81R` \x01`@Q\x80\x91\x03\x90\xF3[4\x80\x15a\0\xD1W__\xFD[Pa\0Za\0\xE06`\x04a\x06\x8CV[a\x01\xE4V[4\x80\x15a\0\xF0W__\xFD[Pa\0\xAAa\x02\x04V[a\x01\x01a\x02$V[a\x01\x11a\x01\x0Ca\x02\xB9V[a\x02\xC2V[V[a\x01\x1Ba\x02\xE0V[`\x01`\x01`\xA0\x1B\x03\x163\x03a\x01FWa\x01C\x81`@Q\x80` \x01`@R\x80_\x81RP_a\x03\x12V[PV[a\x01Ca\0\xF9V[a\x01Va\x02\xE0V[`\x01`\x01`\xA0\x1B\x03\x163\x03a\x01\xACWa\x01\xA7\x83\x83\x83\x80\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x93\x92\x91\x90\x81\x81R` \x01\x83\x83\x80\x82\x847_\x92\x01\x91\x90\x91RP`\x01\x92Pa\x03\x12\x91PPV[PPPV[a\x01\xA7a\0\xF9V[_a\x01\xBDa\x02\xE0V[`\x01`\x01`\xA0\x1B\x03\x163\x03a\x01\xD9Wa\x01\xD4a\x02\xB9V[\x90P\x90V[a\x01\xE1a\0\xF9V[\x90V[a\x01\xECa\x02\xE0V[`\x01`\x01`\xA0\x1B\x03\x163\x03a\x01FWa\x01C\x81a\x03<V[_a\x02\ra\x02\xE0V[`\x01`\x01`\xA0\x1B\x03\x163\x03a\x01\xD9Wa\x01\xD4a\x02\xE0V[a\x02,a\x02\xE0V[`\x01`\x01`\xA0\x1B\x03\x163\x03a\x01\x11W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`B`$\x82\x01R\x7FTransparentUpgradeableProxy: adm`D\x82\x01R\x7Fin cannot fallback to proxy targ`d\x82\x01Ra\x19]`\xF2\x1B`\x84\x82\x01R`\xA4\x01[`@Q\x80\x91\x03\x90\xFD[_a\x01\xD4a\x03\x90V[6__7__6_\x84Z\xF4=__>\x80\x80\x15a\x02\xDCW=_\xF3[=_\xFD[_\x7F\xB51'hJV\x8B1s\xAE\x13\xB9\xF8\xA6\x01n$>c\xB6\xE8\xEE\x11x\xD6\xA7\x17\x85\x0B]a\x03[T`\x01`\x01`\xA0\x1B\x03\x16\x91\x90PV[a\x03\x1B\x83a\x03\xB7V[_\x82Q\x11\x80a\x03'WP\x80[\x15a\x01\xA7Wa\x036\x83\x83a\x03\xF6V[PPPPV[\x7F~dMyB/\x17\xC0\x1EH\x94\xB5\xF4\xF5\x88\xD31\xEB\xFA(e=B\xAE\x83-\xC5\x9E8\xC9y\x8Fa\x03ea\x02\xE0V[`@\x80Q`\x01`\x01`\xA0\x1B\x03\x92\x83\x16\x81R\x91\x84\x16` \x83\x01R\x01`@Q\x80\x91\x03\x90\xA1a\x01C\x81a\x04\"V[_\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBCa\x03\x03V[a\x03\xC0\x81a\x04\xCBV[`@Q`\x01`\x01`\xA0\x1B\x03\x82\x16\x90\x7F\xBC|\xD7Z \xEE'\xFD\x9A\xDE\xBA\xB3 A\xF7U!M\xBCk\xFF\xA9\x0C\xC0\"[9\xDA.\\-;\x90_\x90\xA2PV[``a\x04\x1B\x83\x83`@Q\x80``\x01`@R\x80`'\x81R` \x01a\x07o`'\x919a\x05_V[\x93\x92PPPV[`\x01`\x01`\xA0\x1B\x03\x81\x16a\x04\x87W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FERC1967: new admin is the zero a`D\x82\x01Reddress`\xD0\x1B`d\x82\x01R`\x84\x01a\x02\xB0V[\x80\x7F\xB51'hJV\x8B1s\xAE\x13\xB9\xF8\xA6\x01n$>c\xB6\xE8\xEE\x11x\xD6\xA7\x17\x85\x0B]a\x03[\x80T`\x01`\x01`\xA0\x1B\x03\x19\x16`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UPV[`\x01`\x01`\xA0\x1B\x03\x81\x16;a\x058W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`-`$\x82\x01R\x7FERC1967: new implementation is n`D\x82\x01Rl\x1B\xDD\x08\x18H\x18\xDB\xDB\x9D\x1C\x98X\xDD`\x9A\x1B`d\x82\x01R`\x84\x01a\x02\xB0V[\x80\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBCa\x04\xAAV[```\x01`\x01`\xA0\x1B\x03\x84\x16;a\x05\xC7W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FAddress: delegate call to non-co`D\x82\x01Re\x1B\x9D\x1C\x98X\xDD`\xD2\x1B`d\x82\x01R`\x84\x01a\x02\xB0V[__\x85`\x01`\x01`\xA0\x1B\x03\x16\x85`@Qa\x05\xE1\x91\x90a\x07#V[_`@Q\x80\x83\x03\x81\x85Z\xF4\x91PP=\x80_\x81\x14a\x06\x19W`@Q\x91P`\x1F\x19`?=\x01\x16\x82\x01`@R=\x82R=_` \x84\x01>a\x06\x1EV[``\x91P[P\x91P\x91Pa\x06.\x82\x82\x86a\x068V[\x96\x95PPPPPPV[``\x83\x15a\x06GWP\x81a\x04\x1BV[\x82Q\x15a\x06WW\x82Q\x80\x84` \x01\xFD[\x81`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x02\xB0\x91\x90a\x079V[\x805`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x06\x87W__\xFD[\x91\x90PV[_` \x82\x84\x03\x12\x15a\x06\x9CW__\xFD[a\x04\x1B\x82a\x06qV[___`@\x84\x86\x03\x12\x15a\x06\xB7W__\xFD[a\x06\xC0\x84a\x06qV[\x92P` \x84\x015g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\x06\xDBW__\xFD[\x84\x01`\x1F\x81\x01\x86\x13a\x06\xEBW__\xFD[\x805g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\x07\x01W__\xFD[\x86` \x82\x84\x01\x01\x11\x15a\x07\x12W__\xFD[\x93\x96` \x91\x90\x91\x01\x95P\x92\x93PPPV[_\x82Q\x80` \x85\x01\x84^_\x92\x01\x91\x82RP\x91\x90PV[` \x81R_\x82Q\x80` \x84\x01R\x80` \x85\x01`@\x85\x01^_`@\x82\x85\x01\x01R`@`\x1F\x19`\x1F\x83\x01\x16\x84\x01\x01\x91PP\x92\x91PPV\xFEAddress: low-level delegate call failed\xA2dipfsX\"\x12 \xB8\xA8\xD1bZ\x9C\xA1\x04fs\x12\x171]\t\x8E\xF9\xC2`\x9CG\xB7\xD8\xEFZ3\x15\x94|\xA6\xF9(dsolcC\0\x08\x1C\x003\xB51'hJV\x8B1s\xAE\x13\xB9\xF8\xA6\x01n$>c\xB6\xE8\xEE\x11x\xD6\xA7\x17\x85\x0B]a\x03Address: low-level delegate call failed.addresses.baseStrategyImplementation.addresses.operatorStateRetriever\x88\\\xB6\x92@\xA95\xD62\xD7\x9C1q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-token_and_strategy_deployment_output\xA2dipfsX\"\x12 \xBBds\xAC/l\xB0x8\t`\xF83\xD3+\tz7\x9B\xED'\x07\xE8\xD5\xDC\xEE\xE2yIh\xF5AdsolcC\0\x08\x1C\x003",
    );
    /// The runtime bytecode of the contract, as deployed on the network.
    ///
    /// ```text
    ///0x608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063c040622614610038578063f8ccbf4714610042575b5f5ffd5b610040610069565b005b600c546100559062010000900460ff1681565b604051901515815260200160405180910390f35b735fbdb2315678afecb367f032d93f642f64180aa35f61008761032c565b90505f61009261059f565b90505f5f5f516020612dcd5f395f51905f525f1c6001600160a01b0316637fb5297f6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156100dd575f5ffd5b505af11580156100ef573d5f5f3e3d5ffd5b505050505f5f516020612dcd5f395f51905f525f1c6001600160a01b03166342cbb15c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561013f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101639190611179565b905046617a691480610176575046610539145b1561022157610196855f015186602001518760e001518860400151610847565b60408051630fe7858560e31b81526004810191909152601160448201527065726332304d6f636b537472617465677960781b60648201526001600160a01b038083166024830152919550919350871690637f3c2c28906084015f604051808303815f87803b158015610206575f5ffd5b505af1158015610218573d5f5f3e3d5ffd5b505050506102b9565b466142680361025d57735c8b55722f421556a2aafb7a3ea63d4c3e5143129250733f1c547b21f65e10480de3ad8e19faac46c9503491506102b9565b60405162461bcd60e51b815260206004820152602660248201527f436f6e66696775726520546f6b656e20616e6420537472617465677920666f726044820152651021b430b4b760d11b60648201526084015b60405180910390fd5b6102c7846020015184610c58565b5f516020612dcd5f395f51905f525f1c6001600160a01b03166376eadd366040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561030e575f5ffd5b505af1158015610320573d5f5f3e3d5ffd5b50505050505050505050565b60408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091525f6103ab6040518060400160405280601c81526020017f656967656e6c617965725f6465706c6f796d656e745f6f757470757400000000815250610d65565b90505f6103ed826040518060400160405280601f81526020017f2e6164647265737365732e656967656e4c6179657250726f787941646d696e00815250610f57565b90505f61042f836040518060400160405280601e81526020017f2e6164647265737365732e656967656e4c617965725061757365725265670000815250610f57565b90505f610471846040518060400160405280601a81526020017f2e6164647265737365732e73747261746567794d616e61676572000000000000815250610f57565b90505f6104ab85604051806040016040528060158152602001741730b2323932b9b9b2b9973232b632b3b0ba34b7b760591b815250610f57565b90505f6104ed866040518060400160405280601781526020017f2e6164647265737365732e6176734469726563746f7279000000000000000000815250610f57565b90505f61052487604051806040016040528060128152602001711730b2323932b9b9b2b99739b630b9b432b960711b815250610f57565b90505f61054988604051806060016040528060258152602001612d8760259139610f57565b60408051610100810182526001600160a01b03998a1681529789166020890152958816958701959095525091851660608501529084166080840152831660a08301525f60c083015290911660e082015292915050565b604080516060810182525f80825260208201819052918101919091525f6105fa6040518060400160405280601981526020017f6d6f636b6176735f6465706c6f796d656e745f6f757470757400000000000000815250610d65565b90505f61063c826040518060400160405280602081526020017f2e6164647265737365732e6d6f636b417673536572766963654d616e61676572815250610f57565b90506001600160a01b0381166106ba5760405162461bcd60e51b815260206004820152603a60248201527f4d6f636b417673436f6e7472616374735061727365723a206d6f636b4176735360448201527f6572766963654d616e616765722061646472657373206973203000000000000060648201526084016102b0565b5f6106fa836040518060400160405280601e81526020017f2e6164647265737365732e7265676973747279436f6f7264696e61746f720000815250610f57565b90506001600160a01b0381166107785760405162461bcd60e51b815260206004820152603860248201527f4d6f636b417673436f6e7472616374735061727365723a20726567697374727960448201527f436f6f7264696e61746f7220616464726573732069732030000000000000000060648201526084016102b0565b5f61079b84604051806060016040528060218152602001612dac60219139610f57565b90506001600160a01b0381166108195760405162461bcd60e51b815260206004820152603b60248201527f4d6f636b417673436f6e7472616374735061727365723a206f70657261746f7260448201527f537461746552657472696576657220616464726573732069732030000000000060648201526084016102b0565b604080516060810182526001600160a01b039485168152928416602084015292169181019190915292915050565b5f5f5f6040516108569061115f565b604051809103905ff08015801561086f573d5f5f3e3d5ffd5b50600d546040516340c10f1960e01b815232600482015260248101919091529091506001600160a01b038216906340c10f19906044015f604051808303815f87803b1580156108bc575f5ffd5b505af11580156108ce573d5f5f3e3d5ffd5b505060408051683635c9adc5dea000006024820181905260448201526001600160a01b0385811660648301528a166084808301919091528251808303909101815260a490910182526020810180516001600160e01b031663019e272960e01b17905290515f93508892508a91906109449061116c565b610950939291906111be565b604051809103905ff080158015610969573d5f5f3e3d5ffd5b506040805160018082528183019092529192505f91906020808301908036833701905050905081815f815181106109a2576109a26111fd565b6001600160a01b0392909216602092830291909101909101526040805160018082528183019092525f918160200160208202803683370190505090505f815f815181106109f1576109f16111fd565b9115156020928302919091019091015260405163df5b354760e01b81526001600160a01b0388169063df5b354790610a2f9085908590600401611211565b5f604051808303815f87803b158015610a46575f5ffd5b505af1158015610a58573d5f5f3e3d5ffd5b5050604080518082018252600d81526c1c185c995b9d081bd89a9958dd609a1b60208083019190915282518084018452600981526861646472657373657360b81b918101919091529151634b96303160e11b8152909350909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063972c606290610ade9084908a9060040161129c565b5f604051808303815f875af1158015610af9573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610b2091908101906112e8565b50604051634b96303160e11b81525f90737109709ecfa91a80626ff3989d68f67f5b1dd12d9063972c606290610b5c9085908a9060040161139b565b5f604051808303815f875af1158015610b77573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610b9e91908101906112e8565b6040516388da6d3560e01b81529091505f90737109709ecfa91a80626ff3989d68f67f5b1dd12d906388da6d3590610bde908790879087906004016113ef565b5f604051808303815f875af1158015610bf9573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610c2091908101906112e8565b9050610c4481604051806060016040528060248152602001612ded60249139610fd8565b50959c949b50939950505050505050505050565b604080516060810182526127108152613a9860208201526064818301528151600180825281840190935290915f918291816020015b604080518082019091525f8082526020820152815260200190600190039081610c8d5790505090506040518060400160405280856001600160a01b03168152602001670de0b6b3a76400006001600160601b0316815250815f81518110610cf657610cf66111fd565b6020908102919091010152604051631aeb699160e31b81526001600160a01b0386169063d75b4c8890610d3190869086908690600401611431565b5f604051808303815f87803b158015610d48575f5ffd5b505af1158015610d5a573d5f5f3e3d5ffd5b505050505050505050565b60605f5f516020612dcd5f395f51905f525f1c6001600160a01b031663d930a0e66040518163ffffffff1660e01b81526004015f60405180830381865afa158015610db2573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610dd991908101906112e8565b604051602001610de991906114e6565b60408051808303601f190181529082905263348051d760e11b825246600483015291505f90737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae906024015f60405180830381865afa158015610e47573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610e6e91908101906112e8565b604051602001610e7e9190611510565b60405160208183030381529060405290505f84604051602001610ea1919061152c565b60408051601f19818403018152908290529150737109709ecfa91a80626ff3989d68f67f5b1dd12d906360f9bb1190610ee29086908690869060200161154c565b6040516020818303038152906040526040518263ffffffff1660e01b8152600401610f0d9190611569565b5f60405180830381865afa158015610f27573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610f4e91908101906112e8565b95945050505050565b604051631e19e65760e01b81525f90737109709ecfa91a80626ff3989d68f67f5b1dd12d90631e19e65790610f92908690869060040161157b565b602060405180830381865afa158015610fad573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fd1919061159f565b9392505050565b5f5f516020612dcd5f395f51905f525f1c6001600160a01b031663d930a0e66040518163ffffffff1660e01b81526004015f60405180830381865afa158015611023573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261104a91908101906112e8565b60405160200161105a91906114e6565b60408051808303601f190181529082905263348051d760e11b825246600483015291505f90737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae906024015f60405180830381865afa1580156110b8573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526110df91908101906112e8565b6040516020016110ef9190611510565b60405160208183030381529060405290505f828285604051602001611116939291906115c5565b60408051601f198184030181529082905263e23cd19f60e01b82529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e23cd19f90610d31908890859060040161157b565b610aa7806115ee83390190565b610cf28061209583390190565b5f60208284031215611189575f5ffd5b5051919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038481168252831660208201526060604082018190525f90610f4e90830184611190565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b604080825283519082018190525f9060208501906060840190835b818110156112535783516001600160a01b031683526020938401939092019160010161122c565b5050838103602080860191909152855180835291810192508501905f5b818110156112905782511515845260209384019390920191600101611270565b50919695505050505050565b606081525f6112ae6060830185611190565b828103602080850191909152600982526865726332306d6f636b60b81b908201526001600160a01b03939093166040928301525001919050565b5f602082840312156112f8575f5ffd5b815167ffffffffffffffff81111561130e575f5ffd5b8201601f8101841361131e575f5ffd5b805167ffffffffffffffff811115611338576113386111e9565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611367576113676111e9565b60405281815282820160200186101561137e575f5ffd5b8160208401602083015e5f91810160200191909152949350505050565b606081525f6113ad6060830185611190565b828103602080850191909152601182527065726332306d6f636b737472617465677960781b908201526001600160a01b03939093166040928301525001919050565b606081525f6114016060830186611190565b82810360208401526114138186611190565b905082810360408401526114278185611190565b9695505050505050565b5f60a0820163ffffffff865116835261ffff602087015116602084015261ffff60408701511660408401526001600160601b038516606084015260a0608084015280845180835260c0850191506020860192505f5b818110156114c257835180516001600160a01b031684526020908101516001600160601b03168185015290930192604090920191600101611486565b5090979650505050505050565b5f81518060208401855e5f93019283525090919050565b5f6114f182846114cf565b6e2f7363726970742f6f75747075742f60881b8152600f019392505050565b5f61151b82846114cf565b602f60f81b81526001019392505050565b5f61153782846114cf565b64173539b7b760d91b81526005019392505050565b5f610f4e61156361155d84886114cf565b866114cf565b846114cf565b602081525f610fd16020830184611190565b604081525f61158d6040830185611190565b8281036020840152610f4e8185611190565b5f602082840312156115af575f5ffd5b81516001600160a01b0381168114610fd1575f5ffd5b5f6115d661156361155d84886114cf565b64173539b7b760d91b81526005019594505050505056fe608060405234801561000f575f5ffd5b506040518060400160405280600a81526020016926b7b1b5902a37b5b2b760b11b815250604051806040016040528060038152602001624d434b60e81b815250816003908161005e919061010b565b50600461006b828261010b565b5050506101c5565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061009b57607f821691505b6020821081036100b957634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561010657805f5260205f20601f840160051c810160208510156100e45750805b601f840160051c820191505b81811015610103575f81556001016100f0565b50505b505050565b81516001600160401b0381111561012457610124610073565b610138816101328454610087565b846100bf565b6020601f82116001811461016a575f83156101535750848201515b5f19600385901b1c1916600184901b178455610103565b5f84815260208120601f198516915b828110156101995787850151825560209485019460019092019101610179565b50848210156101b657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6108d5806101d25f395ff3fe608060405234801561000f575f5ffd5b50600436106100b1575f3560e01c806340c10f191161006e57806340c10f191461013d57806370a082311461015257806395d89b411461017a578063a457c2d714610182578063a9059cbb14610195578063dd62ed3e146101a8575f5ffd5b806306fdde03146100b5578063095ea7b3146100d357806318160ddd146100f657806323b872dd14610108578063313ce5671461011b578063395093511461012a575b5f5ffd5b6100bd6101bb565b6040516100ca9190610745565b60405180910390f35b6100e66100e1366004610795565b61024b565b60405190151581526020016100ca565b6002545b6040519081526020016100ca565b6100e66101163660046107bd565b610264565b604051601281526020016100ca565b6100e6610138366004610795565b61027a565b61015061014b366004610795565b61029b565b005b6100fa6101603660046107f7565b6001600160a01b03165f9081526020819052604090205490565b6100bd6102a9565b6100e6610190366004610795565b6102b8565b6100e66101a3366004610795565b610342565b6100fa6101b6366004610817565b61034f565b6060600380546101ca90610848565b80601f01602080910402602001604051908101604052809291908181526020018280546101f690610848565b80156102415780601f1061021857610100808354040283529160200191610241565b820191905f5260205f20905b81548152906001019060200180831161022457829003601f168201915b5050505050905090565b5f33610258818585610379565b60019150505b92915050565b5f61027084848461049c565b5060019392505050565b5f3361025881858561028c838361034f565b6102969190610880565b610379565b6102a58282610669565b5050565b6060600480546101ca90610848565b5f33816102c5828661034f565b90508381101561032a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103378286868403610379565b506001949350505050565b5f3361025881858561049c565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103db5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610321565b6001600160a01b03821661043c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610321565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105005760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610321565b6001600160a01b0382166105625760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610321565b6001600160a01b0383165f90815260208190526040902054818110156105d95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610321565b6001600160a01b038085165f9081526020819052604080822085850390559185168152908120805484929061060f908490610880565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161065b91815260200190565b60405180910390a350505050565b6001600160a01b0382166106bf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610321565b8060025f8282546106d09190610880565b90915550506001600160a01b0382165f90815260208190526040812080548392906106fc908490610880565b90915550506040518181526001600160a01b038316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610790575f5ffd5b919050565b5f5f604083850312156107a6575f5ffd5b6107af8361077a565b946020939093013593505050565b5f5f5f606084860312156107cf575f5ffd5b6107d88461077a565b92506107e66020850161077a565b929592945050506040919091013590565b5f60208284031215610807575f5ffd5b6108108261077a565b9392505050565b5f5f60408385031215610828575f5ffd5b6108318361077a565b915061083f6020840161077a565b90509250929050565b600181811c9082168061085c57607f821691505b60208210810361087a57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561025e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212209a04aae6e5fbb6825b56c06d7ba2442cb503d85ed1076ed76e5944b01268899e64736f6c634300081c00336080604052604051610cf2380380610cf2833981016040819052610022916103b7565b828161002f82825f610043565b5061003b90508261006e565b5050506104d3565b61004c836100db565b5f825111806100585750805b1561006957610067838361011a565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6100ad5f516020610cab5f395f51905f52546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a16100d881610146565b50565b6100e4816101e1565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b606061013f8383604051806060016040528060278152602001610ccb60279139610275565b9392505050565b6001600160a01b0381166101b05760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b805f516020610cab5f395f51905f525b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0381163b61024e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101a7565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6101c0565b60606001600160a01b0384163b6102dd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101a7565b5f5f856001600160a01b0316856040516102f79190610488565b5f60405180830381855af49150503d805f811461032f576040519150601f19603f3d011682016040523d82523d5f602084013e610334565b606091505b50909250905061034582828661034f565b9695505050505050565b6060831561035e57508161013f565b82511561036e5782518084602001fd5b8160405162461bcd60e51b81526004016101a7919061049e565b80516001600160a01b038116811461039e575f5ffd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f606084860312156103c9575f5ffd5b6103d284610388565b92506103e060208501610388565b60408501519092506001600160401b038111156103fb575f5ffd5b8401601f8101861361040b575f5ffd5b80516001600160401b03811115610424576104246103a3565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610452576104526103a3565b604052818152828201602001881015610469575f5ffd5b8160208401602083015e5f602083830101528093505050509250925092565b5f82518060208501845e5f920191825250919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6107cb806104e05f395ff3fe60806040526004361061004d575f3560e01c80633659cfe6146100645780634f1ef286146100835780635c60da1b146100965780638f283970146100c6578063f851a440146100e55761005c565b3661005c5761005a6100f9565b005b61005a6100f9565b34801561006f575f5ffd5b5061005a61007e36600461068c565b610113565b61005a6100913660046106a5565b61014e565b3480156100a1575f5ffd5b506100aa6101b4565b6040516001600160a01b03909116815260200160405180910390f35b3480156100d1575f5ffd5b5061005a6100e036600461068c565b6101e4565b3480156100f0575f5ffd5b506100aa610204565b610101610224565b61011161010c6102b9565b6102c2565b565b61011b6102e0565b6001600160a01b03163303610146576101438160405180602001604052805f8152505f610312565b50565b6101436100f9565b6101566102e0565b6001600160a01b031633036101ac576101a78383838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525060019250610312915050565b505050565b6101a76100f9565b5f6101bd6102e0565b6001600160a01b031633036101d9576101d46102b9565b905090565b6101e16100f9565b90565b6101ec6102e0565b6001600160a01b03163303610146576101438161033c565b5f61020d6102e0565b6001600160a01b031633036101d9576101d46102e0565b61022c6102e0565b6001600160a01b031633036101115760405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b5f6101d4610390565b365f5f375f5f365f845af43d5f5f3e8080156102dc573d5ff35b3d5ffd5b5f7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b61031b836103b7565b5f825111806103275750805b156101a75761033683836103f6565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6103656102e0565b604080516001600160a01b03928316815291841660208301520160405180910390a161014381610422565b5f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610303565b6103c0816104cb565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b606061041b838360405180606001604052806027815260200161076f6027913961055f565b9392505050565b6001600160a01b0381166104875760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084016102b0565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0381163b6105385760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016102b0565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6104aa565b60606001600160a01b0384163b6105c75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016102b0565b5f5f856001600160a01b0316856040516105e19190610723565b5f60405180830381855af49150503d805f8114610619576040519150601f19603f3d011682016040523d82523d5f602084013e61061e565b606091505b509150915061062e828286610638565b9695505050505050565b6060831561064757508161041b565b8251156106575782518084602001fd5b8160405162461bcd60e51b81526004016102b09190610739565b80356001600160a01b0381168114610687575f5ffd5b919050565b5f6020828403121561069c575f5ffd5b61041b82610671565b5f5f5f604084860312156106b7575f5ffd5b6106c084610671565b9250602084013567ffffffffffffffff8111156106db575f5ffd5b8401601f810186136106eb575f5ffd5b803567ffffffffffffffff811115610701575f5ffd5b866020828401011115610712575f5ffd5b939660209190910195509293505050565b5f82518060208501845e5f920191825250919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f8301168401019150509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b8a8d1625a9ca10466731217315d098ef9c2609c47b7d8ef5a3315947ca6f92864736f6c634300081c0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65642e6164647265737365732e626173655374726174656779496d706c656d656e746174696f6e2e6164647265737365732e6f70657261746f725374617465526574726965766572885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d746f6b656e5f616e645f73747261746567795f6465706c6f796d656e745f6f7574707574a2646970667358221220bb6473ac2f6cb078380960f833d32b097a379bed2707e8d5dceee2794968f54164736f6c634300081c0033
    /// ```
    #[rustfmt::skip]
    #[allow(clippy::all)]
    pub static DEPLOYED_BYTECODE: alloy_sol_types::private::Bytes = alloy_sol_types::private::Bytes::from_static(
        b"`\x80`@R4\x80\x15a\0\x0FW__\xFD[P`\x046\x10a\x004W_5`\xE0\x1C\x80c\xC0@b&\x14a\08W\x80c\xF8\xCC\xBFG\x14a\0BW[__\xFD[a\0@a\0iV[\0[`\x0CTa\0U\x90b\x01\0\0\x90\x04`\xFF\x16\x81V[`@Q\x90\x15\x15\x81R` \x01`@Q\x80\x91\x03\x90\xF3[s_\xBD\xB21Vx\xAF\xEC\xB3g\xF02\xD9?d/d\x18\n\xA3_a\0\x87a\x03,V[\x90P_a\0\x92a\x05\x9FV[\x90P___Q` a-\xCD_9_Q\x90_R_\x1C`\x01`\x01`\xA0\x1B\x03\x16c\x7F\xB5)\x7F`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01_`@Q\x80\x83\x03\x81_\x87\x80;\x15\x80\x15a\0\xDDW__\xFD[PZ\xF1\x15\x80\x15a\0\xEFW=__>=_\xFD[PPPP__Q` a-\xCD_9_Q\x90_R_\x1C`\x01`\x01`\xA0\x1B\x03\x16cB\xCB\xB1\\`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x01?W=__>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x01c\x91\x90a\x11yV[\x90PFazi\x14\x80a\x01vWPFa\x059\x14[\x15a\x02!Wa\x01\x96\x85_\x01Q\x86` \x01Q\x87`\xE0\x01Q\x88`@\x01Qa\x08GV[`@\x80Qc\x0F\xE7\x85\x85`\xE3\x1B\x81R`\x04\x81\x01\x91\x90\x91R`\x11`D\x82\x01Rperc20MockStrategy`x\x1B`d\x82\x01R`\x01`\x01`\xA0\x1B\x03\x80\x83\x16`$\x83\x01R\x91\x95P\x91\x93P\x87\x16\x90c\x7F<,(\x90`\x84\x01_`@Q\x80\x83\x03\x81_\x87\x80;\x15\x80\x15a\x02\x06W__\xFD[PZ\xF1\x15\x80\x15a\x02\x18W=__>=_\xFD[PPPPa\x02\xB9V[FaBh\x03a\x02]Ws\\\x8BUr/B\x15V\xA2\xAA\xFBz>\xA6=L>QC\x12\x92Ps?\x1CT{!\xF6^\x10H\r\xE3\xAD\x8E\x19\xFA\xACF\xC9P4\x91Pa\x02\xB9V[`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FConfigure Token and Strategy for`D\x82\x01Re\x10!\xB40\xB4\xB7`\xD1\x1B`d\x82\x01R`\x84\x01[`@Q\x80\x91\x03\x90\xFD[a\x02\xC7\x84` \x01Q\x84a\x0CXV[_Q` a-\xCD_9_Q\x90_R_\x1C`\x01`\x01`\xA0\x1B\x03\x16cv\xEA\xDD6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01_`@Q\x80\x83\x03\x81_\x87\x80;\x15\x80\x15a\x03\x0EW__\xFD[PZ\xF1\x15\x80\x15a\x03 W=__>=_\xFD[PPPPPPPPPPV[`@\x80Qa\x01\0\x81\x01\x82R_\x80\x82R` \x82\x01\x81\x90R\x91\x81\x01\x82\x90R``\x81\x01\x82\x90R`\x80\x81\x01\x82\x90R`\xA0\x81\x01\x82\x90R`\xC0\x81\x01\x82\x90R`\xE0\x81\x01\x91\x90\x91R_a\x03\xAB`@Q\x80`@\x01`@R\x80`\x1C\x81R` \x01\x7Feigenlayer_deployment_output\0\0\0\0\x81RPa\reV[\x90P_a\x03\xED\x82`@Q\x80`@\x01`@R\x80`\x1F\x81R` \x01\x7F.addresses.eigenLayerProxyAdmin\0\x81RPa\x0FWV[\x90P_a\x04/\x83`@Q\x80`@\x01`@R\x80`\x1E\x81R` \x01\x7F.addresses.eigenLayerPauserReg\0\0\x81RPa\x0FWV[\x90P_a\x04q\x84`@Q\x80`@\x01`@R\x80`\x1A\x81R` \x01\x7F.addresses.strategyManager\0\0\0\0\0\0\x81RPa\x0FWV[\x90P_a\x04\xAB\x85`@Q\x80`@\x01`@R\x80`\x15\x81R` \x01t\x170\xB2292\xB9\xB9\xB2\xB9\x9722\xB62\xB3\xB0\xBA4\xB7\xB7`Y\x1B\x81RPa\x0FWV[\x90P_a\x04\xED\x86`@Q\x80`@\x01`@R\x80`\x17\x81R` \x01\x7F.addresses.avsDirectory\0\0\0\0\0\0\0\0\0\x81RPa\x0FWV[\x90P_a\x05$\x87`@Q\x80`@\x01`@R\x80`\x12\x81R` \x01q\x170\xB2292\xB9\xB9\xB2\xB9\x979\xB60\xB9\xB42\xB9`q\x1B\x81RPa\x0FWV[\x90P_a\x05I\x88`@Q\x80``\x01`@R\x80`%\x81R` \x01a-\x87`%\x919a\x0FWV[`@\x80Qa\x01\0\x81\x01\x82R`\x01`\x01`\xA0\x1B\x03\x99\x8A\x16\x81R\x97\x89\x16` \x89\x01R\x95\x88\x16\x95\x87\x01\x95\x90\x95RP\x91\x85\x16``\x85\x01R\x90\x84\x16`\x80\x84\x01R\x83\x16`\xA0\x83\x01R_`\xC0\x83\x01R\x90\x91\x16`\xE0\x82\x01R\x92\x91PPV[`@\x80Q``\x81\x01\x82R_\x80\x82R` \x82\x01\x81\x90R\x91\x81\x01\x91\x90\x91R_a\x05\xFA`@Q\x80`@\x01`@R\x80`\x19\x81R` \x01\x7Fmockavs_deployment_output\0\0\0\0\0\0\0\x81RPa\reV[\x90P_a\x06<\x82`@Q\x80`@\x01`@R\x80` \x81R` \x01\x7F.addresses.mockAvsServiceManager\x81RPa\x0FWV[\x90P`\x01`\x01`\xA0\x1B\x03\x81\x16a\x06\xBAW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`:`$\x82\x01R\x7FMockAvsContractsParser: mockAvsS`D\x82\x01R\x7FerviceManager address is 0\0\0\0\0\0\0`d\x82\x01R`\x84\x01a\x02\xB0V[_a\x06\xFA\x83`@Q\x80`@\x01`@R\x80`\x1E\x81R` \x01\x7F.addresses.registryCoordinator\0\0\x81RPa\x0FWV[\x90P`\x01`\x01`\xA0\x1B\x03\x81\x16a\x07xW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`8`$\x82\x01R\x7FMockAvsContractsParser: registry`D\x82\x01R\x7FCoordinator address is 0\0\0\0\0\0\0\0\0`d\x82\x01R`\x84\x01a\x02\xB0V[_a\x07\x9B\x84`@Q\x80``\x01`@R\x80`!\x81R` \x01a-\xAC`!\x919a\x0FWV[\x90P`\x01`\x01`\xA0\x1B\x03\x81\x16a\x08\x19W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`;`$\x82\x01R\x7FMockAvsContractsParser: operator`D\x82\x01R\x7FStateRetriever address is 0\0\0\0\0\0`d\x82\x01R`\x84\x01a\x02\xB0V[`@\x80Q``\x81\x01\x82R`\x01`\x01`\xA0\x1B\x03\x94\x85\x16\x81R\x92\x84\x16` \x84\x01R\x92\x16\x91\x81\x01\x91\x90\x91R\x92\x91PPV[___`@Qa\x08V\x90a\x11_V[`@Q\x80\x91\x03\x90_\xF0\x80\x15\x80\x15a\x08oW=__>=_\xFD[P`\rT`@Qc@\xC1\x0F\x19`\xE0\x1B\x81R2`\x04\x82\x01R`$\x81\x01\x91\x90\x91R\x90\x91P`\x01`\x01`\xA0\x1B\x03\x82\x16\x90c@\xC1\x0F\x19\x90`D\x01_`@Q\x80\x83\x03\x81_\x87\x80;\x15\x80\x15a\x08\xBCW__\xFD[PZ\xF1\x15\x80\x15a\x08\xCEW=__>=_\xFD[PP`@\x80Qh65\xC9\xAD\xC5\xDE\xA0\0\0`$\x82\x01\x81\x90R`D\x82\x01R`\x01`\x01`\xA0\x1B\x03\x85\x81\x16`d\x83\x01R\x8A\x16`\x84\x80\x83\x01\x91\x90\x91R\x82Q\x80\x83\x03\x90\x91\x01\x81R`\xA4\x90\x91\x01\x82R` \x81\x01\x80Q`\x01`\x01`\xE0\x1B\x03\x16c\x01\x9E')`\xE0\x1B\x17\x90R\x90Q_\x93P\x88\x92P\x8A\x91\x90a\tD\x90a\x11lV[a\tP\x93\x92\x91\x90a\x11\xBEV[`@Q\x80\x91\x03\x90_\xF0\x80\x15\x80\x15a\tiW=__>=_\xFD[P`@\x80Q`\x01\x80\x82R\x81\x83\x01\x90\x92R\x91\x92P_\x91\x90` \x80\x83\x01\x90\x806\x837\x01\x90PP\x90P\x81\x81_\x81Q\x81\x10a\t\xA2Wa\t\xA2a\x11\xFDV[`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16` \x92\x83\x02\x91\x90\x91\x01\x90\x91\x01R`@\x80Q`\x01\x80\x82R\x81\x83\x01\x90\x92R_\x91\x81` \x01` \x82\x02\x806\x837\x01\x90PP\x90P_\x81_\x81Q\x81\x10a\t\xF1Wa\t\xF1a\x11\xFDV[\x91\x15\x15` \x92\x83\x02\x91\x90\x91\x01\x90\x91\x01R`@Qc\xDF[5G`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x88\x16\x90c\xDF[5G\x90a\n/\x90\x85\x90\x85\x90`\x04\x01a\x12\x11V[_`@Q\x80\x83\x03\x81_\x87\x80;\x15\x80\x15a\nFW__\xFD[PZ\xF1\x15\x80\x15a\nXW=__>=_\xFD[PP`@\x80Q\x80\x82\x01\x82R`\r\x81Rl\x1C\x18\\\x99[\x9D\x08\x1B\xD8\x9A\x99X\xDD`\x9A\x1B` \x80\x83\x01\x91\x90\x91R\x82Q\x80\x84\x01\x84R`\t\x81Rhaddresses`\xB8\x1B\x91\x81\x01\x91\x90\x91R\x91QcK\x9601`\xE1\x1B\x81R\x90\x93P\x90\x91Psq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x97,`b\x90a\n\xDE\x90\x84\x90\x8A\x90`\x04\x01a\x12\x9CV[_`@Q\x80\x83\x03\x81_\x87Z\xF1\x15\x80\x15a\n\xF9W=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x0B \x91\x90\x81\x01\x90a\x12\xE8V[P`@QcK\x9601`\xE1\x1B\x81R_\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x97,`b\x90a\x0B\\\x90\x85\x90\x8A\x90`\x04\x01a\x13\x9BV[_`@Q\x80\x83\x03\x81_\x87Z\xF1\x15\x80\x15a\x0BwW=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x0B\x9E\x91\x90\x81\x01\x90a\x12\xE8V[`@Qc\x88\xDAm5`\xE0\x1B\x81R\x90\x91P_\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x88\xDAm5\x90a\x0B\xDE\x90\x87\x90\x87\x90\x87\x90`\x04\x01a\x13\xEFV[_`@Q\x80\x83\x03\x81_\x87Z\xF1\x15\x80\x15a\x0B\xF9W=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x0C \x91\x90\x81\x01\x90a\x12\xE8V[\x90Pa\x0CD\x81`@Q\x80``\x01`@R\x80`$\x81R` \x01a-\xED`$\x919a\x0F\xD8V[P\x95\x9C\x94\x9BP\x93\x99PPPPPPPPPPV[`@\x80Q``\x81\x01\x82Ra'\x10\x81Ra:\x98` \x82\x01R`d\x81\x83\x01R\x81Q`\x01\x80\x82R\x81\x84\x01\x90\x93R\x90\x91_\x91\x82\x91\x81` \x01[`@\x80Q\x80\x82\x01\x90\x91R_\x80\x82R` \x82\x01R\x81R` \x01\x90`\x01\x90\x03\x90\x81a\x0C\x8DW\x90PP\x90P`@Q\x80`@\x01`@R\x80\x85`\x01`\x01`\xA0\x1B\x03\x16\x81R` \x01g\r\xE0\xB6\xB3\xA7d\0\0`\x01`\x01``\x1B\x03\x16\x81RP\x81_\x81Q\x81\x10a\x0C\xF6Wa\x0C\xF6a\x11\xFDV[` \x90\x81\x02\x91\x90\x91\x01\x01R`@Qc\x1A\xEBi\x91`\xE3\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x86\x16\x90c\xD7[L\x88\x90a\r1\x90\x86\x90\x86\x90\x86\x90`\x04\x01a\x141V[_`@Q\x80\x83\x03\x81_\x87\x80;\x15\x80\x15a\rHW__\xFD[PZ\xF1\x15\x80\x15a\rZW=__>=_\xFD[PPPPPPPPPV[``__Q` a-\xCD_9_Q\x90_R_\x1C`\x01`\x01`\xA0\x1B\x03\x16c\xD90\xA0\xE6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01_`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\r\xB2W=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\r\xD9\x91\x90\x81\x01\x90a\x12\xE8V[`@Q` \x01a\r\xE9\x91\x90a\x14\xE6V[`@\x80Q\x80\x83\x03`\x1F\x19\x01\x81R\x90\x82\x90Rc4\x80Q\xD7`\xE1\x1B\x82RF`\x04\x83\x01R\x91P_\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90ci\0\xA3\xAE\x90`$\x01_`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x0EGW=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x0En\x91\x90\x81\x01\x90a\x12\xE8V[`@Q` \x01a\x0E~\x91\x90a\x15\x10V[`@Q` \x81\x83\x03\x03\x81R\x90`@R\x90P_\x84`@Q` \x01a\x0E\xA1\x91\x90a\x15,V[`@\x80Q`\x1F\x19\x81\x84\x03\x01\x81R\x90\x82\x90R\x91Psq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c`\xF9\xBB\x11\x90a\x0E\xE2\x90\x86\x90\x86\x90\x86\x90` \x01a\x15LV[`@Q` \x81\x83\x03\x03\x81R\x90`@R`@Q\x82c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01a\x0F\r\x91\x90a\x15iV[_`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x0F'W=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x0FN\x91\x90\x81\x01\x90a\x12\xE8V[\x95\x94PPPPPV[`@Qc\x1E\x19\xE6W`\xE0\x1B\x81R_\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\x1E\x19\xE6W\x90a\x0F\x92\x90\x86\x90\x86\x90`\x04\x01a\x15{V[` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x0F\xADW=__>=_\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x0F\xD1\x91\x90a\x15\x9FV[\x93\x92PPPV[__Q` a-\xCD_9_Q\x90_R_\x1C`\x01`\x01`\xA0\x1B\x03\x16c\xD90\xA0\xE6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01_`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x10#W=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x10J\x91\x90\x81\x01\x90a\x12\xE8V[`@Q` \x01a\x10Z\x91\x90a\x14\xE6V[`@\x80Q\x80\x83\x03`\x1F\x19\x01\x81R\x90\x82\x90Rc4\x80Q\xD7`\xE1\x1B\x82RF`\x04\x83\x01R\x91P_\x90sq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90ci\0\xA3\xAE\x90`$\x01_`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x10\xB8W=__>=_\xFD[PPPP`@Q=_\x82>`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01`@Ra\x10\xDF\x91\x90\x81\x01\x90a\x12\xE8V[`@Q` \x01a\x10\xEF\x91\x90a\x15\x10V[`@Q` \x81\x83\x03\x03\x81R\x90`@R\x90P_\x82\x82\x85`@Q` \x01a\x11\x16\x93\x92\x91\x90a\x15\xC5V[`@\x80Q`\x1F\x19\x81\x84\x03\x01\x81R\x90\x82\x90Rc\xE2<\xD1\x9F`\xE0\x1B\x82R\x91Psq\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-\x90c\xE2<\xD1\x9F\x90a\r1\x90\x88\x90\x85\x90`\x04\x01a\x15{V[a\n\xA7\x80a\x15\xEE\x839\x01\x90V[a\x0C\xF2\x80a \x95\x839\x01\x90V[_` \x82\x84\x03\x12\x15a\x11\x89W__\xFD[PQ\x91\x90PV[_\x81Q\x80\x84R\x80` \x84\x01` \x86\x01^_` \x82\x86\x01\x01R` `\x1F\x19`\x1F\x83\x01\x16\x85\x01\x01\x91PP\x92\x91PPV[`\x01`\x01`\xA0\x1B\x03\x84\x81\x16\x82R\x83\x16` \x82\x01R```@\x82\x01\x81\x90R_\x90a\x0FN\x90\x83\x01\x84a\x11\x90V[cNH{q`\xE0\x1B_R`A`\x04R`$_\xFD[cNH{q`\xE0\x1B_R`2`\x04R`$_\xFD[`@\x80\x82R\x83Q\x90\x82\x01\x81\x90R_\x90` \x85\x01\x90``\x84\x01\x90\x83[\x81\x81\x10\x15a\x12SW\x83Q`\x01`\x01`\xA0\x1B\x03\x16\x83R` \x93\x84\x01\x93\x90\x92\x01\x91`\x01\x01a\x12,V[PP\x83\x81\x03` \x80\x86\x01\x91\x90\x91R\x85Q\x80\x83R\x91\x81\x01\x92P\x85\x01\x90_[\x81\x81\x10\x15a\x12\x90W\x82Q\x15\x15\x84R` \x93\x84\x01\x93\x90\x92\x01\x91`\x01\x01a\x12pV[P\x91\x96\x95PPPPPPV[``\x81R_a\x12\xAE``\x83\x01\x85a\x11\x90V[\x82\x81\x03` \x80\x85\x01\x91\x90\x91R`\t\x82Rherc20mock`\xB8\x1B\x90\x82\x01R`\x01`\x01`\xA0\x1B\x03\x93\x90\x93\x16`@\x92\x83\x01RP\x01\x91\x90PV[_` \x82\x84\x03\x12\x15a\x12\xF8W__\xFD[\x81Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\x13\x0EW__\xFD[\x82\x01`\x1F\x81\x01\x84\x13a\x13\x1EW__\xFD[\x80Qg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\x138Wa\x138a\x11\xE9V[`@Q`\x1F\x82\x01`\x1F\x19\x90\x81\x16`?\x01\x16\x81\x01g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x82\x82\x10\x17\x15a\x13gWa\x13ga\x11\xE9V[`@R\x81\x81R\x82\x82\x01` \x01\x86\x10\x15a\x13~W__\xFD[\x81` \x84\x01` \x83\x01^_\x91\x81\x01` \x01\x91\x90\x91R\x94\x93PPPPV[``\x81R_a\x13\xAD``\x83\x01\x85a\x11\x90V[\x82\x81\x03` \x80\x85\x01\x91\x90\x91R`\x11\x82Rperc20mockstrategy`x\x1B\x90\x82\x01R`\x01`\x01`\xA0\x1B\x03\x93\x90\x93\x16`@\x92\x83\x01RP\x01\x91\x90PV[``\x81R_a\x14\x01``\x83\x01\x86a\x11\x90V[\x82\x81\x03` \x84\x01Ra\x14\x13\x81\x86a\x11\x90V[\x90P\x82\x81\x03`@\x84\x01Ra\x14'\x81\x85a\x11\x90V[\x96\x95PPPPPPV[_`\xA0\x82\x01c\xFF\xFF\xFF\xFF\x86Q\x16\x83Ra\xFF\xFF` \x87\x01Q\x16` \x84\x01Ra\xFF\xFF`@\x87\x01Q\x16`@\x84\x01R`\x01`\x01``\x1B\x03\x85\x16``\x84\x01R`\xA0`\x80\x84\x01R\x80\x84Q\x80\x83R`\xC0\x85\x01\x91P` \x86\x01\x92P_[\x81\x81\x10\x15a\x14\xC2W\x83Q\x80Q`\x01`\x01`\xA0\x1B\x03\x16\x84R` \x90\x81\x01Q`\x01`\x01``\x1B\x03\x16\x81\x85\x01R\x90\x93\x01\x92`@\x90\x92\x01\x91`\x01\x01a\x14\x86V[P\x90\x97\x96PPPPPPPV[_\x81Q\x80` \x84\x01\x85^_\x93\x01\x92\x83RP\x90\x91\x90PV[_a\x14\xF1\x82\x84a\x14\xCFV[n/script/output/`\x88\x1B\x81R`\x0F\x01\x93\x92PPPV[_a\x15\x1B\x82\x84a\x14\xCFV[`/`\xF8\x1B\x81R`\x01\x01\x93\x92PPPV[_a\x157\x82\x84a\x14\xCFV[d\x1759\xB7\xB7`\xD9\x1B\x81R`\x05\x01\x93\x92PPPV[_a\x0FNa\x15ca\x15]\x84\x88a\x14\xCFV[\x86a\x14\xCFV[\x84a\x14\xCFV[` \x81R_a\x0F\xD1` \x83\x01\x84a\x11\x90V[`@\x81R_a\x15\x8D`@\x83\x01\x85a\x11\x90V[\x82\x81\x03` \x84\x01Ra\x0FN\x81\x85a\x11\x90V[_` \x82\x84\x03\x12\x15a\x15\xAFW__\xFD[\x81Q`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x0F\xD1W__\xFD[_a\x15\xD6a\x15ca\x15]\x84\x88a\x14\xCFV[d\x1759\xB7\xB7`\xD9\x1B\x81R`\x05\x01\x95\x94PPPPPV\xFE`\x80`@R4\x80\x15a\0\x0FW__\xFD[P`@Q\x80`@\x01`@R\x80`\n\x81R` \x01i&\xB7\xB1\xB5\x90*7\xB5\xB2\xB7`\xB1\x1B\x81RP`@Q\x80`@\x01`@R\x80`\x03\x81R` \x01bMCK`\xE8\x1B\x81RP\x81`\x03\x90\x81a\0^\x91\x90a\x01\x0BV[P`\x04a\0k\x82\x82a\x01\x0BV[PPPa\x01\xC5V[cNH{q`\xE0\x1B_R`A`\x04R`$_\xFD[`\x01\x81\x81\x1C\x90\x82\x16\x80a\0\x9BW`\x7F\x82\x16\x91P[` \x82\x10\x81\x03a\0\xB9WcNH{q`\xE0\x1B_R`\"`\x04R`$_\xFD[P\x91\x90PV[`\x1F\x82\x11\x15a\x01\x06W\x80_R` _ `\x1F\x84\x01`\x05\x1C\x81\x01` \x85\x10\x15a\0\xE4WP\x80[`\x1F\x84\x01`\x05\x1C\x82\x01\x91P[\x81\x81\x10\x15a\x01\x03W_\x81U`\x01\x01a\0\xF0V[PP[PPPV[\x81Q`\x01`\x01`@\x1B\x03\x81\x11\x15a\x01$Wa\x01$a\0sV[a\x018\x81a\x012\x84Ta\0\x87V[\x84a\0\xBFV[` `\x1F\x82\x11`\x01\x81\x14a\x01jW_\x83\x15a\x01SWP\x84\x82\x01Q[_\x19`\x03\x85\x90\x1B\x1C\x19\x16`\x01\x84\x90\x1B\x17\x84Ua\x01\x03V[_\x84\x81R` \x81 `\x1F\x19\x85\x16\x91[\x82\x81\x10\x15a\x01\x99W\x87\x85\x01Q\x82U` \x94\x85\x01\x94`\x01\x90\x92\x01\x91\x01a\x01yV[P\x84\x82\x10\x15a\x01\xB6W\x86\x84\x01Q_\x19`\x03\x87\x90\x1B`\xF8\x16\x1C\x19\x16\x81U[PPPP`\x01\x90\x81\x1B\x01\x90UPV[a\x08\xD5\x80a\x01\xD2_9_\xF3\xFE`\x80`@R4\x80\x15a\0\x0FW__\xFD[P`\x046\x10a\0\xB1W_5`\xE0\x1C\x80c@\xC1\x0F\x19\x11a\0nW\x80c@\xC1\x0F\x19\x14a\x01=W\x80cp\xA0\x821\x14a\x01RW\x80c\x95\xD8\x9BA\x14a\x01zW\x80c\xA4W\xC2\xD7\x14a\x01\x82W\x80c\xA9\x05\x9C\xBB\x14a\x01\x95W\x80c\xDDb\xED>\x14a\x01\xA8W__\xFD[\x80c\x06\xFD\xDE\x03\x14a\0\xB5W\x80c\t^\xA7\xB3\x14a\0\xD3W\x80c\x18\x16\r\xDD\x14a\0\xF6W\x80c#\xB8r\xDD\x14a\x01\x08W\x80c1<\xE5g\x14a\x01\x1BW\x80c9P\x93Q\x14a\x01*W[__\xFD[a\0\xBDa\x01\xBBV[`@Qa\0\xCA\x91\x90a\x07EV[`@Q\x80\x91\x03\x90\xF3[a\0\xE6a\0\xE16`\x04a\x07\x95V[a\x02KV[`@Q\x90\x15\x15\x81R` \x01a\0\xCAV[`\x02T[`@Q\x90\x81R` \x01a\0\xCAV[a\0\xE6a\x01\x166`\x04a\x07\xBDV[a\x02dV[`@Q`\x12\x81R` \x01a\0\xCAV[a\0\xE6a\x0186`\x04a\x07\x95V[a\x02zV[a\x01Pa\x01K6`\x04a\x07\x95V[a\x02\x9BV[\0[a\0\xFAa\x01`6`\x04a\x07\xF7V[`\x01`\x01`\xA0\x1B\x03\x16_\x90\x81R` \x81\x90R`@\x90 T\x90V[a\0\xBDa\x02\xA9V[a\0\xE6a\x01\x906`\x04a\x07\x95V[a\x02\xB8V[a\0\xE6a\x01\xA36`\x04a\x07\x95V[a\x03BV[a\0\xFAa\x01\xB66`\x04a\x08\x17V[a\x03OV[```\x03\x80Ta\x01\xCA\x90a\x08HV[\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x92\x91\x90\x81\x81R` \x01\x82\x80Ta\x01\xF6\x90a\x08HV[\x80\x15a\x02AW\x80`\x1F\x10a\x02\x18Wa\x01\0\x80\x83T\x04\x02\x83R\x91` \x01\x91a\x02AV[\x82\x01\x91\x90_R` _ \x90[\x81T\x81R\x90`\x01\x01\x90` \x01\x80\x83\x11a\x02$W\x82\x90\x03`\x1F\x16\x82\x01\x91[PPPPP\x90P\x90V[_3a\x02X\x81\x85\x85a\x03yV[`\x01\x91PP[\x92\x91PPV[_a\x02p\x84\x84\x84a\x04\x9CV[P`\x01\x93\x92PPPV[_3a\x02X\x81\x85\x85a\x02\x8C\x83\x83a\x03OV[a\x02\x96\x91\x90a\x08\x80V[a\x03yV[a\x02\xA5\x82\x82a\x06iV[PPV[```\x04\x80Ta\x01\xCA\x90a\x08HV[_3\x81a\x02\xC5\x82\x86a\x03OV[\x90P\x83\x81\x10\x15a\x03*W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`%`$\x82\x01R\x7FERC20: decreased allowance below`D\x82\x01Rd zero`\xD8\x1B`d\x82\x01R`\x84\x01[`@Q\x80\x91\x03\x90\xFD[a\x037\x82\x86\x86\x84\x03a\x03yV[P`\x01\x94\x93PPPPV[_3a\x02X\x81\x85\x85a\x04\x9CV[`\x01`\x01`\xA0\x1B\x03\x91\x82\x16_\x90\x81R`\x01` \x90\x81R`@\x80\x83 \x93\x90\x94\x16\x82R\x91\x90\x91R T\x90V[`\x01`\x01`\xA0\x1B\x03\x83\x16a\x03\xDBW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`$\x80\x82\x01R\x7FERC20: approve from the zero add`D\x82\x01Rcress`\xE0\x1B`d\x82\x01R`\x84\x01a\x03!V[`\x01`\x01`\xA0\x1B\x03\x82\x16a\x04<W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`\"`$\x82\x01R\x7FERC20: approve to the zero addre`D\x82\x01Rass`\xF0\x1B`d\x82\x01R`\x84\x01a\x03!V[`\x01`\x01`\xA0\x1B\x03\x83\x81\x16_\x81\x81R`\x01` \x90\x81R`@\x80\x83 \x94\x87\x16\x80\x84R\x94\x82R\x91\x82\x90 \x85\x90U\x90Q\x84\x81R\x7F\x8C[\xE1\xE5\xEB\xEC}[\xD1OqB}\x1E\x84\xF3\xDD\x03\x14\xC0\xF7\xB2)\x1E[ \n\xC8\xC7\xC3\xB9%\x91\x01`@Q\x80\x91\x03\x90\xA3PPPV[`\x01`\x01`\xA0\x1B\x03\x83\x16a\x05\0W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`%`$\x82\x01R\x7FERC20: transfer from the zero ad`D\x82\x01Rddress`\xD8\x1B`d\x82\x01R`\x84\x01a\x03!V[`\x01`\x01`\xA0\x1B\x03\x82\x16a\x05bW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`#`$\x82\x01R\x7FERC20: transfer to the zero addr`D\x82\x01Rbess`\xE8\x1B`d\x82\x01R`\x84\x01a\x03!V[`\x01`\x01`\xA0\x1B\x03\x83\x16_\x90\x81R` \x81\x90R`@\x90 T\x81\x81\x10\x15a\x05\xD9W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FERC20: transfer amount exceeds b`D\x82\x01Realance`\xD0\x1B`d\x82\x01R`\x84\x01a\x03!V[`\x01`\x01`\xA0\x1B\x03\x80\x85\x16_\x90\x81R` \x81\x90R`@\x80\x82 \x85\x85\x03\x90U\x91\x85\x16\x81R\x90\x81 \x80T\x84\x92\x90a\x06\x0F\x90\x84\x90a\x08\x80V[\x92PP\x81\x90UP\x82`\x01`\x01`\xA0\x1B\x03\x16\x84`\x01`\x01`\xA0\x1B\x03\x16\x7F\xDD\xF2R\xAD\x1B\xE2\xC8\x9Bi\xC2\xB0h\xFC7\x8D\xAA\x95+\xA7\xF1c\xC4\xA1\x16(\xF5ZM\xF5#\xB3\xEF\x84`@Qa\x06[\x91\x81R` \x01\x90V[`@Q\x80\x91\x03\x90\xA3PPPPV[`\x01`\x01`\xA0\x1B\x03\x82\x16a\x06\xBFW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`\x1F`$\x82\x01R\x7FERC20: mint to the zero address\0`D\x82\x01R`d\x01a\x03!V[\x80`\x02_\x82\x82Ta\x06\xD0\x91\x90a\x08\x80V[\x90\x91UPP`\x01`\x01`\xA0\x1B\x03\x82\x16_\x90\x81R` \x81\x90R`@\x81 \x80T\x83\x92\x90a\x06\xFC\x90\x84\x90a\x08\x80V[\x90\x91UPP`@Q\x81\x81R`\x01`\x01`\xA0\x1B\x03\x83\x16\x90_\x90\x7F\xDD\xF2R\xAD\x1B\xE2\xC8\x9Bi\xC2\xB0h\xFC7\x8D\xAA\x95+\xA7\xF1c\xC4\xA1\x16(\xF5ZM\xF5#\xB3\xEF\x90` \x01`@Q\x80\x91\x03\x90\xA3PPV[` \x81R_\x82Q\x80` \x84\x01R\x80` \x85\x01`@\x85\x01^_`@\x82\x85\x01\x01R`@`\x1F\x19`\x1F\x83\x01\x16\x84\x01\x01\x91PP\x92\x91PPV[\x805`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x07\x90W__\xFD[\x91\x90PV[__`@\x83\x85\x03\x12\x15a\x07\xA6W__\xFD[a\x07\xAF\x83a\x07zV[\x94` \x93\x90\x93\x015\x93PPPV[___``\x84\x86\x03\x12\x15a\x07\xCFW__\xFD[a\x07\xD8\x84a\x07zV[\x92Pa\x07\xE6` \x85\x01a\x07zV[\x92\x95\x92\x94PPP`@\x91\x90\x91\x015\x90V[_` \x82\x84\x03\x12\x15a\x08\x07W__\xFD[a\x08\x10\x82a\x07zV[\x93\x92PPPV[__`@\x83\x85\x03\x12\x15a\x08(W__\xFD[a\x081\x83a\x07zV[\x91Pa\x08?` \x84\x01a\x07zV[\x90P\x92P\x92\x90PV[`\x01\x81\x81\x1C\x90\x82\x16\x80a\x08\\W`\x7F\x82\x16\x91P[` \x82\x10\x81\x03a\x08zWcNH{q`\xE0\x1B_R`\"`\x04R`$_\xFD[P\x91\x90PV[\x80\x82\x01\x80\x82\x11\x15a\x02^WcNH{q`\xE0\x1B_R`\x11`\x04R`$_\xFD\xFE\xA2dipfsX\"\x12 \x9A\x04\xAA\xE6\xE5\xFB\xB6\x82[V\xC0m{\xA2D,\xB5\x03\xD8^\xD1\x07n\xD7nYD\xB0\x12h\x89\x9EdsolcC\0\x08\x1C\x003`\x80`@R`@Qa\x0C\xF28\x03\x80a\x0C\xF2\x839\x81\x01`@\x81\x90Ra\0\"\x91a\x03\xB7V[\x82\x81a\0/\x82\x82_a\0CV[Pa\0;\x90P\x82a\0nV[PPPa\x04\xD3V[a\0L\x83a\0\xDBV[_\x82Q\x11\x80a\0XWP\x80[\x15a\0iWa\0g\x83\x83a\x01\x1AV[P[PPPV[\x7F~dMyB/\x17\xC0\x1EH\x94\xB5\xF4\xF5\x88\xD31\xEB\xFA(e=B\xAE\x83-\xC5\x9E8\xC9y\x8Fa\0\xAD_Q` a\x0C\xAB_9_Q\x90_RT`\x01`\x01`\xA0\x1B\x03\x16\x90V[`@\x80Q`\x01`\x01`\xA0\x1B\x03\x92\x83\x16\x81R\x91\x84\x16` \x83\x01R\x01`@Q\x80\x91\x03\x90\xA1a\0\xD8\x81a\x01FV[PV[a\0\xE4\x81a\x01\xE1V[`@Q`\x01`\x01`\xA0\x1B\x03\x82\x16\x90\x7F\xBC|\xD7Z \xEE'\xFD\x9A\xDE\xBA\xB3 A\xF7U!M\xBCk\xFF\xA9\x0C\xC0\"[9\xDA.\\-;\x90_\x90\xA2PV[``a\x01?\x83\x83`@Q\x80``\x01`@R\x80`'\x81R` \x01a\x0C\xCB`'\x919a\x02uV[\x93\x92PPPV[`\x01`\x01`\xA0\x1B\x03\x81\x16a\x01\xB0W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FERC1967: new admin is the zero a`D\x82\x01Reddress`\xD0\x1B`d\x82\x01R`\x84\x01[`@Q\x80\x91\x03\x90\xFD[\x80_Q` a\x0C\xAB_9_Q\x90_R[\x80T`\x01`\x01`\xA0\x1B\x03\x19\x16`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UPV[`\x01`\x01`\xA0\x1B\x03\x81\x16;a\x02NW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`-`$\x82\x01R\x7FERC1967: new implementation is n`D\x82\x01Rl\x1B\xDD\x08\x18H\x18\xDB\xDB\x9D\x1C\x98X\xDD`\x9A\x1B`d\x82\x01R`\x84\x01a\x01\xA7V[\x80\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBCa\x01\xC0V[```\x01`\x01`\xA0\x1B\x03\x84\x16;a\x02\xDDW`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FAddress: delegate call to non-co`D\x82\x01Re\x1B\x9D\x1C\x98X\xDD`\xD2\x1B`d\x82\x01R`\x84\x01a\x01\xA7V[__\x85`\x01`\x01`\xA0\x1B\x03\x16\x85`@Qa\x02\xF7\x91\x90a\x04\x88V[_`@Q\x80\x83\x03\x81\x85Z\xF4\x91PP=\x80_\x81\x14a\x03/W`@Q\x91P`\x1F\x19`?=\x01\x16\x82\x01`@R=\x82R=_` \x84\x01>a\x034V[``\x91P[P\x90\x92P\x90Pa\x03E\x82\x82\x86a\x03OV[\x96\x95PPPPPPV[``\x83\x15a\x03^WP\x81a\x01?V[\x82Q\x15a\x03nW\x82Q\x80\x84` \x01\xFD[\x81`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\xA7\x91\x90a\x04\x9EV[\x80Q`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x03\x9EW__\xFD[\x91\x90PV[cNH{q`\xE0\x1B_R`A`\x04R`$_\xFD[___``\x84\x86\x03\x12\x15a\x03\xC9W__\xFD[a\x03\xD2\x84a\x03\x88V[\x92Pa\x03\xE0` \x85\x01a\x03\x88V[`@\x85\x01Q\x90\x92P`\x01`\x01`@\x1B\x03\x81\x11\x15a\x03\xFBW__\xFD[\x84\x01`\x1F\x81\x01\x86\x13a\x04\x0BW__\xFD[\x80Q`\x01`\x01`@\x1B\x03\x81\x11\x15a\x04$Wa\x04$a\x03\xA3V[`@Q`\x1F\x82\x01`\x1F\x19\x90\x81\x16`?\x01\x16\x81\x01`\x01`\x01`@\x1B\x03\x81\x11\x82\x82\x10\x17\x15a\x04RWa\x04Ra\x03\xA3V[`@R\x81\x81R\x82\x82\x01` \x01\x88\x10\x15a\x04iW__\xFD[\x81` \x84\x01` \x83\x01^_` \x83\x83\x01\x01R\x80\x93PPPP\x92P\x92P\x92V[_\x82Q\x80` \x85\x01\x84^_\x92\x01\x91\x82RP\x91\x90PV[` \x81R_\x82Q\x80` \x84\x01R\x80` \x85\x01`@\x85\x01^_`@\x82\x85\x01\x01R`@`\x1F\x19`\x1F\x83\x01\x16\x84\x01\x01\x91PP\x92\x91PPV[a\x07\xCB\x80a\x04\xE0_9_\xF3\xFE`\x80`@R`\x046\x10a\0MW_5`\xE0\x1C\x80c6Y\xCF\xE6\x14a\0dW\x80cO\x1E\xF2\x86\x14a\0\x83W\x80c\\`\xDA\x1B\x14a\0\x96W\x80c\x8F(9p\x14a\0\xC6W\x80c\xF8Q\xA4@\x14a\0\xE5Wa\0\\V[6a\0\\Wa\0Za\0\xF9V[\0[a\0Za\0\xF9V[4\x80\x15a\0oW__\xFD[Pa\0Za\0~6`\x04a\x06\x8CV[a\x01\x13V[a\0Za\0\x916`\x04a\x06\xA5V[a\x01NV[4\x80\x15a\0\xA1W__\xFD[Pa\0\xAAa\x01\xB4V[`@Q`\x01`\x01`\xA0\x1B\x03\x90\x91\x16\x81R` \x01`@Q\x80\x91\x03\x90\xF3[4\x80\x15a\0\xD1W__\xFD[Pa\0Za\0\xE06`\x04a\x06\x8CV[a\x01\xE4V[4\x80\x15a\0\xF0W__\xFD[Pa\0\xAAa\x02\x04V[a\x01\x01a\x02$V[a\x01\x11a\x01\x0Ca\x02\xB9V[a\x02\xC2V[V[a\x01\x1Ba\x02\xE0V[`\x01`\x01`\xA0\x1B\x03\x163\x03a\x01FWa\x01C\x81`@Q\x80` \x01`@R\x80_\x81RP_a\x03\x12V[PV[a\x01Ca\0\xF9V[a\x01Va\x02\xE0V[`\x01`\x01`\xA0\x1B\x03\x163\x03a\x01\xACWa\x01\xA7\x83\x83\x83\x80\x80`\x1F\x01` \x80\x91\x04\x02` \x01`@Q\x90\x81\x01`@R\x80\x93\x92\x91\x90\x81\x81R` \x01\x83\x83\x80\x82\x847_\x92\x01\x91\x90\x91RP`\x01\x92Pa\x03\x12\x91PPV[PPPV[a\x01\xA7a\0\xF9V[_a\x01\xBDa\x02\xE0V[`\x01`\x01`\xA0\x1B\x03\x163\x03a\x01\xD9Wa\x01\xD4a\x02\xB9V[\x90P\x90V[a\x01\xE1a\0\xF9V[\x90V[a\x01\xECa\x02\xE0V[`\x01`\x01`\xA0\x1B\x03\x163\x03a\x01FWa\x01C\x81a\x03<V[_a\x02\ra\x02\xE0V[`\x01`\x01`\xA0\x1B\x03\x163\x03a\x01\xD9Wa\x01\xD4a\x02\xE0V[a\x02,a\x02\xE0V[`\x01`\x01`\xA0\x1B\x03\x163\x03a\x01\x11W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`B`$\x82\x01R\x7FTransparentUpgradeableProxy: adm`D\x82\x01R\x7Fin cannot fallback to proxy targ`d\x82\x01Ra\x19]`\xF2\x1B`\x84\x82\x01R`\xA4\x01[`@Q\x80\x91\x03\x90\xFD[_a\x01\xD4a\x03\x90V[6__7__6_\x84Z\xF4=__>\x80\x80\x15a\x02\xDCW=_\xF3[=_\xFD[_\x7F\xB51'hJV\x8B1s\xAE\x13\xB9\xF8\xA6\x01n$>c\xB6\xE8\xEE\x11x\xD6\xA7\x17\x85\x0B]a\x03[T`\x01`\x01`\xA0\x1B\x03\x16\x91\x90PV[a\x03\x1B\x83a\x03\xB7V[_\x82Q\x11\x80a\x03'WP\x80[\x15a\x01\xA7Wa\x036\x83\x83a\x03\xF6V[PPPPV[\x7F~dMyB/\x17\xC0\x1EH\x94\xB5\xF4\xF5\x88\xD31\xEB\xFA(e=B\xAE\x83-\xC5\x9E8\xC9y\x8Fa\x03ea\x02\xE0V[`@\x80Q`\x01`\x01`\xA0\x1B\x03\x92\x83\x16\x81R\x91\x84\x16` \x83\x01R\x01`@Q\x80\x91\x03\x90\xA1a\x01C\x81a\x04\"V[_\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBCa\x03\x03V[a\x03\xC0\x81a\x04\xCBV[`@Q`\x01`\x01`\xA0\x1B\x03\x82\x16\x90\x7F\xBC|\xD7Z \xEE'\xFD\x9A\xDE\xBA\xB3 A\xF7U!M\xBCk\xFF\xA9\x0C\xC0\"[9\xDA.\\-;\x90_\x90\xA2PV[``a\x04\x1B\x83\x83`@Q\x80``\x01`@R\x80`'\x81R` \x01a\x07o`'\x919a\x05_V[\x93\x92PPPV[`\x01`\x01`\xA0\x1B\x03\x81\x16a\x04\x87W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FERC1967: new admin is the zero a`D\x82\x01Reddress`\xD0\x1B`d\x82\x01R`\x84\x01a\x02\xB0V[\x80\x7F\xB51'hJV\x8B1s\xAE\x13\xB9\xF8\xA6\x01n$>c\xB6\xE8\xEE\x11x\xD6\xA7\x17\x85\x0B]a\x03[\x80T`\x01`\x01`\xA0\x1B\x03\x19\x16`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UPV[`\x01`\x01`\xA0\x1B\x03\x81\x16;a\x058W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`-`$\x82\x01R\x7FERC1967: new implementation is n`D\x82\x01Rl\x1B\xDD\x08\x18H\x18\xDB\xDB\x9D\x1C\x98X\xDD`\x9A\x1B`d\x82\x01R`\x84\x01a\x02\xB0V[\x80\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBCa\x04\xAAV[```\x01`\x01`\xA0\x1B\x03\x84\x16;a\x05\xC7W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`&`$\x82\x01R\x7FAddress: delegate call to non-co`D\x82\x01Re\x1B\x9D\x1C\x98X\xDD`\xD2\x1B`d\x82\x01R`\x84\x01a\x02\xB0V[__\x85`\x01`\x01`\xA0\x1B\x03\x16\x85`@Qa\x05\xE1\x91\x90a\x07#V[_`@Q\x80\x83\x03\x81\x85Z\xF4\x91PP=\x80_\x81\x14a\x06\x19W`@Q\x91P`\x1F\x19`?=\x01\x16\x82\x01`@R=\x82R=_` \x84\x01>a\x06\x1EV[``\x91P[P\x91P\x91Pa\x06.\x82\x82\x86a\x068V[\x96\x95PPPPPPV[``\x83\x15a\x06GWP\x81a\x04\x1BV[\x82Q\x15a\x06WW\x82Q\x80\x84` \x01\xFD[\x81`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x02\xB0\x91\x90a\x079V[\x805`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x06\x87W__\xFD[\x91\x90PV[_` \x82\x84\x03\x12\x15a\x06\x9CW__\xFD[a\x04\x1B\x82a\x06qV[___`@\x84\x86\x03\x12\x15a\x06\xB7W__\xFD[a\x06\xC0\x84a\x06qV[\x92P` \x84\x015g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\x06\xDBW__\xFD[\x84\x01`\x1F\x81\x01\x86\x13a\x06\xEBW__\xFD[\x805g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\x07\x01W__\xFD[\x86` \x82\x84\x01\x01\x11\x15a\x07\x12W__\xFD[\x93\x96` \x91\x90\x91\x01\x95P\x92\x93PPPV[_\x82Q\x80` \x85\x01\x84^_\x92\x01\x91\x82RP\x91\x90PV[` \x81R_\x82Q\x80` \x84\x01R\x80` \x85\x01`@\x85\x01^_`@\x82\x85\x01\x01R`@`\x1F\x19`\x1F\x83\x01\x16\x84\x01\x01\x91PP\x92\x91PPV\xFEAddress: low-level delegate call failed\xA2dipfsX\"\x12 \xB8\xA8\xD1bZ\x9C\xA1\x04fs\x12\x171]\t\x8E\xF9\xC2`\x9CG\xB7\xD8\xEFZ3\x15\x94|\xA6\xF9(dsolcC\0\x08\x1C\x003\xB51'hJV\x8B1s\xAE\x13\xB9\xF8\xA6\x01n$>c\xB6\xE8\xEE\x11x\xD6\xA7\x17\x85\x0B]a\x03Address: low-level delegate call failed.addresses.baseStrategyImplementation.addresses.operatorStateRetriever\x88\\\xB6\x92@\xA95\xD62\xD7\x9C1q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-token_and_strategy_deployment_output\xA2dipfsX\"\x12 \xBBds\xAC/l\xB0x8\t`\xF83\xD3+\tz7\x9B\xED'\x07\xE8\xD5\xDC\xEE\xE2yIh\xF5AdsolcC\0\x08\x1C\x003",
    );
    /**Function with signature `IS_SCRIPT()` and selector `0xf8ccbf47`.
```solidity
function IS_SCRIPT() external view returns (bool);
```*/
    #[allow(non_camel_case_types, non_snake_case, clippy::pub_underscore_fields)]
    #[derive(Clone)]
    pub struct IS_SCRIPTCall {}
    ///Container type for the return parameters of the [`IS_SCRIPT()`](IS_SCRIPTCall) function.
    #[allow(non_camel_case_types, non_snake_case, clippy::pub_underscore_fields)]
    #[derive(Clone)]
    pub struct IS_SCRIPTReturn {
        pub _0: bool,
    }
    #[allow(
        non_camel_case_types,
        non_snake_case,
        clippy::pub_underscore_fields,
        clippy::style
    )]
    const _: () = {
        use alloy::sol_types as alloy_sol_types;
        {
            #[doc(hidden)]
            type UnderlyingSolTuple<'a> = ();
            #[doc(hidden)]
            type UnderlyingRustTuple<'a> = ();
            #[cfg(test)]
            #[allow(dead_code, unreachable_patterns)]
            fn _type_assertion(
                _t: alloy_sol_types::private::AssertTypeEq<UnderlyingRustTuple>,
            ) {
                match _t {
                    alloy_sol_types::private::AssertTypeEq::<
                        <UnderlyingSolTuple as alloy_sol_types::SolType>::RustType,
                    >(_) => {}
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<IS_SCRIPTCall> for UnderlyingRustTuple<'_> {
                fn from(value: IS_SCRIPTCall) -> Self {
                    ()
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<UnderlyingRustTuple<'_>> for IS_SCRIPTCall {
                fn from(tuple: UnderlyingRustTuple<'_>) -> Self {
                    Self {}
                }
            }
        }
        {
            #[doc(hidden)]
            type UnderlyingSolTuple<'a> = (alloy::sol_types::sol_data::Bool,);
            #[doc(hidden)]
            type UnderlyingRustTuple<'a> = (bool,);
            #[cfg(test)]
            #[allow(dead_code, unreachable_patterns)]
            fn _type_assertion(
                _t: alloy_sol_types::private::AssertTypeEq<UnderlyingRustTuple>,
            ) {
                match _t {
                    alloy_sol_types::private::AssertTypeEq::<
                        <UnderlyingSolTuple as alloy_sol_types::SolType>::RustType,
                    >(_) => {}
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<IS_SCRIPTReturn> for UnderlyingRustTuple<'_> {
                fn from(value: IS_SCRIPTReturn) -> Self {
                    (value._0,)
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<UnderlyingRustTuple<'_>> for IS_SCRIPTReturn {
                fn from(tuple: UnderlyingRustTuple<'_>) -> Self {
                    Self { _0: tuple.0 }
                }
            }
        }
        #[automatically_derived]
        impl alloy_sol_types::SolCall for IS_SCRIPTCall {
            type Parameters<'a> = ();
            type Token<'a> = <Self::Parameters<
                'a,
            > as alloy_sol_types::SolType>::Token<'a>;
            type Return = IS_SCRIPTReturn;
            type ReturnTuple<'a> = (alloy::sol_types::sol_data::Bool,);
            type ReturnToken<'a> = <Self::ReturnTuple<
                'a,
            > as alloy_sol_types::SolType>::Token<'a>;
            const SIGNATURE: &'static str = "IS_SCRIPT()";
            const SELECTOR: [u8; 4] = [248u8, 204u8, 191u8, 71u8];
            #[inline]
            fn new<'a>(
                tuple: <Self::Parameters<'a> as alloy_sol_types::SolType>::RustType,
            ) -> Self {
                tuple.into()
            }
            #[inline]
            fn tokenize(&self) -> Self::Token<'_> {
                ()
            }
            #[inline]
            fn abi_decode_returns(
                data: &[u8],
                validate: bool,
            ) -> alloy_sol_types::Result<Self::Return> {
                <Self::ReturnTuple<
                    '_,
                > as alloy_sol_types::SolType>::abi_decode_sequence(data, validate)
                    .map(Into::into)
            }
        }
    };
    /**Function with signature `run()` and selector `0xc0406226`.
```solidity
function run() external;
```*/
    #[allow(non_camel_case_types, non_snake_case, clippy::pub_underscore_fields)]
    #[derive(Clone)]
    pub struct runCall {}
    ///Container type for the return parameters of the [`run()`](runCall) function.
    #[allow(non_camel_case_types, non_snake_case, clippy::pub_underscore_fields)]
    #[derive(Clone)]
    pub struct runReturn {}
    #[allow(
        non_camel_case_types,
        non_snake_case,
        clippy::pub_underscore_fields,
        clippy::style
    )]
    const _: () = {
        use alloy::sol_types as alloy_sol_types;
        {
            #[doc(hidden)]
            type UnderlyingSolTuple<'a> = ();
            #[doc(hidden)]
            type UnderlyingRustTuple<'a> = ();
            #[cfg(test)]
            #[allow(dead_code, unreachable_patterns)]
            fn _type_assertion(
                _t: alloy_sol_types::private::AssertTypeEq<UnderlyingRustTuple>,
            ) {
                match _t {
                    alloy_sol_types::private::AssertTypeEq::<
                        <UnderlyingSolTuple as alloy_sol_types::SolType>::RustType,
                    >(_) => {}
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<runCall> for UnderlyingRustTuple<'_> {
                fn from(value: runCall) -> Self {
                    ()
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<UnderlyingRustTuple<'_>> for runCall {
                fn from(tuple: UnderlyingRustTuple<'_>) -> Self {
                    Self {}
                }
            }
        }
        {
            #[doc(hidden)]
            type UnderlyingSolTuple<'a> = ();
            #[doc(hidden)]
            type UnderlyingRustTuple<'a> = ();
            #[cfg(test)]
            #[allow(dead_code, unreachable_patterns)]
            fn _type_assertion(
                _t: alloy_sol_types::private::AssertTypeEq<UnderlyingRustTuple>,
            ) {
                match _t {
                    alloy_sol_types::private::AssertTypeEq::<
                        <UnderlyingSolTuple as alloy_sol_types::SolType>::RustType,
                    >(_) => {}
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<runReturn> for UnderlyingRustTuple<'_> {
                fn from(value: runReturn) -> Self {
                    ()
                }
            }
            #[automatically_derived]
            #[doc(hidden)]
            impl ::core::convert::From<UnderlyingRustTuple<'_>> for runReturn {
                fn from(tuple: UnderlyingRustTuple<'_>) -> Self {
                    Self {}
                }
            }
        }
        #[automatically_derived]
        impl alloy_sol_types::SolCall for runCall {
            type Parameters<'a> = ();
            type Token<'a> = <Self::Parameters<
                'a,
            > as alloy_sol_types::SolType>::Token<'a>;
            type Return = runReturn;
            type ReturnTuple<'a> = ();
            type ReturnToken<'a> = <Self::ReturnTuple<
                'a,
            > as alloy_sol_types::SolType>::Token<'a>;
            const SIGNATURE: &'static str = "run()";
            const SELECTOR: [u8; 4] = [192u8, 64u8, 98u8, 38u8];
            #[inline]
            fn new<'a>(
                tuple: <Self::Parameters<'a> as alloy_sol_types::SolType>::RustType,
            ) -> Self {
                tuple.into()
            }
            #[inline]
            fn tokenize(&self) -> Self::Token<'_> {
                ()
            }
            #[inline]
            fn abi_decode_returns(
                data: &[u8],
                validate: bool,
            ) -> alloy_sol_types::Result<Self::Return> {
                <Self::ReturnTuple<
                    '_,
                > as alloy_sol_types::SolType>::abi_decode_sequence(data, validate)
                    .map(Into::into)
            }
        }
    };
    ///Container for all the [`DeployTokensStrategiesCreateQuorums`](self) function calls.
    pub enum DeployTokensStrategiesCreateQuorumsCalls {
        IS_SCRIPT(IS_SCRIPTCall),
        run(runCall),
    }
    #[automatically_derived]
    impl DeployTokensStrategiesCreateQuorumsCalls {
        /// All the selectors of this enum.
        ///
        /// Note that the selectors might not be in the same order as the variants.
        /// No guarantees are made about the order of the selectors.
        ///
        /// Prefer using `SolInterface` methods instead.
        pub const SELECTORS: &'static [[u8; 4usize]] = &[
            [192u8, 64u8, 98u8, 38u8],
            [248u8, 204u8, 191u8, 71u8],
        ];
    }
    #[automatically_derived]
    impl alloy_sol_types::SolInterface for DeployTokensStrategiesCreateQuorumsCalls {
        const NAME: &'static str = "DeployTokensStrategiesCreateQuorumsCalls";
        const MIN_DATA_LENGTH: usize = 0usize;
        const COUNT: usize = 2usize;
        #[inline]
        fn selector(&self) -> [u8; 4] {
            match self {
                Self::IS_SCRIPT(_) => {
                    <IS_SCRIPTCall as alloy_sol_types::SolCall>::SELECTOR
                }
                Self::run(_) => <runCall as alloy_sol_types::SolCall>::SELECTOR,
            }
        }
        #[inline]
        fn selector_at(i: usize) -> ::core::option::Option<[u8; 4]> {
            Self::SELECTORS.get(i).copied()
        }
        #[inline]
        fn valid_selector(selector: [u8; 4]) -> bool {
            Self::SELECTORS.binary_search(&selector).is_ok()
        }
        #[inline]
        #[allow(non_snake_case)]
        fn abi_decode_raw(
            selector: [u8; 4],
            data: &[u8],
            validate: bool,
        ) -> alloy_sol_types::Result<Self> {
            static DECODE_SHIMS: &[fn(
                &[u8],
                bool,
            ) -> alloy_sol_types::Result<DeployTokensStrategiesCreateQuorumsCalls>] = &[
                {
                    fn run(
                        data: &[u8],
                        validate: bool,
                    ) -> alloy_sol_types::Result<
                        DeployTokensStrategiesCreateQuorumsCalls,
                    > {
                        <runCall as alloy_sol_types::SolCall>::abi_decode_raw(
                                data,
                                validate,
                            )
                            .map(DeployTokensStrategiesCreateQuorumsCalls::run)
                    }
                    run
                },
                {
                    fn IS_SCRIPT(
                        data: &[u8],
                        validate: bool,
                    ) -> alloy_sol_types::Result<
                        DeployTokensStrategiesCreateQuorumsCalls,
                    > {
                        <IS_SCRIPTCall as alloy_sol_types::SolCall>::abi_decode_raw(
                                data,
                                validate,
                            )
                            .map(DeployTokensStrategiesCreateQuorumsCalls::IS_SCRIPT)
                    }
                    IS_SCRIPT
                },
            ];
            let Ok(idx) = Self::SELECTORS.binary_search(&selector) else {
                return Err(
                    alloy_sol_types::Error::unknown_selector(
                        <Self as alloy_sol_types::SolInterface>::NAME,
                        selector,
                    ),
                );
            };
            DECODE_SHIMS[idx](data, validate)
        }
        #[inline]
        fn abi_encoded_size(&self) -> usize {
            match self {
                Self::IS_SCRIPT(inner) => {
                    <IS_SCRIPTCall as alloy_sol_types::SolCall>::abi_encoded_size(inner)
                }
                Self::run(inner) => {
                    <runCall as alloy_sol_types::SolCall>::abi_encoded_size(inner)
                }
            }
        }
        #[inline]
        fn abi_encode_raw(&self, out: &mut alloy_sol_types::private::Vec<u8>) {
            match self {
                Self::IS_SCRIPT(inner) => {
                    <IS_SCRIPTCall as alloy_sol_types::SolCall>::abi_encode_raw(
                        inner,
                        out,
                    )
                }
                Self::run(inner) => {
                    <runCall as alloy_sol_types::SolCall>::abi_encode_raw(inner, out)
                }
            }
        }
    }
    use alloy::contract as alloy_contract;
    /**Creates a new wrapper around an on-chain [`DeployTokensStrategiesCreateQuorums`](self) contract instance.

See the [wrapper's documentation](`DeployTokensStrategiesCreateQuorumsInstance`) for more details.*/
    #[inline]
    pub const fn new<
        T: alloy_contract::private::Transport + ::core::clone::Clone,
        P: alloy_contract::private::Provider<T, N>,
        N: alloy_contract::private::Network,
    >(
        address: alloy_sol_types::private::Address,
        provider: P,
    ) -> DeployTokensStrategiesCreateQuorumsInstance<T, P, N> {
        DeployTokensStrategiesCreateQuorumsInstance::<T, P, N>::new(address, provider)
    }
    /**Deploys this contract using the given `provider` and constructor arguments, if any.

Returns a new instance of the contract, if the deployment was successful.

For more fine-grained control over the deployment process, use [`deploy_builder`] instead.*/
    #[inline]
    pub fn deploy<
        T: alloy_contract::private::Transport + ::core::clone::Clone,
        P: alloy_contract::private::Provider<T, N>,
        N: alloy_contract::private::Network,
    >(
        provider: P,
    ) -> impl ::core::future::Future<
        Output = alloy_contract::Result<
            DeployTokensStrategiesCreateQuorumsInstance<T, P, N>,
        >,
    > {
        DeployTokensStrategiesCreateQuorumsInstance::<T, P, N>::deploy(provider)
    }
    /**Creates a `RawCallBuilder` for deploying this contract using the given `provider`
and constructor arguments, if any.

This is a simple wrapper around creating a `RawCallBuilder` with the data set to
the bytecode concatenated with the constructor's ABI-encoded arguments.*/
    #[inline]
    pub fn deploy_builder<
        T: alloy_contract::private::Transport + ::core::clone::Clone,
        P: alloy_contract::private::Provider<T, N>,
        N: alloy_contract::private::Network,
    >(provider: P) -> alloy_contract::RawCallBuilder<T, P, N> {
        DeployTokensStrategiesCreateQuorumsInstance::<T, P, N>::deploy_builder(provider)
    }
    /**A [`DeployTokensStrategiesCreateQuorums`](self) instance.

Contains type-safe methods for interacting with an on-chain instance of the
[`DeployTokensStrategiesCreateQuorums`](self) contract located at a given `address`, using a given
provider `P`.

If the contract bytecode is available (see the [`sol!`](alloy_sol_types::sol!)
documentation on how to provide it), the `deploy` and `deploy_builder` methods can
be used to deploy a new instance of the contract.

See the [module-level documentation](self) for all the available methods.*/
    #[derive(Clone)]
    pub struct DeployTokensStrategiesCreateQuorumsInstance<
        T,
        P,
        N = alloy_contract::private::Ethereum,
    > {
        address: alloy_sol_types::private::Address,
        provider: P,
        _network_transport: ::core::marker::PhantomData<(N, T)>,
    }
    #[automatically_derived]
    impl<T, P, N> ::core::fmt::Debug
    for DeployTokensStrategiesCreateQuorumsInstance<T, P, N> {
        #[inline]
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple("DeployTokensStrategiesCreateQuorumsInstance")
                .field(&self.address)
                .finish()
        }
    }
    /// Instantiation and getters/setters.
    #[automatically_derived]
    impl<
        T: alloy_contract::private::Transport + ::core::clone::Clone,
        P: alloy_contract::private::Provider<T, N>,
        N: alloy_contract::private::Network,
    > DeployTokensStrategiesCreateQuorumsInstance<T, P, N> {
        /**Creates a new wrapper around an on-chain [`DeployTokensStrategiesCreateQuorums`](self) contract instance.

See the [wrapper's documentation](`DeployTokensStrategiesCreateQuorumsInstance`) for more details.*/
        #[inline]
        pub const fn new(
            address: alloy_sol_types::private::Address,
            provider: P,
        ) -> Self {
            Self {
                address,
                provider,
                _network_transport: ::core::marker::PhantomData,
            }
        }
        /**Deploys this contract using the given `provider` and constructor arguments, if any.

Returns a new instance of the contract, if the deployment was successful.

For more fine-grained control over the deployment process, use [`deploy_builder`] instead.*/
        #[inline]
        pub async fn deploy(
            provider: P,
        ) -> alloy_contract::Result<
            DeployTokensStrategiesCreateQuorumsInstance<T, P, N>,
        > {
            let call_builder = Self::deploy_builder(provider);
            let contract_address = call_builder.deploy().await?;
            Ok(Self::new(contract_address, call_builder.provider))
        }
        /**Creates a `RawCallBuilder` for deploying this contract using the given `provider`
and constructor arguments, if any.

This is a simple wrapper around creating a `RawCallBuilder` with the data set to
the bytecode concatenated with the constructor's ABI-encoded arguments.*/
        #[inline]
        pub fn deploy_builder(provider: P) -> alloy_contract::RawCallBuilder<T, P, N> {
            alloy_contract::RawCallBuilder::new_raw_deploy(
                provider,
                ::core::clone::Clone::clone(&BYTECODE),
            )
        }
        /// Returns a reference to the address.
        #[inline]
        pub const fn address(&self) -> &alloy_sol_types::private::Address {
            &self.address
        }
        /// Sets the address.
        #[inline]
        pub fn set_address(&mut self, address: alloy_sol_types::private::Address) {
            self.address = address;
        }
        /// Sets the address and returns `self`.
        pub fn at(mut self, address: alloy_sol_types::private::Address) -> Self {
            self.set_address(address);
            self
        }
        /// Returns a reference to the provider.
        #[inline]
        pub const fn provider(&self) -> &P {
            &self.provider
        }
    }
    impl<
        T,
        P: ::core::clone::Clone,
        N,
    > DeployTokensStrategiesCreateQuorumsInstance<T, &P, N> {
        /// Clones the provider and returns a new instance with the cloned provider.
        #[inline]
        pub fn with_cloned_provider(
            self,
        ) -> DeployTokensStrategiesCreateQuorumsInstance<T, P, N> {
            DeployTokensStrategiesCreateQuorumsInstance {
                address: self.address,
                provider: ::core::clone::Clone::clone(&self.provider),
                _network_transport: ::core::marker::PhantomData,
            }
        }
    }
    /// Function calls.
    #[automatically_derived]
    impl<
        T: alloy_contract::private::Transport + ::core::clone::Clone,
        P: alloy_contract::private::Provider<T, N>,
        N: alloy_contract::private::Network,
    > DeployTokensStrategiesCreateQuorumsInstance<T, P, N> {
        /// Creates a new call builder using this contract instance's provider and address.
        ///
        /// Note that the call can be any function call, not just those defined in this
        /// contract. Prefer using the other methods for building type-safe contract calls.
        pub fn call_builder<C: alloy_sol_types::SolCall>(
            &self,
            call: &C,
        ) -> alloy_contract::SolCallBuilder<T, &P, C, N> {
            alloy_contract::SolCallBuilder::new_sol(&self.provider, &self.address, call)
        }
        ///Creates a new call builder for the [`IS_SCRIPT`] function.
        pub fn IS_SCRIPT(
            &self,
        ) -> alloy_contract::SolCallBuilder<T, &P, IS_SCRIPTCall, N> {
            self.call_builder(&IS_SCRIPTCall {})
        }
        ///Creates a new call builder for the [`run`] function.
        pub fn run(&self) -> alloy_contract::SolCallBuilder<T, &P, runCall, N> {
            self.call_builder(&runCall {})
        }
    }
    /// Event filters.
    #[automatically_derived]
    impl<
        T: alloy_contract::private::Transport + ::core::clone::Clone,
        P: alloy_contract::private::Provider<T, N>,
        N: alloy_contract::private::Network,
    > DeployTokensStrategiesCreateQuorumsInstance<T, P, N> {
        /// Creates a new event filter using this contract instance's provider and address.
        ///
        /// Note that the type can be any event, not just those defined in this contract.
        /// Prefer using the other methods for building type-safe event filters.
        pub fn event_filter<E: alloy_sol_types::SolEvent>(
            &self,
        ) -> alloy_contract::Event<T, &P, E, N> {
            alloy_contract::Event::new_sol(&self.provider, &self.address)
        }
    }
}
